package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalMyDslParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_STRING", "RULE_INTEGER", "RULE_DOUBLE", "RULE_BOOLEAN", "RULE_KEYWORD", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "RULE_INT", "'__synthetic__'", "'<-'", "'model'", "'Hello'", "'from'", "'!'", "'import'", "'as'", "'@'", "'['", "']'", "'name:'", "'model:'", "';'", "'global'", "'action:'", "'loop'", "'if'", "'condition:'", "'else'", "'try'", "'catch'", "'return'", "'value:'", "'when'", "':'", "'('", "')'", "'action'", "'set'", "'{'", "'}'", "'='", "'equation:'", "'display'", "'equation'", "'solve'", "'species'", "'grid'", "'image'", "'experiment'", "'ask'", "'release'", "'capture'", "'create'", "'write'", "'error'", "'warn'", "'exception'", "'save'", "'assert'", "'inspect'", "'browse'", "'draw'", "'using'", "'switch'", "'put'", "'add'", "'remove'", "'match'", "'match_between'", "'match_one'", "'parameter'", "'status'", "'highlight'", "'focus_on'", "'layout'", "'light'", "'camera'", "'text'", "'image_layer'", "'data'", "'chart'", "'agents'", "'graphics'", "'display_population'", "'display_grid'", "'event'", "'overlay'", "'datalist'", "'mesh'", "'do'", "'invoke'", "'var'", "'const'", "'let'", "'arg'", "'init'", "'reflex'", "'aspect'", "'<<'", "'>'", "'<<+'", "'>-'", "'+<-'", "'<+'", "','", "'returns:'", "'as:'", "'of:'", "'parent:'", "'species:'", "'type:'", "'camera:'", "'data:'", "'const:'", "'topology:'", "'item:'", "'init:'", "'message:'", "'control:'", "'layout:'", "'environment:'", "'text:'", "'image:'", "'using:'", "'parameter:'", "'aspect:'", "'light:'", "'on_change:'", "'var:'", "'->'", "'::'", "'?'", "'or'", "'and'", "'!='", "'>='", "'<='", "'<'", "'+'", "'-'", "'*'", "'/'", "'^'", "'\\u00B0'", "'#'", "'my'", "'the'", "'not'", "'.'", "'**unit*'", "'**type*'", "'**action*'", "'**skill*'", "'**var*'", "'**equation*'"
    };
    public static final int T__144=144;
    public static final int T__143=143;
    public static final int T__146=146;
    public static final int T__50=50;
    public static final int T__145=145;
    public static final int T__140=140;
    public static final int T__142=142;
    public static final int T__141=141;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__137=137;
    public static final int T__52=52;
    public static final int T__136=136;
    public static final int T__53=53;
    public static final int T__139=139;
    public static final int T__54=54;
    public static final int T__138=138;
    public static final int T__133=133;
    public static final int T__132=132;
    public static final int T__60=60;
    public static final int T__135=135;
    public static final int T__61=61;
    public static final int T__134=134;
    public static final int RULE_ID=4;
    public static final int T__131=131;
    public static final int T__130=130;
    public static final int RULE_INT=14;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=10;
    public static final int T__67=67;
    public static final int T__129=129;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__126=126;
    public static final int T__63=63;
    public static final int T__125=125;
    public static final int T__64=64;
    public static final int T__128=128;
    public static final int T__65=65;
    public static final int T__127=127;
    public static final int T__161=161;
    public static final int T__160=160;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__159=159;
    public static final int T__30=30;
    public static final int T__158=158;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__155=155;
    public static final int RULE_KEYWORD=9;
    public static final int T__154=154;
    public static final int T__157=157;
    public static final int T__156=156;
    public static final int T__151=151;
    public static final int T__150=150;
    public static final int T__153=153;
    public static final int T__152=152;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__148=148;
    public static final int T__41=41;
    public static final int T__147=147;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__149=149;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int RULE_BOOLEAN=8;
    public static final int T__19=19;
    public static final int T__15=15;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__99=99;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__122=122;
    public static final int T__70=70;
    public static final int T__121=121;
    public static final int T__71=71;
    public static final int T__124=124;
    public static final int T__72=72;
    public static final int T__123=123;
    public static final int T__120=120;
    public static final int RULE_STRING=5;
    public static final int RULE_SL_COMMENT=11;
    public static final int RULE_DOUBLE=7;
    public static final int T__77=77;
    public static final int T__119=119;
    public static final int T__78=78;
    public static final int T__118=118;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__115=115;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__114=114;
    public static final int T__75=75;
    public static final int T__117=117;
    public static final int T__76=76;
    public static final int T__116=116;
    public static final int T__80=80;
    public static final int T__111=111;
    public static final int T__81=81;
    public static final int T__110=110;
    public static final int T__82=82;
    public static final int T__113=113;
    public static final int T__83=83;
    public static final int T__112=112;
    public static final int RULE_WS=12;
    public static final int RULE_ANY_OTHER=13;
    public static final int T__88=88;
    public static final int T__108=108;
    public static final int T__89=89;
    public static final int T__107=107;
    public static final int T__109=109;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int RULE_INTEGER=6;
    public static final int T__86=86;
    public static final int T__106=106;
    public static final int T__87=87;
    public static final int T__105=105;

    // delegates
    // delegators


        public InternalMyDslParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalMyDslParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalMyDslParser.tokenNames; }
    public String getGrammarFileName() { return "InternalMyDsl.g"; }



     	private MyDslGrammarAccess grammarAccess;

        public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "Entry";
       	}

       	@Override
       	protected MyDslGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleEntry"
    // InternalMyDsl.g:64:1: entryRuleEntry returns [EObject current=null] : iv_ruleEntry= ruleEntry EOF ;
    public final EObject entryRuleEntry() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEntry = null;


        try {
            // InternalMyDsl.g:64:46: (iv_ruleEntry= ruleEntry EOF )
            // InternalMyDsl.g:65:2: iv_ruleEntry= ruleEntry EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEntryRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEntry=ruleEntry();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEntry; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEntry"


    // $ANTLR start "ruleEntry"
    // InternalMyDsl.g:71:1: ruleEntry returns [EObject current=null] : ( ( ( 'Hello' | '@' | 'model' )=>this_Model_0= ruleModel ) | this_StringEvaluator_1= ruleStringEvaluator | this_StandaloneBlock_2= ruleStandaloneBlock | this_ExperimentFileStructure_3= ruleExperimentFileStructure ) ;
    public final EObject ruleEntry() throws RecognitionException {
        EObject current = null;

        EObject this_Model_0 = null;

        EObject this_StringEvaluator_1 = null;

        EObject this_StandaloneBlock_2 = null;

        EObject this_ExperimentFileStructure_3 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:77:2: ( ( ( ( 'Hello' | '@' | 'model' )=>this_Model_0= ruleModel ) | this_StringEvaluator_1= ruleStringEvaluator | this_StandaloneBlock_2= ruleStandaloneBlock | this_ExperimentFileStructure_3= ruleExperimentFileStructure ) )
            // InternalMyDsl.g:78:2: ( ( ( 'Hello' | '@' | 'model' )=>this_Model_0= ruleModel ) | this_StringEvaluator_1= ruleStringEvaluator | this_StandaloneBlock_2= ruleStandaloneBlock | this_ExperimentFileStructure_3= ruleExperimentFileStructure )
            {
            // InternalMyDsl.g:78:2: ( ( ( 'Hello' | '@' | 'model' )=>this_Model_0= ruleModel ) | this_StringEvaluator_1= ruleStringEvaluator | this_StandaloneBlock_2= ruleStandaloneBlock | this_ExperimentFileStructure_3= ruleExperimentFileStructure )
            int alt1=4;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==18) && (synpred1_InternalMyDsl())) {
                alt1=1;
            }
            else if ( (LA1_0==23) && (synpred1_InternalMyDsl())) {
                alt1=1;
            }
            else if ( (LA1_0==17) && (synpred1_InternalMyDsl())) {
                alt1=1;
            }
            else if ( (LA1_0==RULE_ID) ) {
                alt1=2;
            }
            else if ( (LA1_0==15) ) {
                alt1=3;
            }
            else if ( (LA1_0==55) ) {
                alt1=4;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 1, 0, input);

                throw nvae;
            }
            switch (alt1) {
                case 1 :
                    // InternalMyDsl.g:79:3: ( ( 'Hello' | '@' | 'model' )=>this_Model_0= ruleModel )
                    {
                    // InternalMyDsl.g:79:3: ( ( 'Hello' | '@' | 'model' )=>this_Model_0= ruleModel )
                    // InternalMyDsl.g:80:4: ( 'Hello' | '@' | 'model' )=>this_Model_0= ruleModel
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getEntryAccess().getModelParserRuleCall_0());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_Model_0=ruleModel();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Model_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:91:3: this_StringEvaluator_1= ruleStringEvaluator
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEntryAccess().getStringEvaluatorParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_StringEvaluator_1=ruleStringEvaluator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StringEvaluator_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMyDsl.g:100:3: this_StandaloneBlock_2= ruleStandaloneBlock
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEntryAccess().getStandaloneBlockParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_StandaloneBlock_2=ruleStandaloneBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StandaloneBlock_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalMyDsl.g:109:3: this_ExperimentFileStructure_3= ruleExperimentFileStructure
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEntryAccess().getExperimentFileStructureParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ExperimentFileStructure_3=ruleExperimentFileStructure();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ExperimentFileStructure_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEntry"


    // $ANTLR start "entryRuleStandaloneBlock"
    // InternalMyDsl.g:121:1: entryRuleStandaloneBlock returns [EObject current=null] : iv_ruleStandaloneBlock= ruleStandaloneBlock EOF ;
    public final EObject entryRuleStandaloneBlock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStandaloneBlock = null;


        try {
            // InternalMyDsl.g:121:56: (iv_ruleStandaloneBlock= ruleStandaloneBlock EOF )
            // InternalMyDsl.g:122:2: iv_ruleStandaloneBlock= ruleStandaloneBlock EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStandaloneBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStandaloneBlock=ruleStandaloneBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStandaloneBlock; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStandaloneBlock"


    // $ANTLR start "ruleStandaloneBlock"
    // InternalMyDsl.g:128:1: ruleStandaloneBlock returns [EObject current=null] : (otherlv_0= '__synthetic__' ( (lv_block_1_0= ruleBlock ) ) ) ;
    public final EObject ruleStandaloneBlock() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        EObject lv_block_1_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:134:2: ( (otherlv_0= '__synthetic__' ( (lv_block_1_0= ruleBlock ) ) ) )
            // InternalMyDsl.g:135:2: (otherlv_0= '__synthetic__' ( (lv_block_1_0= ruleBlock ) ) )
            {
            // InternalMyDsl.g:135:2: (otherlv_0= '__synthetic__' ( (lv_block_1_0= ruleBlock ) ) )
            // InternalMyDsl.g:136:3: otherlv_0= '__synthetic__' ( (lv_block_1_0= ruleBlock ) )
            {
            otherlv_0=(Token)match(input,15,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getStandaloneBlockAccess().get__synthetic__Keyword_0());
              		
            }
            // InternalMyDsl.g:140:3: ( (lv_block_1_0= ruleBlock ) )
            // InternalMyDsl.g:141:4: (lv_block_1_0= ruleBlock )
            {
            // InternalMyDsl.g:141:4: (lv_block_1_0= ruleBlock )
            // InternalMyDsl.g:142:5: lv_block_1_0= ruleBlock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStandaloneBlockAccess().getBlockBlockParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_block_1_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStandaloneBlockRule());
              					}
              					set(
              						current,
              						"block",
              						lv_block_1_0,
              						"org.xtext.example.mydsl.MyDsl.Block");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStandaloneBlock"


    // $ANTLR start "entryRuleStringEvaluator"
    // InternalMyDsl.g:163:1: entryRuleStringEvaluator returns [EObject current=null] : iv_ruleStringEvaluator= ruleStringEvaluator EOF ;
    public final EObject entryRuleStringEvaluator() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringEvaluator = null;


        try {
            // InternalMyDsl.g:163:56: (iv_ruleStringEvaluator= ruleStringEvaluator EOF )
            // InternalMyDsl.g:164:2: iv_ruleStringEvaluator= ruleStringEvaluator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringEvaluatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStringEvaluator=ruleStringEvaluator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringEvaluator; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringEvaluator"


    // $ANTLR start "ruleStringEvaluator"
    // InternalMyDsl.g:170:1: ruleStringEvaluator returns [EObject current=null] : ( ( (lv_toto_0_0= RULE_ID ) ) otherlv_1= '<-' ( (lv_expr_2_0= ruleExpression ) ) ) ;
    public final EObject ruleStringEvaluator() throws RecognitionException {
        EObject current = null;

        Token lv_toto_0_0=null;
        Token otherlv_1=null;
        EObject lv_expr_2_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:176:2: ( ( ( (lv_toto_0_0= RULE_ID ) ) otherlv_1= '<-' ( (lv_expr_2_0= ruleExpression ) ) ) )
            // InternalMyDsl.g:177:2: ( ( (lv_toto_0_0= RULE_ID ) ) otherlv_1= '<-' ( (lv_expr_2_0= ruleExpression ) ) )
            {
            // InternalMyDsl.g:177:2: ( ( (lv_toto_0_0= RULE_ID ) ) otherlv_1= '<-' ( (lv_expr_2_0= ruleExpression ) ) )
            // InternalMyDsl.g:178:3: ( (lv_toto_0_0= RULE_ID ) ) otherlv_1= '<-' ( (lv_expr_2_0= ruleExpression ) )
            {
            // InternalMyDsl.g:178:3: ( (lv_toto_0_0= RULE_ID ) )
            // InternalMyDsl.g:179:4: (lv_toto_0_0= RULE_ID )
            {
            // InternalMyDsl.g:179:4: (lv_toto_0_0= RULE_ID )
            // InternalMyDsl.g:180:5: lv_toto_0_0= RULE_ID
            {
            lv_toto_0_0=(Token)match(input,RULE_ID,FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_toto_0_0, grammarAccess.getStringEvaluatorAccess().getTotoIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getStringEvaluatorRule());
              					}
              					setWithLastConsumed(
              						current,
              						"toto",
              						lv_toto_0_0,
              						"org.xtext.example.mydsl.MyDsl.ID");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,16,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getStringEvaluatorAccess().getLessThanSignHyphenMinusKeyword_1());
              		
            }
            // InternalMyDsl.g:200:3: ( (lv_expr_2_0= ruleExpression ) )
            // InternalMyDsl.g:201:4: (lv_expr_2_0= ruleExpression )
            {
            // InternalMyDsl.g:201:4: (lv_expr_2_0= ruleExpression )
            // InternalMyDsl.g:202:5: lv_expr_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStringEvaluatorAccess().getExprExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expr_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStringEvaluatorRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_2_0,
              						"org.xtext.example.mydsl.MyDsl.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringEvaluator"


    // $ANTLR start "entryRuleModel"
    // InternalMyDsl.g:223:1: entryRuleModel returns [EObject current=null] : iv_ruleModel= ruleModel EOF ;
    public final EObject entryRuleModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModel = null;


        try {
            // InternalMyDsl.g:223:46: (iv_ruleModel= ruleModel EOF )
            // InternalMyDsl.g:224:2: iv_ruleModel= ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModel=ruleModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalMyDsl.g:230:1: ruleModel returns [EObject current=null] : ( ( (lv_greetings_0_0= ruleGreeting ) )* ( (lv_pragmas_1_0= rulePragma ) )* otherlv_2= 'model' ( (lv_name_3_0= RULE_ID ) ) ( (lv_imports_4_0= ruleImport ) )* ( (lv_block_5_0= ruleModelBlock ) ) ) ;
    public final EObject ruleModel() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_name_3_0=null;
        EObject lv_greetings_0_0 = null;

        EObject lv_pragmas_1_0 = null;

        EObject lv_imports_4_0 = null;

        EObject lv_block_5_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:236:2: ( ( ( (lv_greetings_0_0= ruleGreeting ) )* ( (lv_pragmas_1_0= rulePragma ) )* otherlv_2= 'model' ( (lv_name_3_0= RULE_ID ) ) ( (lv_imports_4_0= ruleImport ) )* ( (lv_block_5_0= ruleModelBlock ) ) ) )
            // InternalMyDsl.g:237:2: ( ( (lv_greetings_0_0= ruleGreeting ) )* ( (lv_pragmas_1_0= rulePragma ) )* otherlv_2= 'model' ( (lv_name_3_0= RULE_ID ) ) ( (lv_imports_4_0= ruleImport ) )* ( (lv_block_5_0= ruleModelBlock ) ) )
            {
            // InternalMyDsl.g:237:2: ( ( (lv_greetings_0_0= ruleGreeting ) )* ( (lv_pragmas_1_0= rulePragma ) )* otherlv_2= 'model' ( (lv_name_3_0= RULE_ID ) ) ( (lv_imports_4_0= ruleImport ) )* ( (lv_block_5_0= ruleModelBlock ) ) )
            // InternalMyDsl.g:238:3: ( (lv_greetings_0_0= ruleGreeting ) )* ( (lv_pragmas_1_0= rulePragma ) )* otherlv_2= 'model' ( (lv_name_3_0= RULE_ID ) ) ( (lv_imports_4_0= ruleImport ) )* ( (lv_block_5_0= ruleModelBlock ) )
            {
            // InternalMyDsl.g:238:3: ( (lv_greetings_0_0= ruleGreeting ) )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==18) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // InternalMyDsl.g:239:4: (lv_greetings_0_0= ruleGreeting )
            	    {
            	    // InternalMyDsl.g:239:4: (lv_greetings_0_0= ruleGreeting )
            	    // InternalMyDsl.g:240:5: lv_greetings_0_0= ruleGreeting
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getModelAccess().getGreetingsGreetingParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_6);
            	    lv_greetings_0_0=ruleGreeting();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getModelRule());
            	      					}
            	      					add(
            	      						current,
            	      						"greetings",
            	      						lv_greetings_0_0,
            	      						"org.xtext.example.mydsl.MyDsl.Greeting");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);

            // InternalMyDsl.g:257:3: ( (lv_pragmas_1_0= rulePragma ) )*
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==23) ) {
                    alt3=1;
                }


                switch (alt3) {
            	case 1 :
            	    // InternalMyDsl.g:258:4: (lv_pragmas_1_0= rulePragma )
            	    {
            	    // InternalMyDsl.g:258:4: (lv_pragmas_1_0= rulePragma )
            	    // InternalMyDsl.g:259:5: lv_pragmas_1_0= rulePragma
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getModelAccess().getPragmasPragmaParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_7);
            	    lv_pragmas_1_0=rulePragma();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getModelRule());
            	      					}
            	      					add(
            	      						current,
            	      						"pragmas",
            	      						lv_pragmas_1_0,
            	      						"org.xtext.example.mydsl.MyDsl.Pragma");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);

            otherlv_2=(Token)match(input,17,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getModelAccess().getModelKeyword_2());
              		
            }
            // InternalMyDsl.g:280:3: ( (lv_name_3_0= RULE_ID ) )
            // InternalMyDsl.g:281:4: (lv_name_3_0= RULE_ID )
            {
            // InternalMyDsl.g:281:4: (lv_name_3_0= RULE_ID )
            // InternalMyDsl.g:282:5: lv_name_3_0= RULE_ID
            {
            lv_name_3_0=(Token)match(input,RULE_ID,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_3_0, grammarAccess.getModelAccess().getNameIDTerminalRuleCall_3_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getModelRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_3_0,
              						"org.xtext.example.mydsl.MyDsl.ID");
              				
            }

            }


            }

            // InternalMyDsl.g:298:3: ( (lv_imports_4_0= ruleImport ) )*
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==21) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    // InternalMyDsl.g:299:4: (lv_imports_4_0= ruleImport )
            	    {
            	    // InternalMyDsl.g:299:4: (lv_imports_4_0= ruleImport )
            	    // InternalMyDsl.g:300:5: lv_imports_4_0= ruleImport
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getModelAccess().getImportsImportParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_9);
            	    lv_imports_4_0=ruleImport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getModelRule());
            	      					}
            	      					add(
            	      						current,
            	      						"imports",
            	      						lv_imports_4_0,
            	      						"org.xtext.example.mydsl.MyDsl.Import");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);

            // InternalMyDsl.g:317:3: ( (lv_block_5_0= ruleModelBlock ) )
            // InternalMyDsl.g:318:4: (lv_block_5_0= ruleModelBlock )
            {
            // InternalMyDsl.g:318:4: (lv_block_5_0= ruleModelBlock )
            // InternalMyDsl.g:319:5: lv_block_5_0= ruleModelBlock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getModelAccess().getBlockModelBlockParserRuleCall_5_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_block_5_0=ruleModelBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getModelRule());
              					}
              					set(
              						current,
              						"block",
              						lv_block_5_0,
              						"org.xtext.example.mydsl.MyDsl.ModelBlock");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleModelBlock"
    // InternalMyDsl.g:340:1: entryRuleModelBlock returns [EObject current=null] : iv_ruleModelBlock= ruleModelBlock EOF ;
    public final EObject entryRuleModelBlock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModelBlock = null;


        try {
            // InternalMyDsl.g:340:51: (iv_ruleModelBlock= ruleModelBlock EOF )
            // InternalMyDsl.g:341:2: iv_ruleModelBlock= ruleModelBlock EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModelBlock=ruleModelBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModelBlock; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModelBlock"


    // $ANTLR start "ruleModelBlock"
    // InternalMyDsl.g:347:1: ruleModelBlock returns [EObject current=null] : ( () ( (lv_statements_1_0= ruleS_Section ) )* ) ;
    public final EObject ruleModelBlock() throws RecognitionException {
        EObject current = null;

        EObject lv_statements_1_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:353:2: ( ( () ( (lv_statements_1_0= ruleS_Section ) )* ) )
            // InternalMyDsl.g:354:2: ( () ( (lv_statements_1_0= ruleS_Section ) )* )
            {
            // InternalMyDsl.g:354:2: ( () ( (lv_statements_1_0= ruleS_Section ) )* )
            // InternalMyDsl.g:355:3: () ( (lv_statements_1_0= ruleS_Section ) )*
            {
            // InternalMyDsl.g:355:3: ()
            // InternalMyDsl.g:356:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getModelBlockAccess().getBlockAction_0(),
              					current);
              			
            }

            }

            // InternalMyDsl.g:362:3: ( (lv_statements_1_0= ruleS_Section ) )*
            loop5:
            do {
                int alt5=2;
                int LA5_0 = input.LA(1);

                if ( (LA5_0==29||(LA5_0>=52 && LA5_0<=53)||LA5_0==55) ) {
                    alt5=1;
                }


                switch (alt5) {
            	case 1 :
            	    // InternalMyDsl.g:363:4: (lv_statements_1_0= ruleS_Section )
            	    {
            	    // InternalMyDsl.g:363:4: (lv_statements_1_0= ruleS_Section )
            	    // InternalMyDsl.g:364:5: lv_statements_1_0= ruleS_Section
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getModelBlockAccess().getStatementsS_SectionParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_10);
            	    lv_statements_1_0=ruleS_Section();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getModelBlockRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_1_0,
            	      						"org.xtext.example.mydsl.MyDsl.S_Section");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop5;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModelBlock"


    // $ANTLR start "entryRuleGreeting"
    // InternalMyDsl.g:385:1: entryRuleGreeting returns [EObject current=null] : iv_ruleGreeting= ruleGreeting EOF ;
    public final EObject entryRuleGreeting() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGreeting = null;


        try {
            // InternalMyDsl.g:385:49: (iv_ruleGreeting= ruleGreeting EOF )
            // InternalMyDsl.g:386:2: iv_ruleGreeting= ruleGreeting EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGreetingRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleGreeting=ruleGreeting();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGreeting; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGreeting"


    // $ANTLR start "ruleGreeting"
    // InternalMyDsl.g:392:1: ruleGreeting returns [EObject current=null] : (otherlv_0= 'Hello' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'from' ( (otherlv_3= RULE_ID ) ) )? otherlv_4= '!' ) ;
    public final EObject ruleGreeting() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_4=null;


        	enterRule();

        try {
            // InternalMyDsl.g:398:2: ( (otherlv_0= 'Hello' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'from' ( (otherlv_3= RULE_ID ) ) )? otherlv_4= '!' ) )
            // InternalMyDsl.g:399:2: (otherlv_0= 'Hello' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'from' ( (otherlv_3= RULE_ID ) ) )? otherlv_4= '!' )
            {
            // InternalMyDsl.g:399:2: (otherlv_0= 'Hello' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'from' ( (otherlv_3= RULE_ID ) ) )? otherlv_4= '!' )
            // InternalMyDsl.g:400:3: otherlv_0= 'Hello' ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= 'from' ( (otherlv_3= RULE_ID ) ) )? otherlv_4= '!'
            {
            otherlv_0=(Token)match(input,18,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getGreetingAccess().getHelloKeyword_0());
              		
            }
            // InternalMyDsl.g:404:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalMyDsl.g:405:4: (lv_name_1_0= RULE_ID )
            {
            // InternalMyDsl.g:405:4: (lv_name_1_0= RULE_ID )
            // InternalMyDsl.g:406:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getGreetingAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGreetingRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.xtext.example.mydsl.MyDsl.ID");
              				
            }

            }


            }

            // InternalMyDsl.g:422:3: (otherlv_2= 'from' ( (otherlv_3= RULE_ID ) ) )?
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==19) ) {
                alt6=1;
            }
            switch (alt6) {
                case 1 :
                    // InternalMyDsl.g:423:4: otherlv_2= 'from' ( (otherlv_3= RULE_ID ) )
                    {
                    otherlv_2=(Token)match(input,19,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getGreetingAccess().getFromKeyword_2_0());
                      			
                    }
                    // InternalMyDsl.g:427:4: ( (otherlv_3= RULE_ID ) )
                    // InternalMyDsl.g:428:5: (otherlv_3= RULE_ID )
                    {
                    // InternalMyDsl.g:428:5: (otherlv_3= RULE_ID )
                    // InternalMyDsl.g:429:6: otherlv_3= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getGreetingRule());
                      						}
                      					
                    }
                    otherlv_3=(Token)match(input,RULE_ID,FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_3, grammarAccess.getGreetingAccess().getFromGreetingCrossReference_2_1_0());
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,20,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getGreetingAccess().getExclamationMarkKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGreeting"


    // $ANTLR start "entryRuleImport"
    // InternalMyDsl.g:449:1: entryRuleImport returns [EObject current=null] : iv_ruleImport= ruleImport EOF ;
    public final EObject entryRuleImport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImport = null;


        try {
            // InternalMyDsl.g:449:47: (iv_ruleImport= ruleImport EOF )
            // InternalMyDsl.g:450:2: iv_ruleImport= ruleImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImport=ruleImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImport"


    // $ANTLR start "ruleImport"
    // InternalMyDsl.g:456:1: ruleImport returns [EObject current=null] : (otherlv_0= 'import' ( (lv_importURI_1_0= RULE_STRING ) ) (otherlv_2= 'as' ( (lv_name_3_0= ruleValid_ID ) ) )? ) ;
    public final EObject ruleImport() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_importURI_1_0=null;
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_name_3_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:462:2: ( (otherlv_0= 'import' ( (lv_importURI_1_0= RULE_STRING ) ) (otherlv_2= 'as' ( (lv_name_3_0= ruleValid_ID ) ) )? ) )
            // InternalMyDsl.g:463:2: (otherlv_0= 'import' ( (lv_importURI_1_0= RULE_STRING ) ) (otherlv_2= 'as' ( (lv_name_3_0= ruleValid_ID ) ) )? )
            {
            // InternalMyDsl.g:463:2: (otherlv_0= 'import' ( (lv_importURI_1_0= RULE_STRING ) ) (otherlv_2= 'as' ( (lv_name_3_0= ruleValid_ID ) ) )? )
            // InternalMyDsl.g:464:3: otherlv_0= 'import' ( (lv_importURI_1_0= RULE_STRING ) ) (otherlv_2= 'as' ( (lv_name_3_0= ruleValid_ID ) ) )?
            {
            otherlv_0=(Token)match(input,21,FOLLOW_13); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getImportAccess().getImportKeyword_0());
              		
            }
            // InternalMyDsl.g:468:3: ( (lv_importURI_1_0= RULE_STRING ) )
            // InternalMyDsl.g:469:4: (lv_importURI_1_0= RULE_STRING )
            {
            // InternalMyDsl.g:469:4: (lv_importURI_1_0= RULE_STRING )
            // InternalMyDsl.g:470:5: lv_importURI_1_0= RULE_STRING
            {
            lv_importURI_1_0=(Token)match(input,RULE_STRING,FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_importURI_1_0, grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getImportRule());
              					}
              					setWithLastConsumed(
              						current,
              						"importURI",
              						lv_importURI_1_0,
              						"org.xtext.example.mydsl.MyDsl.STRING");
              				
            }

            }


            }

            // InternalMyDsl.g:486:3: (otherlv_2= 'as' ( (lv_name_3_0= ruleValid_ID ) ) )?
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==22) ) {
                alt7=1;
            }
            switch (alt7) {
                case 1 :
                    // InternalMyDsl.g:487:4: otherlv_2= 'as' ( (lv_name_3_0= ruleValid_ID ) )
                    {
                    otherlv_2=(Token)match(input,22,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getImportAccess().getAsKeyword_2_0());
                      			
                    }
                    // InternalMyDsl.g:491:4: ( (lv_name_3_0= ruleValid_ID ) )
                    // InternalMyDsl.g:492:5: (lv_name_3_0= ruleValid_ID )
                    {
                    // InternalMyDsl.g:492:5: (lv_name_3_0= ruleValid_ID )
                    // InternalMyDsl.g:493:6: lv_name_3_0= ruleValid_ID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getImportAccess().getNameValid_IDParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_3_0=ruleValid_ID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getImportRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_3_0,
                      							"org.xtext.example.mydsl.MyDsl.Valid_ID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImport"


    // $ANTLR start "entryRulePragma"
    // InternalMyDsl.g:515:1: entryRulePragma returns [EObject current=null] : iv_rulePragma= rulePragma EOF ;
    public final EObject entryRulePragma() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePragma = null;


        try {
            // InternalMyDsl.g:515:47: (iv_rulePragma= rulePragma EOF )
            // InternalMyDsl.g:516:2: iv_rulePragma= rulePragma EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPragmaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePragma=rulePragma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePragma; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePragma"


    // $ANTLR start "rulePragma"
    // InternalMyDsl.g:522:1: rulePragma returns [EObject current=null] : (otherlv_0= '@' ( ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '[' ( (lv_plugins_3_0= ruleExpressionList ) )? otherlv_4= ']' )? ) ) ;
    public final EObject rulePragma() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_plugins_3_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:528:2: ( (otherlv_0= '@' ( ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '[' ( (lv_plugins_3_0= ruleExpressionList ) )? otherlv_4= ']' )? ) ) )
            // InternalMyDsl.g:529:2: (otherlv_0= '@' ( ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '[' ( (lv_plugins_3_0= ruleExpressionList ) )? otherlv_4= ']' )? ) )
            {
            // InternalMyDsl.g:529:2: (otherlv_0= '@' ( ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '[' ( (lv_plugins_3_0= ruleExpressionList ) )? otherlv_4= ']' )? ) )
            // InternalMyDsl.g:530:3: otherlv_0= '@' ( ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '[' ( (lv_plugins_3_0= ruleExpressionList ) )? otherlv_4= ']' )? )
            {
            otherlv_0=(Token)match(input,23,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getPragmaAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalMyDsl.g:534:3: ( ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '[' ( (lv_plugins_3_0= ruleExpressionList ) )? otherlv_4= ']' )? )
            // InternalMyDsl.g:535:4: ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '[' ( (lv_plugins_3_0= ruleExpressionList ) )? otherlv_4= ']' )?
            {
            // InternalMyDsl.g:535:4: ( (lv_name_1_0= RULE_ID ) )
            // InternalMyDsl.g:536:5: (lv_name_1_0= RULE_ID )
            {
            // InternalMyDsl.g:536:5: (lv_name_1_0= RULE_ID )
            // InternalMyDsl.g:537:6: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						newLeafNode(lv_name_1_0, grammarAccess.getPragmaAccess().getNameIDTerminalRuleCall_1_0_0());
              					
            }
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElement(grammarAccess.getPragmaRule());
              						}
              						setWithLastConsumed(
              							current,
              							"name",
              							lv_name_1_0,
              							"org.xtext.example.mydsl.MyDsl.ID");
              					
            }

            }


            }

            // InternalMyDsl.g:553:4: (otherlv_2= '[' ( (lv_plugins_3_0= ruleExpressionList ) )? otherlv_4= ']' )?
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==24) ) {
                alt9=1;
            }
            switch (alt9) {
                case 1 :
                    // InternalMyDsl.g:554:5: otherlv_2= '[' ( (lv_plugins_3_0= ruleExpressionList ) )? otherlv_4= ']'
                    {
                    otherlv_2=(Token)match(input,24,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getPragmaAccess().getLeftSquareBracketKeyword_1_1_0());
                      				
                    }
                    // InternalMyDsl.g:558:5: ( (lv_plugins_3_0= ruleExpressionList ) )?
                    int alt8=2;
                    int LA8_0 = input.LA(1);

                    if ( ((LA8_0>=RULE_ID && LA8_0<=RULE_KEYWORD)||LA8_0==20||LA8_0==24||LA8_0==26||LA8_0==30||(LA8_0>=38 && LA8_0<=39)||LA8_0==41||LA8_0==45||LA8_0==50||(LA8_0>=52 && LA8_0<=104)||(LA8_0>=112 && LA8_0<=135)||LA8_0==146||(LA8_0>=150 && LA8_0<=154)) ) {
                        alt8=1;
                    }
                    switch (alt8) {
                        case 1 :
                            // InternalMyDsl.g:559:6: (lv_plugins_3_0= ruleExpressionList )
                            {
                            // InternalMyDsl.g:559:6: (lv_plugins_3_0= ruleExpressionList )
                            // InternalMyDsl.g:560:7: lv_plugins_3_0= ruleExpressionList
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getPragmaAccess().getPluginsExpressionListParserRuleCall_1_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_18);
                            lv_plugins_3_0=ruleExpressionList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getPragmaRule());
                              							}
                              							set(
                              								current,
                              								"plugins",
                              								lv_plugins_3_0,
                              								"org.xtext.example.mydsl.MyDsl.ExpressionList");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_4=(Token)match(input,25,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getPragmaAccess().getRightSquareBracketKeyword_1_1_2());
                      				
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePragma"


    // $ANTLR start "entryRuleExperimentFileStructure"
    // InternalMyDsl.g:587:1: entryRuleExperimentFileStructure returns [EObject current=null] : iv_ruleExperimentFileStructure= ruleExperimentFileStructure EOF ;
    public final EObject entryRuleExperimentFileStructure() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExperimentFileStructure = null;


        try {
            // InternalMyDsl.g:587:64: (iv_ruleExperimentFileStructure= ruleExperimentFileStructure EOF )
            // InternalMyDsl.g:588:2: iv_ruleExperimentFileStructure= ruleExperimentFileStructure EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExperimentFileStructureRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExperimentFileStructure=ruleExperimentFileStructure();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExperimentFileStructure; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExperimentFileStructure"


    // $ANTLR start "ruleExperimentFileStructure"
    // InternalMyDsl.g:594:1: ruleExperimentFileStructure returns [EObject current=null] : ( (lv_exp_0_0= ruleHeadlessExperiment ) ) ;
    public final EObject ruleExperimentFileStructure() throws RecognitionException {
        EObject current = null;

        EObject lv_exp_0_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:600:2: ( ( (lv_exp_0_0= ruleHeadlessExperiment ) ) )
            // InternalMyDsl.g:601:2: ( (lv_exp_0_0= ruleHeadlessExperiment ) )
            {
            // InternalMyDsl.g:601:2: ( (lv_exp_0_0= ruleHeadlessExperiment ) )
            // InternalMyDsl.g:602:3: (lv_exp_0_0= ruleHeadlessExperiment )
            {
            // InternalMyDsl.g:602:3: (lv_exp_0_0= ruleHeadlessExperiment )
            // InternalMyDsl.g:603:4: lv_exp_0_0= ruleHeadlessExperiment
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getExperimentFileStructureAccess().getExpHeadlessExperimentParserRuleCall_0());
              			
            }
            pushFollow(FOLLOW_2);
            lv_exp_0_0=ruleHeadlessExperiment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getExperimentFileStructureRule());
              				}
              				set(
              					current,
              					"exp",
              					lv_exp_0_0,
              					"org.xtext.example.mydsl.MyDsl.HeadlessExperiment");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExperimentFileStructure"


    // $ANTLR start "entryRuleHeadlessExperiment"
    // InternalMyDsl.g:623:1: entryRuleHeadlessExperiment returns [EObject current=null] : iv_ruleHeadlessExperiment= ruleHeadlessExperiment EOF ;
    public final EObject entryRuleHeadlessExperiment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleHeadlessExperiment = null;


        try {
            // InternalMyDsl.g:623:59: (iv_ruleHeadlessExperiment= ruleHeadlessExperiment EOF )
            // InternalMyDsl.g:624:2: iv_ruleHeadlessExperiment= ruleHeadlessExperiment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHeadlessExperimentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleHeadlessExperiment=ruleHeadlessExperiment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHeadlessExperiment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleHeadlessExperiment"


    // $ANTLR start "ruleHeadlessExperiment"
    // InternalMyDsl.g:630:1: ruleHeadlessExperiment returns [EObject current=null] : ( ( (lv_key_0_0= rule_ExperimentKey ) ) ( (lv_firstFacet_1_0= 'name:' ) )? ( ( (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING ) ) ) (otherlv_3= 'model:' ( (lv_importURI_4_0= RULE_STRING ) ) )? ( (lv_facets_5_0= ruleFacet ) )* ( ( (lv_block_6_0= ruleBlock ) ) | otherlv_7= ';' ) ) ;
    public final EObject ruleHeadlessExperiment() throws RecognitionException {
        EObject current = null;

        Token lv_firstFacet_1_0=null;
        Token lv_name_2_2=null;
        Token otherlv_3=null;
        Token lv_importURI_4_0=null;
        Token otherlv_7=null;
        AntlrDatatypeRuleToken lv_key_0_0 = null;

        AntlrDatatypeRuleToken lv_name_2_1 = null;

        EObject lv_facets_5_0 = null;

        EObject lv_block_6_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:636:2: ( ( ( (lv_key_0_0= rule_ExperimentKey ) ) ( (lv_firstFacet_1_0= 'name:' ) )? ( ( (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING ) ) ) (otherlv_3= 'model:' ( (lv_importURI_4_0= RULE_STRING ) ) )? ( (lv_facets_5_0= ruleFacet ) )* ( ( (lv_block_6_0= ruleBlock ) ) | otherlv_7= ';' ) ) )
            // InternalMyDsl.g:637:2: ( ( (lv_key_0_0= rule_ExperimentKey ) ) ( (lv_firstFacet_1_0= 'name:' ) )? ( ( (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING ) ) ) (otherlv_3= 'model:' ( (lv_importURI_4_0= RULE_STRING ) ) )? ( (lv_facets_5_0= ruleFacet ) )* ( ( (lv_block_6_0= ruleBlock ) ) | otherlv_7= ';' ) )
            {
            // InternalMyDsl.g:637:2: ( ( (lv_key_0_0= rule_ExperimentKey ) ) ( (lv_firstFacet_1_0= 'name:' ) )? ( ( (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING ) ) ) (otherlv_3= 'model:' ( (lv_importURI_4_0= RULE_STRING ) ) )? ( (lv_facets_5_0= ruleFacet ) )* ( ( (lv_block_6_0= ruleBlock ) ) | otherlv_7= ';' ) )
            // InternalMyDsl.g:638:3: ( (lv_key_0_0= rule_ExperimentKey ) ) ( (lv_firstFacet_1_0= 'name:' ) )? ( ( (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING ) ) ) (otherlv_3= 'model:' ( (lv_importURI_4_0= RULE_STRING ) ) )? ( (lv_facets_5_0= ruleFacet ) )* ( ( (lv_block_6_0= ruleBlock ) ) | otherlv_7= ';' )
            {
            // InternalMyDsl.g:638:3: ( (lv_key_0_0= rule_ExperimentKey ) )
            // InternalMyDsl.g:639:4: (lv_key_0_0= rule_ExperimentKey )
            {
            // InternalMyDsl.g:639:4: (lv_key_0_0= rule_ExperimentKey )
            // InternalMyDsl.g:640:5: lv_key_0_0= rule_ExperimentKey
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getHeadlessExperimentAccess().getKey_ExperimentKeyParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_19);
            lv_key_0_0=rule_ExperimentKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getHeadlessExperimentRule());
              					}
              					set(
              						current,
              						"key",
              						lv_key_0_0,
              						"org.xtext.example.mydsl.MyDsl._ExperimentKey");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyDsl.g:657:3: ( (lv_firstFacet_1_0= 'name:' ) )?
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==26) ) {
                alt10=1;
            }
            switch (alt10) {
                case 1 :
                    // InternalMyDsl.g:658:4: (lv_firstFacet_1_0= 'name:' )
                    {
                    // InternalMyDsl.g:658:4: (lv_firstFacet_1_0= 'name:' )
                    // InternalMyDsl.g:659:5: lv_firstFacet_1_0= 'name:'
                    {
                    lv_firstFacet_1_0=(Token)match(input,26,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_firstFacet_1_0, grammarAccess.getHeadlessExperimentAccess().getFirstFacetNameKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getHeadlessExperimentRule());
                      					}
                      					setWithLastConsumed(current, "firstFacet", lv_firstFacet_1_0, "name:");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalMyDsl.g:671:3: ( ( (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING ) ) )
            // InternalMyDsl.g:672:4: ( (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING ) )
            {
            // InternalMyDsl.g:672:4: ( (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING ) )
            // InternalMyDsl.g:673:5: (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING )
            {
            // InternalMyDsl.g:673:5: (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==RULE_ID||LA11_0==50||(LA11_0>=52 && LA11_0<=104)) ) {
                alt11=1;
            }
            else if ( (LA11_0==RULE_STRING) ) {
                alt11=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalMyDsl.g:674:6: lv_name_2_1= ruleValid_ID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHeadlessExperimentAccess().getNameValid_IDParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_name_2_1=ruleValid_ID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHeadlessExperimentRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_2_1,
                      							"org.xtext.example.mydsl.MyDsl.Valid_ID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:690:6: lv_name_2_2= RULE_STRING
                    {
                    lv_name_2_2=(Token)match(input,RULE_STRING,FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_2_2, grammarAccess.getHeadlessExperimentAccess().getNameSTRINGTerminalRuleCall_2_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHeadlessExperimentRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_2_2,
                      							"org.xtext.example.mydsl.MyDsl.STRING");
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalMyDsl.g:707:3: (otherlv_3= 'model:' ( (lv_importURI_4_0= RULE_STRING ) ) )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==27) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // InternalMyDsl.g:708:4: otherlv_3= 'model:' ( (lv_importURI_4_0= RULE_STRING ) )
                    {
                    otherlv_3=(Token)match(input,27,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getHeadlessExperimentAccess().getModelKeyword_3_0());
                      			
                    }
                    // InternalMyDsl.g:712:4: ( (lv_importURI_4_0= RULE_STRING ) )
                    // InternalMyDsl.g:713:5: (lv_importURI_4_0= RULE_STRING )
                    {
                    // InternalMyDsl.g:713:5: (lv_importURI_4_0= RULE_STRING )
                    // InternalMyDsl.g:714:6: lv_importURI_4_0= RULE_STRING
                    {
                    lv_importURI_4_0=(Token)match(input,RULE_STRING,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_importURI_4_0, grammarAccess.getHeadlessExperimentAccess().getImportURISTRINGTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHeadlessExperimentRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"importURI",
                      							lv_importURI_4_0,
                      							"org.xtext.example.mydsl.MyDsl.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalMyDsl.g:731:3: ( (lv_facets_5_0= ruleFacet ) )*
            loop13:
            do {
                int alt13=2;
                int LA13_0 = input.LA(1);

                if ( (LA13_0==RULE_ID||LA13_0==16||LA13_0==26||LA13_0==30||(LA13_0>=38 && LA13_0<=39)||(LA13_0>=112 && LA13_0<=136)) ) {
                    alt13=1;
                }


                switch (alt13) {
            	case 1 :
            	    // InternalMyDsl.g:732:4: (lv_facets_5_0= ruleFacet )
            	    {
            	    // InternalMyDsl.g:732:4: (lv_facets_5_0= ruleFacet )
            	    // InternalMyDsl.g:733:5: lv_facets_5_0= ruleFacet
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getHeadlessExperimentAccess().getFacetsFacetParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_22);
            	    lv_facets_5_0=ruleFacet();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getHeadlessExperimentRule());
            	      					}
            	      					add(
            	      						current,
            	      						"facets",
            	      						lv_facets_5_0,
            	      						"org.xtext.example.mydsl.MyDsl.Facet");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop13;
                }
            } while (true);

            // InternalMyDsl.g:750:3: ( ( (lv_block_6_0= ruleBlock ) ) | otherlv_7= ';' )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==45) ) {
                alt14=1;
            }
            else if ( (LA14_0==28) ) {
                alt14=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // InternalMyDsl.g:751:4: ( (lv_block_6_0= ruleBlock ) )
                    {
                    // InternalMyDsl.g:751:4: ( (lv_block_6_0= ruleBlock ) )
                    // InternalMyDsl.g:752:5: (lv_block_6_0= ruleBlock )
                    {
                    // InternalMyDsl.g:752:5: (lv_block_6_0= ruleBlock )
                    // InternalMyDsl.g:753:6: lv_block_6_0= ruleBlock
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getHeadlessExperimentAccess().getBlockBlockParserRuleCall_5_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_block_6_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getHeadlessExperimentRule());
                      						}
                      						set(
                      							current,
                      							"block",
                      							lv_block_6_0,
                      							"org.xtext.example.mydsl.MyDsl.Block");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:771:4: otherlv_7= ';'
                    {
                    otherlv_7=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getHeadlessExperimentAccess().getSemicolonKeyword_5_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHeadlessExperiment"


    // $ANTLR start "entryRuleS_Section"
    // InternalMyDsl.g:780:1: entryRuleS_Section returns [EObject current=null] : iv_ruleS_Section= ruleS_Section EOF ;
    public final EObject entryRuleS_Section() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleS_Section = null;


        try {
            // InternalMyDsl.g:780:50: (iv_ruleS_Section= ruleS_Section EOF )
            // InternalMyDsl.g:781:2: iv_ruleS_Section= ruleS_Section EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getS_SectionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleS_Section=ruleS_Section();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleS_Section; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleS_Section"


    // $ANTLR start "ruleS_Section"
    // InternalMyDsl.g:787:1: ruleS_Section returns [EObject current=null] : (this_S_Global_0= ruleS_Global | this_S_Species_1= ruleS_Species | this_S_Experiment_2= ruleS_Experiment ) ;
    public final EObject ruleS_Section() throws RecognitionException {
        EObject current = null;

        EObject this_S_Global_0 = null;

        EObject this_S_Species_1 = null;

        EObject this_S_Experiment_2 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:793:2: ( (this_S_Global_0= ruleS_Global | this_S_Species_1= ruleS_Species | this_S_Experiment_2= ruleS_Experiment ) )
            // InternalMyDsl.g:794:2: (this_S_Global_0= ruleS_Global | this_S_Species_1= ruleS_Species | this_S_Experiment_2= ruleS_Experiment )
            {
            // InternalMyDsl.g:794:2: (this_S_Global_0= ruleS_Global | this_S_Species_1= ruleS_Species | this_S_Experiment_2= ruleS_Experiment )
            int alt15=3;
            switch ( input.LA(1) ) {
            case 29:
                {
                alt15=1;
                }
                break;
            case 52:
            case 53:
                {
                alt15=2;
                }
                break;
            case 55:
                {
                alt15=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }

            switch (alt15) {
                case 1 :
                    // InternalMyDsl.g:795:3: this_S_Global_0= ruleS_Global
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getS_SectionAccess().getS_GlobalParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_S_Global_0=ruleS_Global();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_S_Global_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:804:3: this_S_Species_1= ruleS_Species
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getS_SectionAccess().getS_SpeciesParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_S_Species_1=ruleS_Species();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_S_Species_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMyDsl.g:813:3: this_S_Experiment_2= ruleS_Experiment
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getS_SectionAccess().getS_ExperimentParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_S_Experiment_2=ruleS_Experiment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_S_Experiment_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleS_Section"


    // $ANTLR start "entryRuleS_Global"
    // InternalMyDsl.g:825:1: entryRuleS_Global returns [EObject current=null] : iv_ruleS_Global= ruleS_Global EOF ;
    public final EObject entryRuleS_Global() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleS_Global = null;


        try {
            // InternalMyDsl.g:825:49: (iv_ruleS_Global= ruleS_Global EOF )
            // InternalMyDsl.g:826:2: iv_ruleS_Global= ruleS_Global EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getS_GlobalRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleS_Global=ruleS_Global();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleS_Global; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleS_Global"


    // $ANTLR start "ruleS_Global"
    // InternalMyDsl.g:832:1: ruleS_Global returns [EObject current=null] : ( ( (lv_key_0_0= 'global' ) ) ( (lv_facets_1_0= ruleFacet ) )* ( ( (lv_block_2_0= ruleBlock ) ) | otherlv_3= ';' ) ) ;
    public final EObject ruleS_Global() throws RecognitionException {
        EObject current = null;

        Token lv_key_0_0=null;
        Token otherlv_3=null;
        EObject lv_facets_1_0 = null;

        EObject lv_block_2_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:838:2: ( ( ( (lv_key_0_0= 'global' ) ) ( (lv_facets_1_0= ruleFacet ) )* ( ( (lv_block_2_0= ruleBlock ) ) | otherlv_3= ';' ) ) )
            // InternalMyDsl.g:839:2: ( ( (lv_key_0_0= 'global' ) ) ( (lv_facets_1_0= ruleFacet ) )* ( ( (lv_block_2_0= ruleBlock ) ) | otherlv_3= ';' ) )
            {
            // InternalMyDsl.g:839:2: ( ( (lv_key_0_0= 'global' ) ) ( (lv_facets_1_0= ruleFacet ) )* ( ( (lv_block_2_0= ruleBlock ) ) | otherlv_3= ';' ) )
            // InternalMyDsl.g:840:3: ( (lv_key_0_0= 'global' ) ) ( (lv_facets_1_0= ruleFacet ) )* ( ( (lv_block_2_0= ruleBlock ) ) | otherlv_3= ';' )
            {
            // InternalMyDsl.g:840:3: ( (lv_key_0_0= 'global' ) )
            // InternalMyDsl.g:841:4: (lv_key_0_0= 'global' )
            {
            // InternalMyDsl.g:841:4: (lv_key_0_0= 'global' )
            // InternalMyDsl.g:842:5: lv_key_0_0= 'global'
            {
            lv_key_0_0=(Token)match(input,29,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_key_0_0, grammarAccess.getS_GlobalAccess().getKeyGlobalKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getS_GlobalRule());
              					}
              					setWithLastConsumed(current, "key", lv_key_0_0, "global");
              				
            }

            }


            }

            // InternalMyDsl.g:854:3: ( (lv_facets_1_0= ruleFacet ) )*
            loop16:
            do {
                int alt16=2;
                int LA16_0 = input.LA(1);

                if ( (LA16_0==RULE_ID||LA16_0==16||LA16_0==26||LA16_0==30||(LA16_0>=38 && LA16_0<=39)||(LA16_0>=112 && LA16_0<=136)) ) {
                    alt16=1;
                }


                switch (alt16) {
            	case 1 :
            	    // InternalMyDsl.g:855:4: (lv_facets_1_0= ruleFacet )
            	    {
            	    // InternalMyDsl.g:855:4: (lv_facets_1_0= ruleFacet )
            	    // InternalMyDsl.g:856:5: lv_facets_1_0= ruleFacet
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getS_GlobalAccess().getFacetsFacetParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_22);
            	    lv_facets_1_0=ruleFacet();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getS_GlobalRule());
            	      					}
            	      					add(
            	      						current,
            	      						"facets",
            	      						lv_facets_1_0,
            	      						"org.xtext.example.mydsl.MyDsl.Facet");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop16;
                }
            } while (true);

            // InternalMyDsl.g:873:3: ( ( (lv_block_2_0= ruleBlock ) ) | otherlv_3= ';' )
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==45) ) {
                alt17=1;
            }
            else if ( (LA17_0==28) ) {
                alt17=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }
            switch (alt17) {
                case 1 :
                    // InternalMyDsl.g:874:4: ( (lv_block_2_0= ruleBlock ) )
                    {
                    // InternalMyDsl.g:874:4: ( (lv_block_2_0= ruleBlock ) )
                    // InternalMyDsl.g:875:5: (lv_block_2_0= ruleBlock )
                    {
                    // InternalMyDsl.g:875:5: (lv_block_2_0= ruleBlock )
                    // InternalMyDsl.g:876:6: lv_block_2_0= ruleBlock
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getS_GlobalAccess().getBlockBlockParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_block_2_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getS_GlobalRule());
                      						}
                      						set(
                      							current,
                      							"block",
                      							lv_block_2_0,
                      							"org.xtext.example.mydsl.MyDsl.Block");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:894:4: otherlv_3= ';'
                    {
                    otherlv_3=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getS_GlobalAccess().getSemicolonKeyword_2_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleS_Global"


    // $ANTLR start "entryRuleS_Species"
    // InternalMyDsl.g:903:1: entryRuleS_Species returns [EObject current=null] : iv_ruleS_Species= ruleS_Species EOF ;
    public final EObject entryRuleS_Species() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleS_Species = null;


        try {
            // InternalMyDsl.g:903:50: (iv_ruleS_Species= ruleS_Species EOF )
            // InternalMyDsl.g:904:2: iv_ruleS_Species= ruleS_Species EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getS_SpeciesRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleS_Species=ruleS_Species();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleS_Species; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleS_Species"


    // $ANTLR start "ruleS_Species"
    // InternalMyDsl.g:910:1: ruleS_Species returns [EObject current=null] : ( ( (lv_key_0_0= rule_SpeciesKey ) ) ( (lv_firstFacet_1_0= 'name:' ) )? ( (lv_name_2_0= RULE_ID ) ) ( (lv_facets_3_0= ruleFacet ) )* ( ( (lv_block_4_0= ruleBlock ) ) | otherlv_5= ';' ) ) ;
    public final EObject ruleS_Species() throws RecognitionException {
        EObject current = null;

        Token lv_firstFacet_1_0=null;
        Token lv_name_2_0=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_key_0_0 = null;

        EObject lv_facets_3_0 = null;

        EObject lv_block_4_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:916:2: ( ( ( (lv_key_0_0= rule_SpeciesKey ) ) ( (lv_firstFacet_1_0= 'name:' ) )? ( (lv_name_2_0= RULE_ID ) ) ( (lv_facets_3_0= ruleFacet ) )* ( ( (lv_block_4_0= ruleBlock ) ) | otherlv_5= ';' ) ) )
            // InternalMyDsl.g:917:2: ( ( (lv_key_0_0= rule_SpeciesKey ) ) ( (lv_firstFacet_1_0= 'name:' ) )? ( (lv_name_2_0= RULE_ID ) ) ( (lv_facets_3_0= ruleFacet ) )* ( ( (lv_block_4_0= ruleBlock ) ) | otherlv_5= ';' ) )
            {
            // InternalMyDsl.g:917:2: ( ( (lv_key_0_0= rule_SpeciesKey ) ) ( (lv_firstFacet_1_0= 'name:' ) )? ( (lv_name_2_0= RULE_ID ) ) ( (lv_facets_3_0= ruleFacet ) )* ( ( (lv_block_4_0= ruleBlock ) ) | otherlv_5= ';' ) )
            // InternalMyDsl.g:918:3: ( (lv_key_0_0= rule_SpeciesKey ) ) ( (lv_firstFacet_1_0= 'name:' ) )? ( (lv_name_2_0= RULE_ID ) ) ( (lv_facets_3_0= ruleFacet ) )* ( ( (lv_block_4_0= ruleBlock ) ) | otherlv_5= ';' )
            {
            // InternalMyDsl.g:918:3: ( (lv_key_0_0= rule_SpeciesKey ) )
            // InternalMyDsl.g:919:4: (lv_key_0_0= rule_SpeciesKey )
            {
            // InternalMyDsl.g:919:4: (lv_key_0_0= rule_SpeciesKey )
            // InternalMyDsl.g:920:5: lv_key_0_0= rule_SpeciesKey
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getS_SpeciesAccess().getKey_SpeciesKeyParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_23);
            lv_key_0_0=rule_SpeciesKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getS_SpeciesRule());
              					}
              					set(
              						current,
              						"key",
              						lv_key_0_0,
              						"org.xtext.example.mydsl.MyDsl._SpeciesKey");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyDsl.g:937:3: ( (lv_firstFacet_1_0= 'name:' ) )?
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==26) ) {
                alt18=1;
            }
            switch (alt18) {
                case 1 :
                    // InternalMyDsl.g:938:4: (lv_firstFacet_1_0= 'name:' )
                    {
                    // InternalMyDsl.g:938:4: (lv_firstFacet_1_0= 'name:' )
                    // InternalMyDsl.g:939:5: lv_firstFacet_1_0= 'name:'
                    {
                    lv_firstFacet_1_0=(Token)match(input,26,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_firstFacet_1_0, grammarAccess.getS_SpeciesAccess().getFirstFacetNameKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getS_SpeciesRule());
                      					}
                      					setWithLastConsumed(current, "firstFacet", lv_firstFacet_1_0, "name:");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalMyDsl.g:951:3: ( (lv_name_2_0= RULE_ID ) )
            // InternalMyDsl.g:952:4: (lv_name_2_0= RULE_ID )
            {
            // InternalMyDsl.g:952:4: (lv_name_2_0= RULE_ID )
            // InternalMyDsl.g:953:5: lv_name_2_0= RULE_ID
            {
            lv_name_2_0=(Token)match(input,RULE_ID,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_2_0, grammarAccess.getS_SpeciesAccess().getNameIDTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getS_SpeciesRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_2_0,
              						"org.xtext.example.mydsl.MyDsl.ID");
              				
            }

            }


            }

            // InternalMyDsl.g:969:3: ( (lv_facets_3_0= ruleFacet ) )*
            loop19:
            do {
                int alt19=2;
                int LA19_0 = input.LA(1);

                if ( (LA19_0==RULE_ID||LA19_0==16||LA19_0==26||LA19_0==30||(LA19_0>=38 && LA19_0<=39)||(LA19_0>=112 && LA19_0<=136)) ) {
                    alt19=1;
                }


                switch (alt19) {
            	case 1 :
            	    // InternalMyDsl.g:970:4: (lv_facets_3_0= ruleFacet )
            	    {
            	    // InternalMyDsl.g:970:4: (lv_facets_3_0= ruleFacet )
            	    // InternalMyDsl.g:971:5: lv_facets_3_0= ruleFacet
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getS_SpeciesAccess().getFacetsFacetParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_22);
            	    lv_facets_3_0=ruleFacet();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getS_SpeciesRule());
            	      					}
            	      					add(
            	      						current,
            	      						"facets",
            	      						lv_facets_3_0,
            	      						"org.xtext.example.mydsl.MyDsl.Facet");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop19;
                }
            } while (true);

            // InternalMyDsl.g:988:3: ( ( (lv_block_4_0= ruleBlock ) ) | otherlv_5= ';' )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==45) ) {
                alt20=1;
            }
            else if ( (LA20_0==28) ) {
                alt20=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // InternalMyDsl.g:989:4: ( (lv_block_4_0= ruleBlock ) )
                    {
                    // InternalMyDsl.g:989:4: ( (lv_block_4_0= ruleBlock ) )
                    // InternalMyDsl.g:990:5: (lv_block_4_0= ruleBlock )
                    {
                    // InternalMyDsl.g:990:5: (lv_block_4_0= ruleBlock )
                    // InternalMyDsl.g:991:6: lv_block_4_0= ruleBlock
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getS_SpeciesAccess().getBlockBlockParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_block_4_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getS_SpeciesRule());
                      						}
                      						set(
                      							current,
                      							"block",
                      							lv_block_4_0,
                      							"org.xtext.example.mydsl.MyDsl.Block");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:1009:4: otherlv_5= ';'
                    {
                    otherlv_5=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getS_SpeciesAccess().getSemicolonKeyword_4_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleS_Species"


    // $ANTLR start "entryRuleS_Experiment"
    // InternalMyDsl.g:1018:1: entryRuleS_Experiment returns [EObject current=null] : iv_ruleS_Experiment= ruleS_Experiment EOF ;
    public final EObject entryRuleS_Experiment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleS_Experiment = null;


        try {
            // InternalMyDsl.g:1018:53: (iv_ruleS_Experiment= ruleS_Experiment EOF )
            // InternalMyDsl.g:1019:2: iv_ruleS_Experiment= ruleS_Experiment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getS_ExperimentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleS_Experiment=ruleS_Experiment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleS_Experiment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleS_Experiment"


    // $ANTLR start "ruleS_Experiment"
    // InternalMyDsl.g:1025:1: ruleS_Experiment returns [EObject current=null] : ( ( (lv_key_0_0= rule_ExperimentKey ) ) ( (lv_firstFacet_1_0= 'name:' ) )? ( ( (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING ) ) ) ( (lv_facets_3_0= ruleFacet ) )* ( ( (lv_block_4_0= ruleBlock ) ) | otherlv_5= ';' ) ) ;
    public final EObject ruleS_Experiment() throws RecognitionException {
        EObject current = null;

        Token lv_firstFacet_1_0=null;
        Token lv_name_2_2=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_key_0_0 = null;

        AntlrDatatypeRuleToken lv_name_2_1 = null;

        EObject lv_facets_3_0 = null;

        EObject lv_block_4_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:1031:2: ( ( ( (lv_key_0_0= rule_ExperimentKey ) ) ( (lv_firstFacet_1_0= 'name:' ) )? ( ( (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING ) ) ) ( (lv_facets_3_0= ruleFacet ) )* ( ( (lv_block_4_0= ruleBlock ) ) | otherlv_5= ';' ) ) )
            // InternalMyDsl.g:1032:2: ( ( (lv_key_0_0= rule_ExperimentKey ) ) ( (lv_firstFacet_1_0= 'name:' ) )? ( ( (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING ) ) ) ( (lv_facets_3_0= ruleFacet ) )* ( ( (lv_block_4_0= ruleBlock ) ) | otherlv_5= ';' ) )
            {
            // InternalMyDsl.g:1032:2: ( ( (lv_key_0_0= rule_ExperimentKey ) ) ( (lv_firstFacet_1_0= 'name:' ) )? ( ( (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING ) ) ) ( (lv_facets_3_0= ruleFacet ) )* ( ( (lv_block_4_0= ruleBlock ) ) | otherlv_5= ';' ) )
            // InternalMyDsl.g:1033:3: ( (lv_key_0_0= rule_ExperimentKey ) ) ( (lv_firstFacet_1_0= 'name:' ) )? ( ( (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING ) ) ) ( (lv_facets_3_0= ruleFacet ) )* ( ( (lv_block_4_0= ruleBlock ) ) | otherlv_5= ';' )
            {
            // InternalMyDsl.g:1033:3: ( (lv_key_0_0= rule_ExperimentKey ) )
            // InternalMyDsl.g:1034:4: (lv_key_0_0= rule_ExperimentKey )
            {
            // InternalMyDsl.g:1034:4: (lv_key_0_0= rule_ExperimentKey )
            // InternalMyDsl.g:1035:5: lv_key_0_0= rule_ExperimentKey
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getS_ExperimentAccess().getKey_ExperimentKeyParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_19);
            lv_key_0_0=rule_ExperimentKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getS_ExperimentRule());
              					}
              					set(
              						current,
              						"key",
              						lv_key_0_0,
              						"org.xtext.example.mydsl.MyDsl._ExperimentKey");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyDsl.g:1052:3: ( (lv_firstFacet_1_0= 'name:' ) )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==26) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // InternalMyDsl.g:1053:4: (lv_firstFacet_1_0= 'name:' )
                    {
                    // InternalMyDsl.g:1053:4: (lv_firstFacet_1_0= 'name:' )
                    // InternalMyDsl.g:1054:5: lv_firstFacet_1_0= 'name:'
                    {
                    lv_firstFacet_1_0=(Token)match(input,26,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_firstFacet_1_0, grammarAccess.getS_ExperimentAccess().getFirstFacetNameKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getS_ExperimentRule());
                      					}
                      					setWithLastConsumed(current, "firstFacet", lv_firstFacet_1_0, "name:");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalMyDsl.g:1066:3: ( ( (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING ) ) )
            // InternalMyDsl.g:1067:4: ( (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING ) )
            {
            // InternalMyDsl.g:1067:4: ( (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING ) )
            // InternalMyDsl.g:1068:5: (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING )
            {
            // InternalMyDsl.g:1068:5: (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==RULE_ID||LA22_0==50||(LA22_0>=52 && LA22_0<=104)) ) {
                alt22=1;
            }
            else if ( (LA22_0==RULE_STRING) ) {
                alt22=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }
            switch (alt22) {
                case 1 :
                    // InternalMyDsl.g:1069:6: lv_name_2_1= ruleValid_ID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getS_ExperimentAccess().getNameValid_IDParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_22);
                    lv_name_2_1=ruleValid_ID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getS_ExperimentRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_2_1,
                      							"org.xtext.example.mydsl.MyDsl.Valid_ID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:1085:6: lv_name_2_2= RULE_STRING
                    {
                    lv_name_2_2=(Token)match(input,RULE_STRING,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_2_2, grammarAccess.getS_ExperimentAccess().getNameSTRINGTerminalRuleCall_2_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getS_ExperimentRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_2_2,
                      							"org.xtext.example.mydsl.MyDsl.STRING");
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalMyDsl.g:1102:3: ( (lv_facets_3_0= ruleFacet ) )*
            loop23:
            do {
                int alt23=2;
                int LA23_0 = input.LA(1);

                if ( (LA23_0==RULE_ID||LA23_0==16||LA23_0==26||LA23_0==30||(LA23_0>=38 && LA23_0<=39)||(LA23_0>=112 && LA23_0<=136)) ) {
                    alt23=1;
                }


                switch (alt23) {
            	case 1 :
            	    // InternalMyDsl.g:1103:4: (lv_facets_3_0= ruleFacet )
            	    {
            	    // InternalMyDsl.g:1103:4: (lv_facets_3_0= ruleFacet )
            	    // InternalMyDsl.g:1104:5: lv_facets_3_0= ruleFacet
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getS_ExperimentAccess().getFacetsFacetParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_22);
            	    lv_facets_3_0=ruleFacet();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getS_ExperimentRule());
            	      					}
            	      					add(
            	      						current,
            	      						"facets",
            	      						lv_facets_3_0,
            	      						"org.xtext.example.mydsl.MyDsl.Facet");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop23;
                }
            } while (true);

            // InternalMyDsl.g:1121:3: ( ( (lv_block_4_0= ruleBlock ) ) | otherlv_5= ';' )
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==45) ) {
                alt24=1;
            }
            else if ( (LA24_0==28) ) {
                alt24=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }
            switch (alt24) {
                case 1 :
                    // InternalMyDsl.g:1122:4: ( (lv_block_4_0= ruleBlock ) )
                    {
                    // InternalMyDsl.g:1122:4: ( (lv_block_4_0= ruleBlock ) )
                    // InternalMyDsl.g:1123:5: (lv_block_4_0= ruleBlock )
                    {
                    // InternalMyDsl.g:1123:5: (lv_block_4_0= ruleBlock )
                    // InternalMyDsl.g:1124:6: lv_block_4_0= ruleBlock
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getS_ExperimentAccess().getBlockBlockParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_block_4_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getS_ExperimentRule());
                      						}
                      						set(
                      							current,
                      							"block",
                      							lv_block_4_0,
                      							"org.xtext.example.mydsl.MyDsl.Block");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:1142:4: otherlv_5= ';'
                    {
                    otherlv_5=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getS_ExperimentAccess().getSemicolonKeyword_4_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleS_Experiment"


    // $ANTLR start "entryRuleStatement"
    // InternalMyDsl.g:1151:1: entryRuleStatement returns [EObject current=null] : iv_ruleStatement= ruleStatement EOF ;
    public final EObject entryRuleStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatement = null;


        try {
            // InternalMyDsl.g:1151:50: (iv_ruleStatement= ruleStatement EOF )
            // InternalMyDsl.g:1152:2: iv_ruleStatement= ruleStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStatement=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStatement"


    // $ANTLR start "ruleStatement"
    // InternalMyDsl.g:1158:1: ruleStatement returns [EObject current=null] : ( ( ( ( ruleS_Declaration )=>this_S_Declaration_0= ruleS_Declaration ) | ( ( ( ruleS_Assignment )=>this_S_Assignment_1= ruleS_Assignment ) | this_S_1Expr_Facets_BlockOrEnd_2= ruleS_1Expr_Facets_BlockOrEnd | this_S_Other_3= ruleS_Other | this_S_Do_4= ruleS_Do | this_S_Return_5= ruleS_Return | this_S_Solve_6= ruleS_Solve | this_S_If_7= ruleS_If | this_S_Try_8= ruleS_Try | this_S_Equations_9= ruleS_Equations ) ) | this_S_Display_10= ruleS_Display ) ;
    public final EObject ruleStatement() throws RecognitionException {
        EObject current = null;

        EObject this_S_Declaration_0 = null;

        EObject this_S_Assignment_1 = null;

        EObject this_S_1Expr_Facets_BlockOrEnd_2 = null;

        EObject this_S_Other_3 = null;

        EObject this_S_Do_4 = null;

        EObject this_S_Return_5 = null;

        EObject this_S_Solve_6 = null;

        EObject this_S_If_7 = null;

        EObject this_S_Try_8 = null;

        EObject this_S_Equations_9 = null;

        EObject this_S_Display_10 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:1164:2: ( ( ( ( ( ruleS_Declaration )=>this_S_Declaration_0= ruleS_Declaration ) | ( ( ( ruleS_Assignment )=>this_S_Assignment_1= ruleS_Assignment ) | this_S_1Expr_Facets_BlockOrEnd_2= ruleS_1Expr_Facets_BlockOrEnd | this_S_Other_3= ruleS_Other | this_S_Do_4= ruleS_Do | this_S_Return_5= ruleS_Return | this_S_Solve_6= ruleS_Solve | this_S_If_7= ruleS_If | this_S_Try_8= ruleS_Try | this_S_Equations_9= ruleS_Equations ) ) | this_S_Display_10= ruleS_Display ) )
            // InternalMyDsl.g:1165:2: ( ( ( ( ruleS_Declaration )=>this_S_Declaration_0= ruleS_Declaration ) | ( ( ( ruleS_Assignment )=>this_S_Assignment_1= ruleS_Assignment ) | this_S_1Expr_Facets_BlockOrEnd_2= ruleS_1Expr_Facets_BlockOrEnd | this_S_Other_3= ruleS_Other | this_S_Do_4= ruleS_Do | this_S_Return_5= ruleS_Return | this_S_Solve_6= ruleS_Solve | this_S_If_7= ruleS_If | this_S_Try_8= ruleS_Try | this_S_Equations_9= ruleS_Equations ) ) | this_S_Display_10= ruleS_Display )
            {
            // InternalMyDsl.g:1165:2: ( ( ( ( ruleS_Declaration )=>this_S_Declaration_0= ruleS_Declaration ) | ( ( ( ruleS_Assignment )=>this_S_Assignment_1= ruleS_Assignment ) | this_S_1Expr_Facets_BlockOrEnd_2= ruleS_1Expr_Facets_BlockOrEnd | this_S_Other_3= ruleS_Other | this_S_Do_4= ruleS_Do | this_S_Return_5= ruleS_Return | this_S_Solve_6= ruleS_Solve | this_S_If_7= ruleS_If | this_S_Try_8= ruleS_Try | this_S_Equations_9= ruleS_Equations ) ) | this_S_Display_10= ruleS_Display )
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( ((LA27_0>=RULE_ID && LA27_0<=RULE_KEYWORD)||LA27_0==20||LA27_0==24||LA27_0==26||(LA27_0>=30 && LA27_0<=32)||LA27_0==35||(LA27_0>=37 && LA27_0<=39)||LA27_0==41||(LA27_0>=43 && LA27_0<=45)||(LA27_0>=50 && LA27_0<=104)||(LA27_0>=112 && LA27_0<=135)||LA27_0==146||(LA27_0>=150 && LA27_0<=154)) ) {
                alt27=1;
            }
            else if ( (LA27_0==49) ) {
                alt27=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }
            switch (alt27) {
                case 1 :
                    // InternalMyDsl.g:1166:3: ( ( ( ruleS_Declaration )=>this_S_Declaration_0= ruleS_Declaration ) | ( ( ( ruleS_Assignment )=>this_S_Assignment_1= ruleS_Assignment ) | this_S_1Expr_Facets_BlockOrEnd_2= ruleS_1Expr_Facets_BlockOrEnd | this_S_Other_3= ruleS_Other | this_S_Do_4= ruleS_Do | this_S_Return_5= ruleS_Return | this_S_Solve_6= ruleS_Solve | this_S_If_7= ruleS_If | this_S_Try_8= ruleS_Try | this_S_Equations_9= ruleS_Equations ) )
                    {
                    // InternalMyDsl.g:1166:3: ( ( ( ruleS_Declaration )=>this_S_Declaration_0= ruleS_Declaration ) | ( ( ( ruleS_Assignment )=>this_S_Assignment_1= ruleS_Assignment ) | this_S_1Expr_Facets_BlockOrEnd_2= ruleS_1Expr_Facets_BlockOrEnd | this_S_Other_3= ruleS_Other | this_S_Do_4= ruleS_Do | this_S_Return_5= ruleS_Return | this_S_Solve_6= ruleS_Solve | this_S_If_7= ruleS_If | this_S_Try_8= ruleS_Try | this_S_Equations_9= ruleS_Equations ) )
                    int alt26=2;
                    alt26 = dfa26.predict(input);
                    switch (alt26) {
                        case 1 :
                            // InternalMyDsl.g:1167:4: ( ( ruleS_Declaration )=>this_S_Declaration_0= ruleS_Declaration )
                            {
                            // InternalMyDsl.g:1167:4: ( ( ruleS_Declaration )=>this_S_Declaration_0= ruleS_Declaration )
                            // InternalMyDsl.g:1168:5: ( ruleS_Declaration )=>this_S_Declaration_0= ruleS_Declaration
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getStatementAccess().getS_DeclarationParserRuleCall_0_0());
                              				
                            }
                            pushFollow(FOLLOW_2);
                            this_S_Declaration_0=ruleS_Declaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_S_Declaration_0;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalMyDsl.g:1179:4: ( ( ( ruleS_Assignment )=>this_S_Assignment_1= ruleS_Assignment ) | this_S_1Expr_Facets_BlockOrEnd_2= ruleS_1Expr_Facets_BlockOrEnd | this_S_Other_3= ruleS_Other | this_S_Do_4= ruleS_Do | this_S_Return_5= ruleS_Return | this_S_Solve_6= ruleS_Solve | this_S_If_7= ruleS_If | this_S_Try_8= ruleS_Try | this_S_Equations_9= ruleS_Equations )
                            {
                            // InternalMyDsl.g:1179:4: ( ( ( ruleS_Assignment )=>this_S_Assignment_1= ruleS_Assignment ) | this_S_1Expr_Facets_BlockOrEnd_2= ruleS_1Expr_Facets_BlockOrEnd | this_S_Other_3= ruleS_Other | this_S_Do_4= ruleS_Do | this_S_Return_5= ruleS_Return | this_S_Solve_6= ruleS_Solve | this_S_If_7= ruleS_If | this_S_Try_8= ruleS_Try | this_S_Equations_9= ruleS_Equations )
                            int alt25=9;
                            alt25 = dfa25.predict(input);
                            switch (alt25) {
                                case 1 :
                                    // InternalMyDsl.g:1180:5: ( ( ruleS_Assignment )=>this_S_Assignment_1= ruleS_Assignment )
                                    {
                                    // InternalMyDsl.g:1180:5: ( ( ruleS_Assignment )=>this_S_Assignment_1= ruleS_Assignment )
                                    // InternalMyDsl.g:1181:6: ( ruleS_Assignment )=>this_S_Assignment_1= ruleS_Assignment
                                    {
                                    if ( state.backtracking==0 ) {

                                      						newCompositeNode(grammarAccess.getStatementAccess().getS_AssignmentParserRuleCall_0_1_0());
                                      					
                                    }
                                    pushFollow(FOLLOW_2);
                                    this_S_Assignment_1=ruleS_Assignment();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						current = this_S_Assignment_1;
                                      						afterParserOrEnumRuleCall();
                                      					
                                    }

                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalMyDsl.g:1192:5: this_S_1Expr_Facets_BlockOrEnd_2= ruleS_1Expr_Facets_BlockOrEnd
                                    {
                                    if ( state.backtracking==0 ) {

                                      					newCompositeNode(grammarAccess.getStatementAccess().getS_1Expr_Facets_BlockOrEndParserRuleCall_0_1_1());
                                      				
                                    }
                                    pushFollow(FOLLOW_2);
                                    this_S_1Expr_Facets_BlockOrEnd_2=ruleS_1Expr_Facets_BlockOrEnd();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      					current = this_S_1Expr_Facets_BlockOrEnd_2;
                                      					afterParserOrEnumRuleCall();
                                      				
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalMyDsl.g:1201:5: this_S_Other_3= ruleS_Other
                                    {
                                    if ( state.backtracking==0 ) {

                                      					newCompositeNode(grammarAccess.getStatementAccess().getS_OtherParserRuleCall_0_1_2());
                                      				
                                    }
                                    pushFollow(FOLLOW_2);
                                    this_S_Other_3=ruleS_Other();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      					current = this_S_Other_3;
                                      					afterParserOrEnumRuleCall();
                                      				
                                    }

                                    }
                                    break;
                                case 4 :
                                    // InternalMyDsl.g:1210:5: this_S_Do_4= ruleS_Do
                                    {
                                    if ( state.backtracking==0 ) {

                                      					newCompositeNode(grammarAccess.getStatementAccess().getS_DoParserRuleCall_0_1_3());
                                      				
                                    }
                                    pushFollow(FOLLOW_2);
                                    this_S_Do_4=ruleS_Do();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      					current = this_S_Do_4;
                                      					afterParserOrEnumRuleCall();
                                      				
                                    }

                                    }
                                    break;
                                case 5 :
                                    // InternalMyDsl.g:1219:5: this_S_Return_5= ruleS_Return
                                    {
                                    if ( state.backtracking==0 ) {

                                      					newCompositeNode(grammarAccess.getStatementAccess().getS_ReturnParserRuleCall_0_1_4());
                                      				
                                    }
                                    pushFollow(FOLLOW_2);
                                    this_S_Return_5=ruleS_Return();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      					current = this_S_Return_5;
                                      					afterParserOrEnumRuleCall();
                                      				
                                    }

                                    }
                                    break;
                                case 6 :
                                    // InternalMyDsl.g:1228:5: this_S_Solve_6= ruleS_Solve
                                    {
                                    if ( state.backtracking==0 ) {

                                      					newCompositeNode(grammarAccess.getStatementAccess().getS_SolveParserRuleCall_0_1_5());
                                      				
                                    }
                                    pushFollow(FOLLOW_2);
                                    this_S_Solve_6=ruleS_Solve();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      					current = this_S_Solve_6;
                                      					afterParserOrEnumRuleCall();
                                      				
                                    }

                                    }
                                    break;
                                case 7 :
                                    // InternalMyDsl.g:1237:5: this_S_If_7= ruleS_If
                                    {
                                    if ( state.backtracking==0 ) {

                                      					newCompositeNode(grammarAccess.getStatementAccess().getS_IfParserRuleCall_0_1_6());
                                      				
                                    }
                                    pushFollow(FOLLOW_2);
                                    this_S_If_7=ruleS_If();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      					current = this_S_If_7;
                                      					afterParserOrEnumRuleCall();
                                      				
                                    }

                                    }
                                    break;
                                case 8 :
                                    // InternalMyDsl.g:1246:5: this_S_Try_8= ruleS_Try
                                    {
                                    if ( state.backtracking==0 ) {

                                      					newCompositeNode(grammarAccess.getStatementAccess().getS_TryParserRuleCall_0_1_7());
                                      				
                                    }
                                    pushFollow(FOLLOW_2);
                                    this_S_Try_8=ruleS_Try();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      					current = this_S_Try_8;
                                      					afterParserOrEnumRuleCall();
                                      				
                                    }

                                    }
                                    break;
                                case 9 :
                                    // InternalMyDsl.g:1255:5: this_S_Equations_9= ruleS_Equations
                                    {
                                    if ( state.backtracking==0 ) {

                                      					newCompositeNode(grammarAccess.getStatementAccess().getS_EquationsParserRuleCall_0_1_8());
                                      				
                                    }
                                    pushFollow(FOLLOW_2);
                                    this_S_Equations_9=ruleS_Equations();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      					current = this_S_Equations_9;
                                      					afterParserOrEnumRuleCall();
                                      				
                                    }

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:1266:3: this_S_Display_10= ruleS_Display
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getStatementAccess().getS_DisplayParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_S_Display_10=ruleS_Display();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_S_Display_10;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStatement"


    // $ANTLR start "entryRuleS_1Expr_Facets_BlockOrEnd"
    // InternalMyDsl.g:1278:1: entryRuleS_1Expr_Facets_BlockOrEnd returns [EObject current=null] : iv_ruleS_1Expr_Facets_BlockOrEnd= ruleS_1Expr_Facets_BlockOrEnd EOF ;
    public final EObject entryRuleS_1Expr_Facets_BlockOrEnd() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleS_1Expr_Facets_BlockOrEnd = null;


        try {
            // InternalMyDsl.g:1278:66: (iv_ruleS_1Expr_Facets_BlockOrEnd= ruleS_1Expr_Facets_BlockOrEnd EOF )
            // InternalMyDsl.g:1279:2: iv_ruleS_1Expr_Facets_BlockOrEnd= ruleS_1Expr_Facets_BlockOrEnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getS_1Expr_Facets_BlockOrEndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleS_1Expr_Facets_BlockOrEnd=ruleS_1Expr_Facets_BlockOrEnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleS_1Expr_Facets_BlockOrEnd; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleS_1Expr_Facets_BlockOrEnd"


    // $ANTLR start "ruleS_1Expr_Facets_BlockOrEnd"
    // InternalMyDsl.g:1285:1: ruleS_1Expr_Facets_BlockOrEnd returns [EObject current=null] : ( ( (lv_key_0_0= rule_1Expr_Facets_BlockOrEnd_Key ) ) ( (lv_firstFacet_1_0= ruleFirstFacetKey ) )? ( (lv_expr_2_0= ruleExpression ) ) ( (lv_facets_3_0= ruleFacet ) )* ( ( (lv_block_4_0= ruleBlock ) ) | otherlv_5= ';' ) ) ;
    public final EObject ruleS_1Expr_Facets_BlockOrEnd() throws RecognitionException {
        EObject current = null;

        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_key_0_0 = null;

        AntlrDatatypeRuleToken lv_firstFacet_1_0 = null;

        EObject lv_expr_2_0 = null;

        EObject lv_facets_3_0 = null;

        EObject lv_block_4_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:1291:2: ( ( ( (lv_key_0_0= rule_1Expr_Facets_BlockOrEnd_Key ) ) ( (lv_firstFacet_1_0= ruleFirstFacetKey ) )? ( (lv_expr_2_0= ruleExpression ) ) ( (lv_facets_3_0= ruleFacet ) )* ( ( (lv_block_4_0= ruleBlock ) ) | otherlv_5= ';' ) ) )
            // InternalMyDsl.g:1292:2: ( ( (lv_key_0_0= rule_1Expr_Facets_BlockOrEnd_Key ) ) ( (lv_firstFacet_1_0= ruleFirstFacetKey ) )? ( (lv_expr_2_0= ruleExpression ) ) ( (lv_facets_3_0= ruleFacet ) )* ( ( (lv_block_4_0= ruleBlock ) ) | otherlv_5= ';' ) )
            {
            // InternalMyDsl.g:1292:2: ( ( (lv_key_0_0= rule_1Expr_Facets_BlockOrEnd_Key ) ) ( (lv_firstFacet_1_0= ruleFirstFacetKey ) )? ( (lv_expr_2_0= ruleExpression ) ) ( (lv_facets_3_0= ruleFacet ) )* ( ( (lv_block_4_0= ruleBlock ) ) | otherlv_5= ';' ) )
            // InternalMyDsl.g:1293:3: ( (lv_key_0_0= rule_1Expr_Facets_BlockOrEnd_Key ) ) ( (lv_firstFacet_1_0= ruleFirstFacetKey ) )? ( (lv_expr_2_0= ruleExpression ) ) ( (lv_facets_3_0= ruleFacet ) )* ( ( (lv_block_4_0= ruleBlock ) ) | otherlv_5= ';' )
            {
            // InternalMyDsl.g:1293:3: ( (lv_key_0_0= rule_1Expr_Facets_BlockOrEnd_Key ) )
            // InternalMyDsl.g:1294:4: (lv_key_0_0= rule_1Expr_Facets_BlockOrEnd_Key )
            {
            // InternalMyDsl.g:1294:4: (lv_key_0_0= rule_1Expr_Facets_BlockOrEnd_Key )
            // InternalMyDsl.g:1295:5: lv_key_0_0= rule_1Expr_Facets_BlockOrEnd_Key
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getS_1Expr_Facets_BlockOrEndAccess().getKey_1Expr_Facets_BlockOrEnd_KeyParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_5);
            lv_key_0_0=rule_1Expr_Facets_BlockOrEnd_Key();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getS_1Expr_Facets_BlockOrEndRule());
              					}
              					set(
              						current,
              						"key",
              						lv_key_0_0,
              						"org.xtext.example.mydsl.MyDsl._1Expr_Facets_BlockOrEnd_Key");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyDsl.g:1312:3: ( (lv_firstFacet_1_0= ruleFirstFacetKey ) )?
            int alt28=2;
            alt28 = dfa28.predict(input);
            switch (alt28) {
                case 1 :
                    // InternalMyDsl.g:1313:4: (lv_firstFacet_1_0= ruleFirstFacetKey )
                    {
                    // InternalMyDsl.g:1313:4: (lv_firstFacet_1_0= ruleFirstFacetKey )
                    // InternalMyDsl.g:1314:5: lv_firstFacet_1_0= ruleFirstFacetKey
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getS_1Expr_Facets_BlockOrEndAccess().getFirstFacetFirstFacetKeyParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_5);
                    lv_firstFacet_1_0=ruleFirstFacetKey();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getS_1Expr_Facets_BlockOrEndRule());
                      					}
                      					set(
                      						current,
                      						"firstFacet",
                      						lv_firstFacet_1_0,
                      						"org.xtext.example.mydsl.MyDsl.FirstFacetKey");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalMyDsl.g:1331:3: ( (lv_expr_2_0= ruleExpression ) )
            // InternalMyDsl.g:1332:4: (lv_expr_2_0= ruleExpression )
            {
            // InternalMyDsl.g:1332:4: (lv_expr_2_0= ruleExpression )
            // InternalMyDsl.g:1333:5: lv_expr_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getS_1Expr_Facets_BlockOrEndAccess().getExprExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_22);
            lv_expr_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getS_1Expr_Facets_BlockOrEndRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_2_0,
              						"org.xtext.example.mydsl.MyDsl.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyDsl.g:1350:3: ( (lv_facets_3_0= ruleFacet ) )*
            loop29:
            do {
                int alt29=2;
                int LA29_0 = input.LA(1);

                if ( (LA29_0==RULE_ID||LA29_0==16||LA29_0==26||LA29_0==30||(LA29_0>=38 && LA29_0<=39)||(LA29_0>=112 && LA29_0<=136)) ) {
                    alt29=1;
                }


                switch (alt29) {
            	case 1 :
            	    // InternalMyDsl.g:1351:4: (lv_facets_3_0= ruleFacet )
            	    {
            	    // InternalMyDsl.g:1351:4: (lv_facets_3_0= ruleFacet )
            	    // InternalMyDsl.g:1352:5: lv_facets_3_0= ruleFacet
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getS_1Expr_Facets_BlockOrEndAccess().getFacetsFacetParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_22);
            	    lv_facets_3_0=ruleFacet();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getS_1Expr_Facets_BlockOrEndRule());
            	      					}
            	      					add(
            	      						current,
            	      						"facets",
            	      						lv_facets_3_0,
            	      						"org.xtext.example.mydsl.MyDsl.Facet");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop29;
                }
            } while (true);

            // InternalMyDsl.g:1369:3: ( ( (lv_block_4_0= ruleBlock ) ) | otherlv_5= ';' )
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==45) ) {
                alt30=1;
            }
            else if ( (LA30_0==28) ) {
                alt30=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }
            switch (alt30) {
                case 1 :
                    // InternalMyDsl.g:1370:4: ( (lv_block_4_0= ruleBlock ) )
                    {
                    // InternalMyDsl.g:1370:4: ( (lv_block_4_0= ruleBlock ) )
                    // InternalMyDsl.g:1371:5: (lv_block_4_0= ruleBlock )
                    {
                    // InternalMyDsl.g:1371:5: (lv_block_4_0= ruleBlock )
                    // InternalMyDsl.g:1372:6: lv_block_4_0= ruleBlock
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getS_1Expr_Facets_BlockOrEndAccess().getBlockBlockParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_block_4_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getS_1Expr_Facets_BlockOrEndRule());
                      						}
                      						set(
                      							current,
                      							"block",
                      							lv_block_4_0,
                      							"org.xtext.example.mydsl.MyDsl.Block");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:1390:4: otherlv_5= ';'
                    {
                    otherlv_5=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getS_1Expr_Facets_BlockOrEndAccess().getSemicolonKeyword_4_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleS_1Expr_Facets_BlockOrEnd"


    // $ANTLR start "entryRuleS_Do"
    // InternalMyDsl.g:1399:1: entryRuleS_Do returns [EObject current=null] : iv_ruleS_Do= ruleS_Do EOF ;
    public final EObject entryRuleS_Do() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleS_Do = null;


        try {
            // InternalMyDsl.g:1399:45: (iv_ruleS_Do= ruleS_Do EOF )
            // InternalMyDsl.g:1400:2: iv_ruleS_Do= ruleS_Do EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getS_DoRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleS_Do=ruleS_Do();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleS_Do; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleS_Do"


    // $ANTLR start "ruleS_Do"
    // InternalMyDsl.g:1406:1: ruleS_Do returns [EObject current=null] : ( ( (lv_key_0_0= rule_DoKey ) ) ( (lv_firstFacet_1_0= 'action:' ) )? ( (lv_expr_2_0= ruleAbstractRef ) ) ( (lv_facets_3_0= ruleFacet ) )* ( ( (lv_block_4_0= ruleBlock ) ) | otherlv_5= ';' ) ) ;
    public final EObject ruleS_Do() throws RecognitionException {
        EObject current = null;

        Token lv_firstFacet_1_0=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_key_0_0 = null;

        EObject lv_expr_2_0 = null;

        EObject lv_facets_3_0 = null;

        EObject lv_block_4_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:1412:2: ( ( ( (lv_key_0_0= rule_DoKey ) ) ( (lv_firstFacet_1_0= 'action:' ) )? ( (lv_expr_2_0= ruleAbstractRef ) ) ( (lv_facets_3_0= ruleFacet ) )* ( ( (lv_block_4_0= ruleBlock ) ) | otherlv_5= ';' ) ) )
            // InternalMyDsl.g:1413:2: ( ( (lv_key_0_0= rule_DoKey ) ) ( (lv_firstFacet_1_0= 'action:' ) )? ( (lv_expr_2_0= ruleAbstractRef ) ) ( (lv_facets_3_0= ruleFacet ) )* ( ( (lv_block_4_0= ruleBlock ) ) | otherlv_5= ';' ) )
            {
            // InternalMyDsl.g:1413:2: ( ( (lv_key_0_0= rule_DoKey ) ) ( (lv_firstFacet_1_0= 'action:' ) )? ( (lv_expr_2_0= ruleAbstractRef ) ) ( (lv_facets_3_0= ruleFacet ) )* ( ( (lv_block_4_0= ruleBlock ) ) | otherlv_5= ';' ) )
            // InternalMyDsl.g:1414:3: ( (lv_key_0_0= rule_DoKey ) ) ( (lv_firstFacet_1_0= 'action:' ) )? ( (lv_expr_2_0= ruleAbstractRef ) ) ( (lv_facets_3_0= ruleFacet ) )* ( ( (lv_block_4_0= ruleBlock ) ) | otherlv_5= ';' )
            {
            // InternalMyDsl.g:1414:3: ( (lv_key_0_0= rule_DoKey ) )
            // InternalMyDsl.g:1415:4: (lv_key_0_0= rule_DoKey )
            {
            // InternalMyDsl.g:1415:4: (lv_key_0_0= rule_DoKey )
            // InternalMyDsl.g:1416:5: lv_key_0_0= rule_DoKey
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getS_DoAccess().getKey_DoKeyParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_24);
            lv_key_0_0=rule_DoKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getS_DoRule());
              					}
              					set(
              						current,
              						"key",
              						lv_key_0_0,
              						"org.xtext.example.mydsl.MyDsl._DoKey");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyDsl.g:1433:3: ( (lv_firstFacet_1_0= 'action:' ) )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==30) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // InternalMyDsl.g:1434:4: (lv_firstFacet_1_0= 'action:' )
                    {
                    // InternalMyDsl.g:1434:4: (lv_firstFacet_1_0= 'action:' )
                    // InternalMyDsl.g:1435:5: lv_firstFacet_1_0= 'action:'
                    {
                    lv_firstFacet_1_0=(Token)match(input,30,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_firstFacet_1_0, grammarAccess.getS_DoAccess().getFirstFacetActionKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getS_DoRule());
                      					}
                      					setWithLastConsumed(current, "firstFacet", lv_firstFacet_1_0, "action:");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalMyDsl.g:1447:3: ( (lv_expr_2_0= ruleAbstractRef ) )
            // InternalMyDsl.g:1448:4: (lv_expr_2_0= ruleAbstractRef )
            {
            // InternalMyDsl.g:1448:4: (lv_expr_2_0= ruleAbstractRef )
            // InternalMyDsl.g:1449:5: lv_expr_2_0= ruleAbstractRef
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getS_DoAccess().getExprAbstractRefParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_22);
            lv_expr_2_0=ruleAbstractRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getS_DoRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_2_0,
              						"org.xtext.example.mydsl.MyDsl.AbstractRef");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyDsl.g:1466:3: ( (lv_facets_3_0= ruleFacet ) )*
            loop32:
            do {
                int alt32=2;
                int LA32_0 = input.LA(1);

                if ( (LA32_0==RULE_ID||LA32_0==16||LA32_0==26||LA32_0==30||(LA32_0>=38 && LA32_0<=39)||(LA32_0>=112 && LA32_0<=136)) ) {
                    alt32=1;
                }


                switch (alt32) {
            	case 1 :
            	    // InternalMyDsl.g:1467:4: (lv_facets_3_0= ruleFacet )
            	    {
            	    // InternalMyDsl.g:1467:4: (lv_facets_3_0= ruleFacet )
            	    // InternalMyDsl.g:1468:5: lv_facets_3_0= ruleFacet
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getS_DoAccess().getFacetsFacetParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_22);
            	    lv_facets_3_0=ruleFacet();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getS_DoRule());
            	      					}
            	      					add(
            	      						current,
            	      						"facets",
            	      						lv_facets_3_0,
            	      						"org.xtext.example.mydsl.MyDsl.Facet");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop32;
                }
            } while (true);

            // InternalMyDsl.g:1485:3: ( ( (lv_block_4_0= ruleBlock ) ) | otherlv_5= ';' )
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==45) ) {
                alt33=1;
            }
            else if ( (LA33_0==28) ) {
                alt33=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }
            switch (alt33) {
                case 1 :
                    // InternalMyDsl.g:1486:4: ( (lv_block_4_0= ruleBlock ) )
                    {
                    // InternalMyDsl.g:1486:4: ( (lv_block_4_0= ruleBlock ) )
                    // InternalMyDsl.g:1487:5: (lv_block_4_0= ruleBlock )
                    {
                    // InternalMyDsl.g:1487:5: (lv_block_4_0= ruleBlock )
                    // InternalMyDsl.g:1488:6: lv_block_4_0= ruleBlock
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getS_DoAccess().getBlockBlockParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_block_4_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getS_DoRule());
                      						}
                      						set(
                      							current,
                      							"block",
                      							lv_block_4_0,
                      							"org.xtext.example.mydsl.MyDsl.Block");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:1506:4: otherlv_5= ';'
                    {
                    otherlv_5=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getS_DoAccess().getSemicolonKeyword_4_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleS_Do"


    // $ANTLR start "entryRuleS_Loop"
    // InternalMyDsl.g:1515:1: entryRuleS_Loop returns [EObject current=null] : iv_ruleS_Loop= ruleS_Loop EOF ;
    public final EObject entryRuleS_Loop() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleS_Loop = null;


        try {
            // InternalMyDsl.g:1515:47: (iv_ruleS_Loop= ruleS_Loop EOF )
            // InternalMyDsl.g:1516:2: iv_ruleS_Loop= ruleS_Loop EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getS_LoopRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleS_Loop=ruleS_Loop();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleS_Loop; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleS_Loop"


    // $ANTLR start "ruleS_Loop"
    // InternalMyDsl.g:1522:1: ruleS_Loop returns [EObject current=null] : ( ( (lv_key_0_0= 'loop' ) ) ( (lv_name_1_0= RULE_ID ) )? ( (lv_facets_2_0= ruleFacet ) )* ( (lv_block_3_0= ruleBlock ) ) ) ;
    public final EObject ruleS_Loop() throws RecognitionException {
        EObject current = null;

        Token lv_key_0_0=null;
        Token lv_name_1_0=null;
        EObject lv_facets_2_0 = null;

        EObject lv_block_3_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:1528:2: ( ( ( (lv_key_0_0= 'loop' ) ) ( (lv_name_1_0= RULE_ID ) )? ( (lv_facets_2_0= ruleFacet ) )* ( (lv_block_3_0= ruleBlock ) ) ) )
            // InternalMyDsl.g:1529:2: ( ( (lv_key_0_0= 'loop' ) ) ( (lv_name_1_0= RULE_ID ) )? ( (lv_facets_2_0= ruleFacet ) )* ( (lv_block_3_0= ruleBlock ) ) )
            {
            // InternalMyDsl.g:1529:2: ( ( (lv_key_0_0= 'loop' ) ) ( (lv_name_1_0= RULE_ID ) )? ( (lv_facets_2_0= ruleFacet ) )* ( (lv_block_3_0= ruleBlock ) ) )
            // InternalMyDsl.g:1530:3: ( (lv_key_0_0= 'loop' ) ) ( (lv_name_1_0= RULE_ID ) )? ( (lv_facets_2_0= ruleFacet ) )* ( (lv_block_3_0= ruleBlock ) )
            {
            // InternalMyDsl.g:1530:3: ( (lv_key_0_0= 'loop' ) )
            // InternalMyDsl.g:1531:4: (lv_key_0_0= 'loop' )
            {
            // InternalMyDsl.g:1531:4: (lv_key_0_0= 'loop' )
            // InternalMyDsl.g:1532:5: lv_key_0_0= 'loop'
            {
            lv_key_0_0=(Token)match(input,31,FOLLOW_25); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_key_0_0, grammarAccess.getS_LoopAccess().getKeyLoopKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getS_LoopRule());
              					}
              					setWithLastConsumed(current, "key", lv_key_0_0, "loop");
              				
            }

            }


            }

            // InternalMyDsl.g:1544:3: ( (lv_name_1_0= RULE_ID ) )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==RULE_ID) ) {
                int LA34_1 = input.LA(2);

                if ( (LA34_1==RULE_ID||LA34_1==16||LA34_1==26||LA34_1==30||(LA34_1>=38 && LA34_1<=39)||LA34_1==45||(LA34_1>=112 && LA34_1<=136)) ) {
                    alt34=1;
                }
            }
            switch (alt34) {
                case 1 :
                    // InternalMyDsl.g:1545:4: (lv_name_1_0= RULE_ID )
                    {
                    // InternalMyDsl.g:1545:4: (lv_name_1_0= RULE_ID )
                    // InternalMyDsl.g:1546:5: lv_name_1_0= RULE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_1_0, grammarAccess.getS_LoopAccess().getNameIDTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getS_LoopRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_1_0,
                      						"org.xtext.example.mydsl.MyDsl.ID");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalMyDsl.g:1562:3: ( (lv_facets_2_0= ruleFacet ) )*
            loop35:
            do {
                int alt35=2;
                int LA35_0 = input.LA(1);

                if ( (LA35_0==RULE_ID||LA35_0==16||LA35_0==26||LA35_0==30||(LA35_0>=38 && LA35_0<=39)||(LA35_0>=112 && LA35_0<=136)) ) {
                    alt35=1;
                }


                switch (alt35) {
            	case 1 :
            	    // InternalMyDsl.g:1563:4: (lv_facets_2_0= ruleFacet )
            	    {
            	    // InternalMyDsl.g:1563:4: (lv_facets_2_0= ruleFacet )
            	    // InternalMyDsl.g:1564:5: lv_facets_2_0= ruleFacet
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getS_LoopAccess().getFacetsFacetParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_25);
            	    lv_facets_2_0=ruleFacet();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getS_LoopRule());
            	      					}
            	      					add(
            	      						current,
            	      						"facets",
            	      						lv_facets_2_0,
            	      						"org.xtext.example.mydsl.MyDsl.Facet");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop35;
                }
            } while (true);

            // InternalMyDsl.g:1581:3: ( (lv_block_3_0= ruleBlock ) )
            // InternalMyDsl.g:1582:4: (lv_block_3_0= ruleBlock )
            {
            // InternalMyDsl.g:1582:4: (lv_block_3_0= ruleBlock )
            // InternalMyDsl.g:1583:5: lv_block_3_0= ruleBlock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getS_LoopAccess().getBlockBlockParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_block_3_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getS_LoopRule());
              					}
              					set(
              						current,
              						"block",
              						lv_block_3_0,
              						"org.xtext.example.mydsl.MyDsl.Block");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleS_Loop"


    // $ANTLR start "entryRuleS_If"
    // InternalMyDsl.g:1604:1: entryRuleS_If returns [EObject current=null] : iv_ruleS_If= ruleS_If EOF ;
    public final EObject entryRuleS_If() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleS_If = null;


        try {
            // InternalMyDsl.g:1604:45: (iv_ruleS_If= ruleS_If EOF )
            // InternalMyDsl.g:1605:2: iv_ruleS_If= ruleS_If EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getS_IfRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleS_If=ruleS_If();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleS_If; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleS_If"


    // $ANTLR start "ruleS_If"
    // InternalMyDsl.g:1611:1: ruleS_If returns [EObject current=null] : ( ( (lv_key_0_0= 'if' ) ) ( (lv_firstFacet_1_0= 'condition:' ) )? ( (lv_expr_2_0= ruleExpression ) ) ( (lv_block_3_0= ruleBlock ) ) ( ( ( 'else' )=>otherlv_4= 'else' ) ( ( (lv_else_5_1= ruleS_If | lv_else_5_2= ruleBlock ) ) ) )? ) ;
    public final EObject ruleS_If() throws RecognitionException {
        EObject current = null;

        Token lv_key_0_0=null;
        Token lv_firstFacet_1_0=null;
        Token otherlv_4=null;
        EObject lv_expr_2_0 = null;

        EObject lv_block_3_0 = null;

        EObject lv_else_5_1 = null;

        EObject lv_else_5_2 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:1617:2: ( ( ( (lv_key_0_0= 'if' ) ) ( (lv_firstFacet_1_0= 'condition:' ) )? ( (lv_expr_2_0= ruleExpression ) ) ( (lv_block_3_0= ruleBlock ) ) ( ( ( 'else' )=>otherlv_4= 'else' ) ( ( (lv_else_5_1= ruleS_If | lv_else_5_2= ruleBlock ) ) ) )? ) )
            // InternalMyDsl.g:1618:2: ( ( (lv_key_0_0= 'if' ) ) ( (lv_firstFacet_1_0= 'condition:' ) )? ( (lv_expr_2_0= ruleExpression ) ) ( (lv_block_3_0= ruleBlock ) ) ( ( ( 'else' )=>otherlv_4= 'else' ) ( ( (lv_else_5_1= ruleS_If | lv_else_5_2= ruleBlock ) ) ) )? )
            {
            // InternalMyDsl.g:1618:2: ( ( (lv_key_0_0= 'if' ) ) ( (lv_firstFacet_1_0= 'condition:' ) )? ( (lv_expr_2_0= ruleExpression ) ) ( (lv_block_3_0= ruleBlock ) ) ( ( ( 'else' )=>otherlv_4= 'else' ) ( ( (lv_else_5_1= ruleS_If | lv_else_5_2= ruleBlock ) ) ) )? )
            // InternalMyDsl.g:1619:3: ( (lv_key_0_0= 'if' ) ) ( (lv_firstFacet_1_0= 'condition:' ) )? ( (lv_expr_2_0= ruleExpression ) ) ( (lv_block_3_0= ruleBlock ) ) ( ( ( 'else' )=>otherlv_4= 'else' ) ( ( (lv_else_5_1= ruleS_If | lv_else_5_2= ruleBlock ) ) ) )?
            {
            // InternalMyDsl.g:1619:3: ( (lv_key_0_0= 'if' ) )
            // InternalMyDsl.g:1620:4: (lv_key_0_0= 'if' )
            {
            // InternalMyDsl.g:1620:4: (lv_key_0_0= 'if' )
            // InternalMyDsl.g:1621:5: lv_key_0_0= 'if'
            {
            lv_key_0_0=(Token)match(input,32,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_key_0_0, grammarAccess.getS_IfAccess().getKeyIfKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getS_IfRule());
              					}
              					setWithLastConsumed(current, "key", lv_key_0_0, "if");
              				
            }

            }


            }

            // InternalMyDsl.g:1633:3: ( (lv_firstFacet_1_0= 'condition:' ) )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==33) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // InternalMyDsl.g:1634:4: (lv_firstFacet_1_0= 'condition:' )
                    {
                    // InternalMyDsl.g:1634:4: (lv_firstFacet_1_0= 'condition:' )
                    // InternalMyDsl.g:1635:5: lv_firstFacet_1_0= 'condition:'
                    {
                    lv_firstFacet_1_0=(Token)match(input,33,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_firstFacet_1_0, grammarAccess.getS_IfAccess().getFirstFacetConditionKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getS_IfRule());
                      					}
                      					setWithLastConsumed(current, "firstFacet", lv_firstFacet_1_0, "condition:");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalMyDsl.g:1647:3: ( (lv_expr_2_0= ruleExpression ) )
            // InternalMyDsl.g:1648:4: (lv_expr_2_0= ruleExpression )
            {
            // InternalMyDsl.g:1648:4: (lv_expr_2_0= ruleExpression )
            // InternalMyDsl.g:1649:5: lv_expr_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getS_IfAccess().getExprExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_3);
            lv_expr_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getS_IfRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_2_0,
              						"org.xtext.example.mydsl.MyDsl.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyDsl.g:1666:3: ( (lv_block_3_0= ruleBlock ) )
            // InternalMyDsl.g:1667:4: (lv_block_3_0= ruleBlock )
            {
            // InternalMyDsl.g:1667:4: (lv_block_3_0= ruleBlock )
            // InternalMyDsl.g:1668:5: lv_block_3_0= ruleBlock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getS_IfAccess().getBlockBlockParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_27);
            lv_block_3_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getS_IfRule());
              					}
              					set(
              						current,
              						"block",
              						lv_block_3_0,
              						"org.xtext.example.mydsl.MyDsl.Block");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyDsl.g:1685:3: ( ( ( 'else' )=>otherlv_4= 'else' ) ( ( (lv_else_5_1= ruleS_If | lv_else_5_2= ruleBlock ) ) ) )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==34) && (synpred4_InternalMyDsl())) {
                alt38=1;
            }
            switch (alt38) {
                case 1 :
                    // InternalMyDsl.g:1686:4: ( ( 'else' )=>otherlv_4= 'else' ) ( ( (lv_else_5_1= ruleS_If | lv_else_5_2= ruleBlock ) ) )
                    {
                    // InternalMyDsl.g:1686:4: ( ( 'else' )=>otherlv_4= 'else' )
                    // InternalMyDsl.g:1687:5: ( 'else' )=>otherlv_4= 'else'
                    {
                    otherlv_4=(Token)match(input,34,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getS_IfAccess().getElseKeyword_4_0());
                      				
                    }

                    }

                    // InternalMyDsl.g:1693:4: ( ( (lv_else_5_1= ruleS_If | lv_else_5_2= ruleBlock ) ) )
                    // InternalMyDsl.g:1694:5: ( (lv_else_5_1= ruleS_If | lv_else_5_2= ruleBlock ) )
                    {
                    // InternalMyDsl.g:1694:5: ( (lv_else_5_1= ruleS_If | lv_else_5_2= ruleBlock ) )
                    // InternalMyDsl.g:1695:6: (lv_else_5_1= ruleS_If | lv_else_5_2= ruleBlock )
                    {
                    // InternalMyDsl.g:1695:6: (lv_else_5_1= ruleS_If | lv_else_5_2= ruleBlock )
                    int alt37=2;
                    int LA37_0 = input.LA(1);

                    if ( (LA37_0==32) ) {
                        alt37=1;
                    }
                    else if ( (LA37_0==45) ) {
                        alt37=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 37, 0, input);

                        throw nvae;
                    }
                    switch (alt37) {
                        case 1 :
                            // InternalMyDsl.g:1696:7: lv_else_5_1= ruleS_If
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getS_IfAccess().getElseS_IfParserRuleCall_4_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_else_5_1=ruleS_If();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getS_IfRule());
                              							}
                              							set(
                              								current,
                              								"else",
                              								lv_else_5_1,
                              								"org.xtext.example.mydsl.MyDsl.S_If");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalMyDsl.g:1712:7: lv_else_5_2= ruleBlock
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getS_IfAccess().getElseBlockParserRuleCall_4_1_0_1());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_else_5_2=ruleBlock();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getS_IfRule());
                              							}
                              							set(
                              								current,
                              								"else",
                              								lv_else_5_2,
                              								"org.xtext.example.mydsl.MyDsl.Block");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleS_If"


    // $ANTLR start "entryRuleS_Try"
    // InternalMyDsl.g:1735:1: entryRuleS_Try returns [EObject current=null] : iv_ruleS_Try= ruleS_Try EOF ;
    public final EObject entryRuleS_Try() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleS_Try = null;


        try {
            // InternalMyDsl.g:1735:46: (iv_ruleS_Try= ruleS_Try EOF )
            // InternalMyDsl.g:1736:2: iv_ruleS_Try= ruleS_Try EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getS_TryRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleS_Try=ruleS_Try();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleS_Try; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleS_Try"


    // $ANTLR start "ruleS_Try"
    // InternalMyDsl.g:1742:1: ruleS_Try returns [EObject current=null] : ( ( (lv_key_0_0= 'try' ) ) ( (lv_block_1_0= ruleBlock ) ) ( ( ( 'catch' )=>otherlv_2= 'catch' ) ( (lv_catch_3_0= ruleBlock ) ) )? ) ;
    public final EObject ruleS_Try() throws RecognitionException {
        EObject current = null;

        Token lv_key_0_0=null;
        Token otherlv_2=null;
        EObject lv_block_1_0 = null;

        EObject lv_catch_3_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:1748:2: ( ( ( (lv_key_0_0= 'try' ) ) ( (lv_block_1_0= ruleBlock ) ) ( ( ( 'catch' )=>otherlv_2= 'catch' ) ( (lv_catch_3_0= ruleBlock ) ) )? ) )
            // InternalMyDsl.g:1749:2: ( ( (lv_key_0_0= 'try' ) ) ( (lv_block_1_0= ruleBlock ) ) ( ( ( 'catch' )=>otherlv_2= 'catch' ) ( (lv_catch_3_0= ruleBlock ) ) )? )
            {
            // InternalMyDsl.g:1749:2: ( ( (lv_key_0_0= 'try' ) ) ( (lv_block_1_0= ruleBlock ) ) ( ( ( 'catch' )=>otherlv_2= 'catch' ) ( (lv_catch_3_0= ruleBlock ) ) )? )
            // InternalMyDsl.g:1750:3: ( (lv_key_0_0= 'try' ) ) ( (lv_block_1_0= ruleBlock ) ) ( ( ( 'catch' )=>otherlv_2= 'catch' ) ( (lv_catch_3_0= ruleBlock ) ) )?
            {
            // InternalMyDsl.g:1750:3: ( (lv_key_0_0= 'try' ) )
            // InternalMyDsl.g:1751:4: (lv_key_0_0= 'try' )
            {
            // InternalMyDsl.g:1751:4: (lv_key_0_0= 'try' )
            // InternalMyDsl.g:1752:5: lv_key_0_0= 'try'
            {
            lv_key_0_0=(Token)match(input,35,FOLLOW_3); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_key_0_0, grammarAccess.getS_TryAccess().getKeyTryKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getS_TryRule());
              					}
              					setWithLastConsumed(current, "key", lv_key_0_0, "try");
              				
            }

            }


            }

            // InternalMyDsl.g:1764:3: ( (lv_block_1_0= ruleBlock ) )
            // InternalMyDsl.g:1765:4: (lv_block_1_0= ruleBlock )
            {
            // InternalMyDsl.g:1765:4: (lv_block_1_0= ruleBlock )
            // InternalMyDsl.g:1766:5: lv_block_1_0= ruleBlock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getS_TryAccess().getBlockBlockParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_29);
            lv_block_1_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getS_TryRule());
              					}
              					set(
              						current,
              						"block",
              						lv_block_1_0,
              						"org.xtext.example.mydsl.MyDsl.Block");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyDsl.g:1783:3: ( ( ( 'catch' )=>otherlv_2= 'catch' ) ( (lv_catch_3_0= ruleBlock ) ) )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==36) && (synpred5_InternalMyDsl())) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // InternalMyDsl.g:1784:4: ( ( 'catch' )=>otherlv_2= 'catch' ) ( (lv_catch_3_0= ruleBlock ) )
                    {
                    // InternalMyDsl.g:1784:4: ( ( 'catch' )=>otherlv_2= 'catch' )
                    // InternalMyDsl.g:1785:5: ( 'catch' )=>otherlv_2= 'catch'
                    {
                    otherlv_2=(Token)match(input,36,FOLLOW_3); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getS_TryAccess().getCatchKeyword_2_0());
                      				
                    }

                    }

                    // InternalMyDsl.g:1791:4: ( (lv_catch_3_0= ruleBlock ) )
                    // InternalMyDsl.g:1792:5: (lv_catch_3_0= ruleBlock )
                    {
                    // InternalMyDsl.g:1792:5: (lv_catch_3_0= ruleBlock )
                    // InternalMyDsl.g:1793:6: lv_catch_3_0= ruleBlock
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getS_TryAccess().getCatchBlockParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_catch_3_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getS_TryRule());
                      						}
                      						set(
                      							current,
                      							"catch",
                      							lv_catch_3_0,
                      							"org.xtext.example.mydsl.MyDsl.Block");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleS_Try"


    // $ANTLR start "entryRuleS_Other"
    // InternalMyDsl.g:1815:1: entryRuleS_Other returns [EObject current=null] : iv_ruleS_Other= ruleS_Other EOF ;
    public final EObject entryRuleS_Other() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleS_Other = null;


        try {
            // InternalMyDsl.g:1815:48: (iv_ruleS_Other= ruleS_Other EOF )
            // InternalMyDsl.g:1816:2: iv_ruleS_Other= ruleS_Other EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getS_OtherRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleS_Other=ruleS_Other();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleS_Other; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleS_Other"


    // $ANTLR start "ruleS_Other"
    // InternalMyDsl.g:1822:1: ruleS_Other returns [EObject current=null] : ( ( (lv_key_0_0= RULE_ID ) ) ( (lv_facets_1_0= ruleFacet ) )* ( ( (lv_block_2_0= ruleBlock ) ) | otherlv_3= ';' ) ) ;
    public final EObject ruleS_Other() throws RecognitionException {
        EObject current = null;

        Token lv_key_0_0=null;
        Token otherlv_3=null;
        EObject lv_facets_1_0 = null;

        EObject lv_block_2_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:1828:2: ( ( ( (lv_key_0_0= RULE_ID ) ) ( (lv_facets_1_0= ruleFacet ) )* ( ( (lv_block_2_0= ruleBlock ) ) | otherlv_3= ';' ) ) )
            // InternalMyDsl.g:1829:2: ( ( (lv_key_0_0= RULE_ID ) ) ( (lv_facets_1_0= ruleFacet ) )* ( ( (lv_block_2_0= ruleBlock ) ) | otherlv_3= ';' ) )
            {
            // InternalMyDsl.g:1829:2: ( ( (lv_key_0_0= RULE_ID ) ) ( (lv_facets_1_0= ruleFacet ) )* ( ( (lv_block_2_0= ruleBlock ) ) | otherlv_3= ';' ) )
            // InternalMyDsl.g:1830:3: ( (lv_key_0_0= RULE_ID ) ) ( (lv_facets_1_0= ruleFacet ) )* ( ( (lv_block_2_0= ruleBlock ) ) | otherlv_3= ';' )
            {
            // InternalMyDsl.g:1830:3: ( (lv_key_0_0= RULE_ID ) )
            // InternalMyDsl.g:1831:4: (lv_key_0_0= RULE_ID )
            {
            // InternalMyDsl.g:1831:4: (lv_key_0_0= RULE_ID )
            // InternalMyDsl.g:1832:5: lv_key_0_0= RULE_ID
            {
            lv_key_0_0=(Token)match(input,RULE_ID,FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_key_0_0, grammarAccess.getS_OtherAccess().getKeyIDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getS_OtherRule());
              					}
              					setWithLastConsumed(
              						current,
              						"key",
              						lv_key_0_0,
              						"org.xtext.example.mydsl.MyDsl.ID");
              				
            }

            }


            }

            // InternalMyDsl.g:1848:3: ( (lv_facets_1_0= ruleFacet ) )*
            loop40:
            do {
                int alt40=2;
                int LA40_0 = input.LA(1);

                if ( (LA40_0==RULE_ID||LA40_0==16||LA40_0==26||LA40_0==30||(LA40_0>=38 && LA40_0<=39)||(LA40_0>=112 && LA40_0<=136)) ) {
                    alt40=1;
                }


                switch (alt40) {
            	case 1 :
            	    // InternalMyDsl.g:1849:4: (lv_facets_1_0= ruleFacet )
            	    {
            	    // InternalMyDsl.g:1849:4: (lv_facets_1_0= ruleFacet )
            	    // InternalMyDsl.g:1850:5: lv_facets_1_0= ruleFacet
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getS_OtherAccess().getFacetsFacetParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_22);
            	    lv_facets_1_0=ruleFacet();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getS_OtherRule());
            	      					}
            	      					add(
            	      						current,
            	      						"facets",
            	      						lv_facets_1_0,
            	      						"org.xtext.example.mydsl.MyDsl.Facet");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop40;
                }
            } while (true);

            // InternalMyDsl.g:1867:3: ( ( (lv_block_2_0= ruleBlock ) ) | otherlv_3= ';' )
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==45) ) {
                alt41=1;
            }
            else if ( (LA41_0==28) ) {
                alt41=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 41, 0, input);

                throw nvae;
            }
            switch (alt41) {
                case 1 :
                    // InternalMyDsl.g:1868:4: ( (lv_block_2_0= ruleBlock ) )
                    {
                    // InternalMyDsl.g:1868:4: ( (lv_block_2_0= ruleBlock ) )
                    // InternalMyDsl.g:1869:5: (lv_block_2_0= ruleBlock )
                    {
                    // InternalMyDsl.g:1869:5: (lv_block_2_0= ruleBlock )
                    // InternalMyDsl.g:1870:6: lv_block_2_0= ruleBlock
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getS_OtherAccess().getBlockBlockParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_block_2_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getS_OtherRule());
                      						}
                      						set(
                      							current,
                      							"block",
                      							lv_block_2_0,
                      							"org.xtext.example.mydsl.MyDsl.Block");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:1888:4: otherlv_3= ';'
                    {
                    otherlv_3=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getS_OtherAccess().getSemicolonKeyword_2_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleS_Other"


    // $ANTLR start "entryRuleS_Return"
    // InternalMyDsl.g:1897:1: entryRuleS_Return returns [EObject current=null] : iv_ruleS_Return= ruleS_Return EOF ;
    public final EObject entryRuleS_Return() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleS_Return = null;


        try {
            // InternalMyDsl.g:1897:49: (iv_ruleS_Return= ruleS_Return EOF )
            // InternalMyDsl.g:1898:2: iv_ruleS_Return= ruleS_Return EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getS_ReturnRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleS_Return=ruleS_Return();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleS_Return; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleS_Return"


    // $ANTLR start "ruleS_Return"
    // InternalMyDsl.g:1904:1: ruleS_Return returns [EObject current=null] : ( ( (lv_key_0_0= 'return' ) ) ( (lv_firstFacet_1_0= 'value:' ) )? ( (lv_expr_2_0= ruleExpression ) )? otherlv_3= ';' ) ;
    public final EObject ruleS_Return() throws RecognitionException {
        EObject current = null;

        Token lv_key_0_0=null;
        Token lv_firstFacet_1_0=null;
        Token otherlv_3=null;
        EObject lv_expr_2_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:1910:2: ( ( ( (lv_key_0_0= 'return' ) ) ( (lv_firstFacet_1_0= 'value:' ) )? ( (lv_expr_2_0= ruleExpression ) )? otherlv_3= ';' ) )
            // InternalMyDsl.g:1911:2: ( ( (lv_key_0_0= 'return' ) ) ( (lv_firstFacet_1_0= 'value:' ) )? ( (lv_expr_2_0= ruleExpression ) )? otherlv_3= ';' )
            {
            // InternalMyDsl.g:1911:2: ( ( (lv_key_0_0= 'return' ) ) ( (lv_firstFacet_1_0= 'value:' ) )? ( (lv_expr_2_0= ruleExpression ) )? otherlv_3= ';' )
            // InternalMyDsl.g:1912:3: ( (lv_key_0_0= 'return' ) ) ( (lv_firstFacet_1_0= 'value:' ) )? ( (lv_expr_2_0= ruleExpression ) )? otherlv_3= ';'
            {
            // InternalMyDsl.g:1912:3: ( (lv_key_0_0= 'return' ) )
            // InternalMyDsl.g:1913:4: (lv_key_0_0= 'return' )
            {
            // InternalMyDsl.g:1913:4: (lv_key_0_0= 'return' )
            // InternalMyDsl.g:1914:5: lv_key_0_0= 'return'
            {
            lv_key_0_0=(Token)match(input,37,FOLLOW_30); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_key_0_0, grammarAccess.getS_ReturnAccess().getKeyReturnKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getS_ReturnRule());
              					}
              					setWithLastConsumed(current, "key", lv_key_0_0, "return");
              				
            }

            }


            }

            // InternalMyDsl.g:1926:3: ( (lv_firstFacet_1_0= 'value:' ) )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==38) ) {
                int LA42_1 = input.LA(2);

                if ( ((LA42_1>=RULE_ID && LA42_1<=RULE_KEYWORD)||LA42_1==20||LA42_1==24||LA42_1==26||LA42_1==28||LA42_1==30||(LA42_1>=38 && LA42_1<=39)||LA42_1==41||LA42_1==45||LA42_1==50||(LA42_1>=52 && LA42_1<=104)||(LA42_1>=112 && LA42_1<=135)||LA42_1==146||(LA42_1>=150 && LA42_1<=154)) ) {
                    alt42=1;
                }
            }
            switch (alt42) {
                case 1 :
                    // InternalMyDsl.g:1927:4: (lv_firstFacet_1_0= 'value:' )
                    {
                    // InternalMyDsl.g:1927:4: (lv_firstFacet_1_0= 'value:' )
                    // InternalMyDsl.g:1928:5: lv_firstFacet_1_0= 'value:'
                    {
                    lv_firstFacet_1_0=(Token)match(input,38,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_firstFacet_1_0, grammarAccess.getS_ReturnAccess().getFirstFacetValueKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getS_ReturnRule());
                      					}
                      					setWithLastConsumed(current, "firstFacet", lv_firstFacet_1_0, "value:");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalMyDsl.g:1940:3: ( (lv_expr_2_0= ruleExpression ) )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( ((LA43_0>=RULE_ID && LA43_0<=RULE_KEYWORD)||LA43_0==20||LA43_0==24||LA43_0==26||LA43_0==30||(LA43_0>=38 && LA43_0<=39)||LA43_0==41||LA43_0==45||LA43_0==50||(LA43_0>=52 && LA43_0<=104)||(LA43_0>=112 && LA43_0<=135)||LA43_0==146||(LA43_0>=150 && LA43_0<=154)) ) {
                alt43=1;
            }
            switch (alt43) {
                case 1 :
                    // InternalMyDsl.g:1941:4: (lv_expr_2_0= ruleExpression )
                    {
                    // InternalMyDsl.g:1941:4: (lv_expr_2_0= ruleExpression )
                    // InternalMyDsl.g:1942:5: lv_expr_2_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getS_ReturnAccess().getExprExpressionParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_31);
                    lv_expr_2_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getS_ReturnRule());
                      					}
                      					set(
                      						current,
                      						"expr",
                      						lv_expr_2_0,
                      						"org.xtext.example.mydsl.MyDsl.Expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getS_ReturnAccess().getSemicolonKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleS_Return"


    // $ANTLR start "entryRuleS_Declaration"
    // InternalMyDsl.g:1967:1: entryRuleS_Declaration returns [EObject current=null] : iv_ruleS_Declaration= ruleS_Declaration EOF ;
    public final EObject entryRuleS_Declaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleS_Declaration = null;


        try {
            // InternalMyDsl.g:1967:54: (iv_ruleS_Declaration= ruleS_Declaration EOF )
            // InternalMyDsl.g:1968:2: iv_ruleS_Declaration= ruleS_Declaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getS_DeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleS_Declaration=ruleS_Declaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleS_Declaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleS_Declaration"


    // $ANTLR start "ruleS_Declaration"
    // InternalMyDsl.g:1974:1: ruleS_Declaration returns [EObject current=null] : ( ( ( 'species' | 'image' | RULE_ID )=>this_S_Definition_0= ruleS_Definition ) | this_S_Species_1= ruleS_Species | this_S_Reflex_2= ruleS_Reflex | this_S_Action_3= ruleS_Action | this_S_Var_4= ruleS_Var | this_S_Loop_5= ruleS_Loop ) ;
    public final EObject ruleS_Declaration() throws RecognitionException {
        EObject current = null;

        EObject this_S_Definition_0 = null;

        EObject this_S_Species_1 = null;

        EObject this_S_Reflex_2 = null;

        EObject this_S_Action_3 = null;

        EObject this_S_Var_4 = null;

        EObject this_S_Loop_5 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:1980:2: ( ( ( ( 'species' | 'image' | RULE_ID )=>this_S_Definition_0= ruleS_Definition ) | this_S_Species_1= ruleS_Species | this_S_Reflex_2= ruleS_Reflex | this_S_Action_3= ruleS_Action | this_S_Var_4= ruleS_Var | this_S_Loop_5= ruleS_Loop ) )
            // InternalMyDsl.g:1981:2: ( ( ( 'species' | 'image' | RULE_ID )=>this_S_Definition_0= ruleS_Definition ) | this_S_Species_1= ruleS_Species | this_S_Reflex_2= ruleS_Reflex | this_S_Action_3= ruleS_Action | this_S_Var_4= ruleS_Var | this_S_Loop_5= ruleS_Loop )
            {
            // InternalMyDsl.g:1981:2: ( ( ( 'species' | 'image' | RULE_ID )=>this_S_Definition_0= ruleS_Definition ) | this_S_Species_1= ruleS_Species | this_S_Reflex_2= ruleS_Reflex | this_S_Action_3= ruleS_Action | this_S_Var_4= ruleS_Var | this_S_Loop_5= ruleS_Loop )
            int alt44=6;
            alt44 = dfa44.predict(input);
            switch (alt44) {
                case 1 :
                    // InternalMyDsl.g:1982:3: ( ( 'species' | 'image' | RULE_ID )=>this_S_Definition_0= ruleS_Definition )
                    {
                    // InternalMyDsl.g:1982:3: ( ( 'species' | 'image' | RULE_ID )=>this_S_Definition_0= ruleS_Definition )
                    // InternalMyDsl.g:1983:4: ( 'species' | 'image' | RULE_ID )=>this_S_Definition_0= ruleS_Definition
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getS_DeclarationAccess().getS_DefinitionParserRuleCall_0());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_S_Definition_0=ruleS_Definition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_S_Definition_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:1994:3: this_S_Species_1= ruleS_Species
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getS_DeclarationAccess().getS_SpeciesParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_S_Species_1=ruleS_Species();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_S_Species_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMyDsl.g:2003:3: this_S_Reflex_2= ruleS_Reflex
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getS_DeclarationAccess().getS_ReflexParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_S_Reflex_2=ruleS_Reflex();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_S_Reflex_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalMyDsl.g:2012:3: this_S_Action_3= ruleS_Action
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getS_DeclarationAccess().getS_ActionParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_S_Action_3=ruleS_Action();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_S_Action_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalMyDsl.g:2021:3: this_S_Var_4= ruleS_Var
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getS_DeclarationAccess().getS_VarParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_S_Var_4=ruleS_Var();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_S_Var_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalMyDsl.g:2030:3: this_S_Loop_5= ruleS_Loop
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getS_DeclarationAccess().getS_LoopParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_S_Loop_5=ruleS_Loop();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_S_Loop_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleS_Declaration"


    // $ANTLR start "entryRuleS_Reflex"
    // InternalMyDsl.g:2042:1: entryRuleS_Reflex returns [EObject current=null] : iv_ruleS_Reflex= ruleS_Reflex EOF ;
    public final EObject entryRuleS_Reflex() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleS_Reflex = null;


        try {
            // InternalMyDsl.g:2042:49: (iv_ruleS_Reflex= ruleS_Reflex EOF )
            // InternalMyDsl.g:2043:2: iv_ruleS_Reflex= ruleS_Reflex EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getS_ReflexRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleS_Reflex=ruleS_Reflex();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleS_Reflex; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleS_Reflex"


    // $ANTLR start "ruleS_Reflex"
    // InternalMyDsl.g:2049:1: ruleS_Reflex returns [EObject current=null] : ( ( (lv_key_0_0= rule_ReflexKey ) ) ( ( (lv_firstFacet_1_0= 'name:' ) )? ( (lv_name_2_0= ruleValid_ID ) ) )? (otherlv_3= 'when' otherlv_4= ':' ( (lv_expr_5_0= ruleExpression ) ) )? ( (lv_block_6_0= ruleBlock ) ) ) ;
    public final EObject ruleS_Reflex() throws RecognitionException {
        EObject current = null;

        Token lv_firstFacet_1_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_key_0_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_expr_5_0 = null;

        EObject lv_block_6_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:2055:2: ( ( ( (lv_key_0_0= rule_ReflexKey ) ) ( ( (lv_firstFacet_1_0= 'name:' ) )? ( (lv_name_2_0= ruleValid_ID ) ) )? (otherlv_3= 'when' otherlv_4= ':' ( (lv_expr_5_0= ruleExpression ) ) )? ( (lv_block_6_0= ruleBlock ) ) ) )
            // InternalMyDsl.g:2056:2: ( ( (lv_key_0_0= rule_ReflexKey ) ) ( ( (lv_firstFacet_1_0= 'name:' ) )? ( (lv_name_2_0= ruleValid_ID ) ) )? (otherlv_3= 'when' otherlv_4= ':' ( (lv_expr_5_0= ruleExpression ) ) )? ( (lv_block_6_0= ruleBlock ) ) )
            {
            // InternalMyDsl.g:2056:2: ( ( (lv_key_0_0= rule_ReflexKey ) ) ( ( (lv_firstFacet_1_0= 'name:' ) )? ( (lv_name_2_0= ruleValid_ID ) ) )? (otherlv_3= 'when' otherlv_4= ':' ( (lv_expr_5_0= ruleExpression ) ) )? ( (lv_block_6_0= ruleBlock ) ) )
            // InternalMyDsl.g:2057:3: ( (lv_key_0_0= rule_ReflexKey ) ) ( ( (lv_firstFacet_1_0= 'name:' ) )? ( (lv_name_2_0= ruleValid_ID ) ) )? (otherlv_3= 'when' otherlv_4= ':' ( (lv_expr_5_0= ruleExpression ) ) )? ( (lv_block_6_0= ruleBlock ) )
            {
            // InternalMyDsl.g:2057:3: ( (lv_key_0_0= rule_ReflexKey ) )
            // InternalMyDsl.g:2058:4: (lv_key_0_0= rule_ReflexKey )
            {
            // InternalMyDsl.g:2058:4: (lv_key_0_0= rule_ReflexKey )
            // InternalMyDsl.g:2059:5: lv_key_0_0= rule_ReflexKey
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getS_ReflexAccess().getKey_ReflexKeyParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_32);
            lv_key_0_0=rule_ReflexKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getS_ReflexRule());
              					}
              					set(
              						current,
              						"key",
              						lv_key_0_0,
              						"org.xtext.example.mydsl.MyDsl._ReflexKey");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyDsl.g:2076:3: ( ( (lv_firstFacet_1_0= 'name:' ) )? ( (lv_name_2_0= ruleValid_ID ) ) )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==RULE_ID||LA46_0==26||LA46_0==50||(LA46_0>=52 && LA46_0<=104)) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // InternalMyDsl.g:2077:4: ( (lv_firstFacet_1_0= 'name:' ) )? ( (lv_name_2_0= ruleValid_ID ) )
                    {
                    // InternalMyDsl.g:2077:4: ( (lv_firstFacet_1_0= 'name:' ) )?
                    int alt45=2;
                    int LA45_0 = input.LA(1);

                    if ( (LA45_0==26) ) {
                        alt45=1;
                    }
                    switch (alt45) {
                        case 1 :
                            // InternalMyDsl.g:2078:5: (lv_firstFacet_1_0= 'name:' )
                            {
                            // InternalMyDsl.g:2078:5: (lv_firstFacet_1_0= 'name:' )
                            // InternalMyDsl.g:2079:6: lv_firstFacet_1_0= 'name:'
                            {
                            lv_firstFacet_1_0=(Token)match(input,26,FOLLOW_15); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_firstFacet_1_0, grammarAccess.getS_ReflexAccess().getFirstFacetNameKeyword_1_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getS_ReflexRule());
                              						}
                              						setWithLastConsumed(current, "firstFacet", lv_firstFacet_1_0, "name:");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalMyDsl.g:2091:4: ( (lv_name_2_0= ruleValid_ID ) )
                    // InternalMyDsl.g:2092:5: (lv_name_2_0= ruleValid_ID )
                    {
                    // InternalMyDsl.g:2092:5: (lv_name_2_0= ruleValid_ID )
                    // InternalMyDsl.g:2093:6: lv_name_2_0= ruleValid_ID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getS_ReflexAccess().getNameValid_IDParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_33);
                    lv_name_2_0=ruleValid_ID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getS_ReflexRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_2_0,
                      							"org.xtext.example.mydsl.MyDsl.Valid_ID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalMyDsl.g:2111:3: (otherlv_3= 'when' otherlv_4= ':' ( (lv_expr_5_0= ruleExpression ) ) )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==39) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalMyDsl.g:2112:4: otherlv_3= 'when' otherlv_4= ':' ( (lv_expr_5_0= ruleExpression ) )
                    {
                    otherlv_3=(Token)match(input,39,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getS_ReflexAccess().getWhenKeyword_2_0());
                      			
                    }
                    otherlv_4=(Token)match(input,40,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getS_ReflexAccess().getColonKeyword_2_1());
                      			
                    }
                    // InternalMyDsl.g:2120:4: ( (lv_expr_5_0= ruleExpression ) )
                    // InternalMyDsl.g:2121:5: (lv_expr_5_0= ruleExpression )
                    {
                    // InternalMyDsl.g:2121:5: (lv_expr_5_0= ruleExpression )
                    // InternalMyDsl.g:2122:6: lv_expr_5_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getS_ReflexAccess().getExprExpressionParserRuleCall_2_2_0());
                      					
                    }
                    pushFollow(FOLLOW_3);
                    lv_expr_5_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getS_ReflexRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_5_0,
                      							"org.xtext.example.mydsl.MyDsl.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalMyDsl.g:2140:3: ( (lv_block_6_0= ruleBlock ) )
            // InternalMyDsl.g:2141:4: (lv_block_6_0= ruleBlock )
            {
            // InternalMyDsl.g:2141:4: (lv_block_6_0= ruleBlock )
            // InternalMyDsl.g:2142:5: lv_block_6_0= ruleBlock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getS_ReflexAccess().getBlockBlockParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_block_6_0=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getS_ReflexRule());
              					}
              					set(
              						current,
              						"block",
              						lv_block_6_0,
              						"org.xtext.example.mydsl.MyDsl.Block");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleS_Reflex"


    // $ANTLR start "entryRuleS_Definition"
    // InternalMyDsl.g:2163:1: entryRuleS_Definition returns [EObject current=null] : iv_ruleS_Definition= ruleS_Definition EOF ;
    public final EObject entryRuleS_Definition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleS_Definition = null;


        try {
            // InternalMyDsl.g:2163:53: (iv_ruleS_Definition= ruleS_Definition EOF )
            // InternalMyDsl.g:2164:2: iv_ruleS_Definition= ruleS_Definition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getS_DefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleS_Definition=ruleS_Definition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleS_Definition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleS_Definition"


    // $ANTLR start "ruleS_Definition"
    // InternalMyDsl.g:2170:1: ruleS_Definition returns [EObject current=null] : ( ( (lv_tkey_0_0= ruleTypeRef ) ) ( (lv_firstFacet_1_0= 'name:' ) )? ( ( (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING ) ) ) (otherlv_3= '(' ( (lv_args_4_0= ruleActionArguments ) ) otherlv_5= ')' )? ( (lv_facets_6_0= ruleFacet ) )* ( ( (lv_block_7_0= ruleBlock ) ) | otherlv_8= ';' ) ) ;
    public final EObject ruleS_Definition() throws RecognitionException {
        EObject current = null;

        Token lv_firstFacet_1_0=null;
        Token lv_name_2_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_8=null;
        EObject lv_tkey_0_0 = null;

        AntlrDatatypeRuleToken lv_name_2_1 = null;

        EObject lv_args_4_0 = null;

        EObject lv_facets_6_0 = null;

        EObject lv_block_7_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:2176:2: ( ( ( (lv_tkey_0_0= ruleTypeRef ) ) ( (lv_firstFacet_1_0= 'name:' ) )? ( ( (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING ) ) ) (otherlv_3= '(' ( (lv_args_4_0= ruleActionArguments ) ) otherlv_5= ')' )? ( (lv_facets_6_0= ruleFacet ) )* ( ( (lv_block_7_0= ruleBlock ) ) | otherlv_8= ';' ) ) )
            // InternalMyDsl.g:2177:2: ( ( (lv_tkey_0_0= ruleTypeRef ) ) ( (lv_firstFacet_1_0= 'name:' ) )? ( ( (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING ) ) ) (otherlv_3= '(' ( (lv_args_4_0= ruleActionArguments ) ) otherlv_5= ')' )? ( (lv_facets_6_0= ruleFacet ) )* ( ( (lv_block_7_0= ruleBlock ) ) | otherlv_8= ';' ) )
            {
            // InternalMyDsl.g:2177:2: ( ( (lv_tkey_0_0= ruleTypeRef ) ) ( (lv_firstFacet_1_0= 'name:' ) )? ( ( (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING ) ) ) (otherlv_3= '(' ( (lv_args_4_0= ruleActionArguments ) ) otherlv_5= ')' )? ( (lv_facets_6_0= ruleFacet ) )* ( ( (lv_block_7_0= ruleBlock ) ) | otherlv_8= ';' ) )
            // InternalMyDsl.g:2178:3: ( (lv_tkey_0_0= ruleTypeRef ) ) ( (lv_firstFacet_1_0= 'name:' ) )? ( ( (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING ) ) ) (otherlv_3= '(' ( (lv_args_4_0= ruleActionArguments ) ) otherlv_5= ')' )? ( (lv_facets_6_0= ruleFacet ) )* ( ( (lv_block_7_0= ruleBlock ) ) | otherlv_8= ';' )
            {
            // InternalMyDsl.g:2178:3: ( (lv_tkey_0_0= ruleTypeRef ) )
            // InternalMyDsl.g:2179:4: (lv_tkey_0_0= ruleTypeRef )
            {
            // InternalMyDsl.g:2179:4: (lv_tkey_0_0= ruleTypeRef )
            // InternalMyDsl.g:2180:5: lv_tkey_0_0= ruleTypeRef
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getS_DefinitionAccess().getTkeyTypeRefParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_19);
            lv_tkey_0_0=ruleTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getS_DefinitionRule());
              					}
              					set(
              						current,
              						"tkey",
              						lv_tkey_0_0,
              						"org.xtext.example.mydsl.MyDsl.TypeRef");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyDsl.g:2197:3: ( (lv_firstFacet_1_0= 'name:' ) )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==26) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // InternalMyDsl.g:2198:4: (lv_firstFacet_1_0= 'name:' )
                    {
                    // InternalMyDsl.g:2198:4: (lv_firstFacet_1_0= 'name:' )
                    // InternalMyDsl.g:2199:5: lv_firstFacet_1_0= 'name:'
                    {
                    lv_firstFacet_1_0=(Token)match(input,26,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_firstFacet_1_0, grammarAccess.getS_DefinitionAccess().getFirstFacetNameKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getS_DefinitionRule());
                      					}
                      					setWithLastConsumed(current, "firstFacet", lv_firstFacet_1_0, "name:");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalMyDsl.g:2211:3: ( ( (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING ) ) )
            // InternalMyDsl.g:2212:4: ( (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING ) )
            {
            // InternalMyDsl.g:2212:4: ( (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING ) )
            // InternalMyDsl.g:2213:5: (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING )
            {
            // InternalMyDsl.g:2213:5: (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING )
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==RULE_ID||LA49_0==50||(LA49_0>=52 && LA49_0<=104)) ) {
                alt49=1;
            }
            else if ( (LA49_0==RULE_STRING) ) {
                alt49=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 49, 0, input);

                throw nvae;
            }
            switch (alt49) {
                case 1 :
                    // InternalMyDsl.g:2214:6: lv_name_2_1= ruleValid_ID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getS_DefinitionAccess().getNameValid_IDParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_35);
                    lv_name_2_1=ruleValid_ID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getS_DefinitionRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_2_1,
                      							"org.xtext.example.mydsl.MyDsl.Valid_ID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:2230:6: lv_name_2_2= RULE_STRING
                    {
                    lv_name_2_2=(Token)match(input,RULE_STRING,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_2_2, grammarAccess.getS_DefinitionAccess().getNameSTRINGTerminalRuleCall_2_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getS_DefinitionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_2_2,
                      							"org.xtext.example.mydsl.MyDsl.STRING");
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalMyDsl.g:2247:3: (otherlv_3= '(' ( (lv_args_4_0= ruleActionArguments ) ) otherlv_5= ')' )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==41) ) {
                alt50=1;
            }
            switch (alt50) {
                case 1 :
                    // InternalMyDsl.g:2248:4: otherlv_3= '(' ( (lv_args_4_0= ruleActionArguments ) ) otherlv_5= ')'
                    {
                    otherlv_3=(Token)match(input,41,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getS_DefinitionAccess().getLeftParenthesisKeyword_3_0());
                      			
                    }
                    // InternalMyDsl.g:2252:4: ( (lv_args_4_0= ruleActionArguments ) )
                    // InternalMyDsl.g:2253:5: (lv_args_4_0= ruleActionArguments )
                    {
                    // InternalMyDsl.g:2253:5: (lv_args_4_0= ruleActionArguments )
                    // InternalMyDsl.g:2254:6: lv_args_4_0= ruleActionArguments
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getS_DefinitionAccess().getArgsActionArgumentsParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_37);
                    lv_args_4_0=ruleActionArguments();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getS_DefinitionRule());
                      						}
                      						set(
                      							current,
                      							"args",
                      							lv_args_4_0,
                      							"org.xtext.example.mydsl.MyDsl.ActionArguments");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,42,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getS_DefinitionAccess().getRightParenthesisKeyword_3_2());
                      			
                    }

                    }
                    break;

            }

            // InternalMyDsl.g:2276:3: ( (lv_facets_6_0= ruleFacet ) )*
            loop51:
            do {
                int alt51=2;
                int LA51_0 = input.LA(1);

                if ( (LA51_0==RULE_ID||LA51_0==16||LA51_0==26||LA51_0==30||(LA51_0>=38 && LA51_0<=39)||(LA51_0>=112 && LA51_0<=136)) ) {
                    alt51=1;
                }


                switch (alt51) {
            	case 1 :
            	    // InternalMyDsl.g:2277:4: (lv_facets_6_0= ruleFacet )
            	    {
            	    // InternalMyDsl.g:2277:4: (lv_facets_6_0= ruleFacet )
            	    // InternalMyDsl.g:2278:5: lv_facets_6_0= ruleFacet
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getS_DefinitionAccess().getFacetsFacetParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_22);
            	    lv_facets_6_0=ruleFacet();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getS_DefinitionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"facets",
            	      						lv_facets_6_0,
            	      						"org.xtext.example.mydsl.MyDsl.Facet");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop51;
                }
            } while (true);

            // InternalMyDsl.g:2295:3: ( ( (lv_block_7_0= ruleBlock ) ) | otherlv_8= ';' )
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==45) ) {
                alt52=1;
            }
            else if ( (LA52_0==28) ) {
                alt52=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;
            }
            switch (alt52) {
                case 1 :
                    // InternalMyDsl.g:2296:4: ( (lv_block_7_0= ruleBlock ) )
                    {
                    // InternalMyDsl.g:2296:4: ( (lv_block_7_0= ruleBlock ) )
                    // InternalMyDsl.g:2297:5: (lv_block_7_0= ruleBlock )
                    {
                    // InternalMyDsl.g:2297:5: (lv_block_7_0= ruleBlock )
                    // InternalMyDsl.g:2298:6: lv_block_7_0= ruleBlock
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getS_DefinitionAccess().getBlockBlockParserRuleCall_5_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_block_7_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getS_DefinitionRule());
                      						}
                      						set(
                      							current,
                      							"block",
                      							lv_block_7_0,
                      							"org.xtext.example.mydsl.MyDsl.Block");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:2316:4: otherlv_8= ';'
                    {
                    otherlv_8=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getS_DefinitionAccess().getSemicolonKeyword_5_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleS_Definition"


    // $ANTLR start "entryRuleS_Action"
    // InternalMyDsl.g:2325:1: entryRuleS_Action returns [EObject current=null] : iv_ruleS_Action= ruleS_Action EOF ;
    public final EObject entryRuleS_Action() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleS_Action = null;


        try {
            // InternalMyDsl.g:2325:49: (iv_ruleS_Action= ruleS_Action EOF )
            // InternalMyDsl.g:2326:2: iv_ruleS_Action= ruleS_Action EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getS_ActionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleS_Action=ruleS_Action();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleS_Action; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleS_Action"


    // $ANTLR start "ruleS_Action"
    // InternalMyDsl.g:2332:1: ruleS_Action returns [EObject current=null] : ( () ( (lv_key_1_0= 'action' ) ) ( (lv_firstFacet_2_0= 'name:' ) )? ( (lv_name_3_0= ruleValid_ID ) ) (otherlv_4= '(' ( (lv_args_5_0= ruleActionArguments ) ) otherlv_6= ')' )? ( (lv_facets_7_0= ruleFacet ) )* ( ( (lv_block_8_0= ruleBlock ) ) | otherlv_9= ';' ) ) ;
    public final EObject ruleS_Action() throws RecognitionException {
        EObject current = null;

        Token lv_key_1_0=null;
        Token lv_firstFacet_2_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject lv_args_5_0 = null;

        EObject lv_facets_7_0 = null;

        EObject lv_block_8_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:2338:2: ( ( () ( (lv_key_1_0= 'action' ) ) ( (lv_firstFacet_2_0= 'name:' ) )? ( (lv_name_3_0= ruleValid_ID ) ) (otherlv_4= '(' ( (lv_args_5_0= ruleActionArguments ) ) otherlv_6= ')' )? ( (lv_facets_7_0= ruleFacet ) )* ( ( (lv_block_8_0= ruleBlock ) ) | otherlv_9= ';' ) ) )
            // InternalMyDsl.g:2339:2: ( () ( (lv_key_1_0= 'action' ) ) ( (lv_firstFacet_2_0= 'name:' ) )? ( (lv_name_3_0= ruleValid_ID ) ) (otherlv_4= '(' ( (lv_args_5_0= ruleActionArguments ) ) otherlv_6= ')' )? ( (lv_facets_7_0= ruleFacet ) )* ( ( (lv_block_8_0= ruleBlock ) ) | otherlv_9= ';' ) )
            {
            // InternalMyDsl.g:2339:2: ( () ( (lv_key_1_0= 'action' ) ) ( (lv_firstFacet_2_0= 'name:' ) )? ( (lv_name_3_0= ruleValid_ID ) ) (otherlv_4= '(' ( (lv_args_5_0= ruleActionArguments ) ) otherlv_6= ')' )? ( (lv_facets_7_0= ruleFacet ) )* ( ( (lv_block_8_0= ruleBlock ) ) | otherlv_9= ';' ) )
            // InternalMyDsl.g:2340:3: () ( (lv_key_1_0= 'action' ) ) ( (lv_firstFacet_2_0= 'name:' ) )? ( (lv_name_3_0= ruleValid_ID ) ) (otherlv_4= '(' ( (lv_args_5_0= ruleActionArguments ) ) otherlv_6= ')' )? ( (lv_facets_7_0= ruleFacet ) )* ( ( (lv_block_8_0= ruleBlock ) ) | otherlv_9= ';' )
            {
            // InternalMyDsl.g:2340:3: ()
            // InternalMyDsl.g:2341:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getS_ActionAccess().getS_ActionAction_0(),
              					current);
              			
            }

            }

            // InternalMyDsl.g:2347:3: ( (lv_key_1_0= 'action' ) )
            // InternalMyDsl.g:2348:4: (lv_key_1_0= 'action' )
            {
            // InternalMyDsl.g:2348:4: (lv_key_1_0= 'action' )
            // InternalMyDsl.g:2349:5: lv_key_1_0= 'action'
            {
            lv_key_1_0=(Token)match(input,43,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_key_1_0, grammarAccess.getS_ActionAccess().getKeyActionKeyword_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getS_ActionRule());
              					}
              					setWithLastConsumed(current, "key", lv_key_1_0, "action");
              				
            }

            }


            }

            // InternalMyDsl.g:2361:3: ( (lv_firstFacet_2_0= 'name:' ) )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==26) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // InternalMyDsl.g:2362:4: (lv_firstFacet_2_0= 'name:' )
                    {
                    // InternalMyDsl.g:2362:4: (lv_firstFacet_2_0= 'name:' )
                    // InternalMyDsl.g:2363:5: lv_firstFacet_2_0= 'name:'
                    {
                    lv_firstFacet_2_0=(Token)match(input,26,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_firstFacet_2_0, grammarAccess.getS_ActionAccess().getFirstFacetNameKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getS_ActionRule());
                      					}
                      					setWithLastConsumed(current, "firstFacet", lv_firstFacet_2_0, "name:");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalMyDsl.g:2375:3: ( (lv_name_3_0= ruleValid_ID ) )
            // InternalMyDsl.g:2376:4: (lv_name_3_0= ruleValid_ID )
            {
            // InternalMyDsl.g:2376:4: (lv_name_3_0= ruleValid_ID )
            // InternalMyDsl.g:2377:5: lv_name_3_0= ruleValid_ID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getS_ActionAccess().getNameValid_IDParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_35);
            lv_name_3_0=ruleValid_ID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getS_ActionRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_3_0,
              						"org.xtext.example.mydsl.MyDsl.Valid_ID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyDsl.g:2394:3: (otherlv_4= '(' ( (lv_args_5_0= ruleActionArguments ) ) otherlv_6= ')' )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==41) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalMyDsl.g:2395:4: otherlv_4= '(' ( (lv_args_5_0= ruleActionArguments ) ) otherlv_6= ')'
                    {
                    otherlv_4=(Token)match(input,41,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getS_ActionAccess().getLeftParenthesisKeyword_4_0());
                      			
                    }
                    // InternalMyDsl.g:2399:4: ( (lv_args_5_0= ruleActionArguments ) )
                    // InternalMyDsl.g:2400:5: (lv_args_5_0= ruleActionArguments )
                    {
                    // InternalMyDsl.g:2400:5: (lv_args_5_0= ruleActionArguments )
                    // InternalMyDsl.g:2401:6: lv_args_5_0= ruleActionArguments
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getS_ActionAccess().getArgsActionArgumentsParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_37);
                    lv_args_5_0=ruleActionArguments();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getS_ActionRule());
                      						}
                      						set(
                      							current,
                      							"args",
                      							lv_args_5_0,
                      							"org.xtext.example.mydsl.MyDsl.ActionArguments");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_6=(Token)match(input,42,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getS_ActionAccess().getRightParenthesisKeyword_4_2());
                      			
                    }

                    }
                    break;

            }

            // InternalMyDsl.g:2423:3: ( (lv_facets_7_0= ruleFacet ) )*
            loop55:
            do {
                int alt55=2;
                int LA55_0 = input.LA(1);

                if ( (LA55_0==RULE_ID||LA55_0==16||LA55_0==26||LA55_0==30||(LA55_0>=38 && LA55_0<=39)||(LA55_0>=112 && LA55_0<=136)) ) {
                    alt55=1;
                }


                switch (alt55) {
            	case 1 :
            	    // InternalMyDsl.g:2424:4: (lv_facets_7_0= ruleFacet )
            	    {
            	    // InternalMyDsl.g:2424:4: (lv_facets_7_0= ruleFacet )
            	    // InternalMyDsl.g:2425:5: lv_facets_7_0= ruleFacet
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getS_ActionAccess().getFacetsFacetParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_22);
            	    lv_facets_7_0=ruleFacet();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getS_ActionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"facets",
            	      						lv_facets_7_0,
            	      						"org.xtext.example.mydsl.MyDsl.Facet");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop55;
                }
            } while (true);

            // InternalMyDsl.g:2442:3: ( ( (lv_block_8_0= ruleBlock ) ) | otherlv_9= ';' )
            int alt56=2;
            int LA56_0 = input.LA(1);

            if ( (LA56_0==45) ) {
                alt56=1;
            }
            else if ( (LA56_0==28) ) {
                alt56=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 56, 0, input);

                throw nvae;
            }
            switch (alt56) {
                case 1 :
                    // InternalMyDsl.g:2443:4: ( (lv_block_8_0= ruleBlock ) )
                    {
                    // InternalMyDsl.g:2443:4: ( (lv_block_8_0= ruleBlock ) )
                    // InternalMyDsl.g:2444:5: (lv_block_8_0= ruleBlock )
                    {
                    // InternalMyDsl.g:2444:5: (lv_block_8_0= ruleBlock )
                    // InternalMyDsl.g:2445:6: lv_block_8_0= ruleBlock
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getS_ActionAccess().getBlockBlockParserRuleCall_6_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_block_8_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getS_ActionRule());
                      						}
                      						set(
                      							current,
                      							"block",
                      							lv_block_8_0,
                      							"org.xtext.example.mydsl.MyDsl.Block");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:2463:4: otherlv_9= ';'
                    {
                    otherlv_9=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getS_ActionAccess().getSemicolonKeyword_6_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleS_Action"


    // $ANTLR start "entryRuleS_Var"
    // InternalMyDsl.g:2472:1: entryRuleS_Var returns [EObject current=null] : iv_ruleS_Var= ruleS_Var EOF ;
    public final EObject entryRuleS_Var() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleS_Var = null;


        try {
            // InternalMyDsl.g:2472:46: (iv_ruleS_Var= ruleS_Var EOF )
            // InternalMyDsl.g:2473:2: iv_ruleS_Var= ruleS_Var EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getS_VarRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleS_Var=ruleS_Var();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleS_Var; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleS_Var"


    // $ANTLR start "ruleS_Var"
    // InternalMyDsl.g:2479:1: ruleS_Var returns [EObject current=null] : ( () ( (lv_key_1_0= rule_VarOrConstKey ) ) ( (lv_firstFacet_2_0= 'name:' ) )? ( (lv_name_3_0= ruleValid_ID ) ) ( (lv_facets_4_0= ruleFacet ) )* otherlv_5= ';' ) ;
    public final EObject ruleS_Var() throws RecognitionException {
        EObject current = null;

        Token lv_firstFacet_2_0=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_key_1_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;

        EObject lv_facets_4_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:2485:2: ( ( () ( (lv_key_1_0= rule_VarOrConstKey ) ) ( (lv_firstFacet_2_0= 'name:' ) )? ( (lv_name_3_0= ruleValid_ID ) ) ( (lv_facets_4_0= ruleFacet ) )* otherlv_5= ';' ) )
            // InternalMyDsl.g:2486:2: ( () ( (lv_key_1_0= rule_VarOrConstKey ) ) ( (lv_firstFacet_2_0= 'name:' ) )? ( (lv_name_3_0= ruleValid_ID ) ) ( (lv_facets_4_0= ruleFacet ) )* otherlv_5= ';' )
            {
            // InternalMyDsl.g:2486:2: ( () ( (lv_key_1_0= rule_VarOrConstKey ) ) ( (lv_firstFacet_2_0= 'name:' ) )? ( (lv_name_3_0= ruleValid_ID ) ) ( (lv_facets_4_0= ruleFacet ) )* otherlv_5= ';' )
            // InternalMyDsl.g:2487:3: () ( (lv_key_1_0= rule_VarOrConstKey ) ) ( (lv_firstFacet_2_0= 'name:' ) )? ( (lv_name_3_0= ruleValid_ID ) ) ( (lv_facets_4_0= ruleFacet ) )* otherlv_5= ';'
            {
            // InternalMyDsl.g:2487:3: ()
            // InternalMyDsl.g:2488:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getS_VarAccess().getS_VarAction_0(),
              					current);
              			
            }

            }

            // InternalMyDsl.g:2494:3: ( (lv_key_1_0= rule_VarOrConstKey ) )
            // InternalMyDsl.g:2495:4: (lv_key_1_0= rule_VarOrConstKey )
            {
            // InternalMyDsl.g:2495:4: (lv_key_1_0= rule_VarOrConstKey )
            // InternalMyDsl.g:2496:5: lv_key_1_0= rule_VarOrConstKey
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getS_VarAccess().getKey_VarOrConstKeyParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_38);
            lv_key_1_0=rule_VarOrConstKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getS_VarRule());
              					}
              					set(
              						current,
              						"key",
              						lv_key_1_0,
              						"org.xtext.example.mydsl.MyDsl._VarOrConstKey");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyDsl.g:2513:3: ( (lv_firstFacet_2_0= 'name:' ) )?
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==26) ) {
                alt57=1;
            }
            switch (alt57) {
                case 1 :
                    // InternalMyDsl.g:2514:4: (lv_firstFacet_2_0= 'name:' )
                    {
                    // InternalMyDsl.g:2514:4: (lv_firstFacet_2_0= 'name:' )
                    // InternalMyDsl.g:2515:5: lv_firstFacet_2_0= 'name:'
                    {
                    lv_firstFacet_2_0=(Token)match(input,26,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_firstFacet_2_0, grammarAccess.getS_VarAccess().getFirstFacetNameKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getS_VarRule());
                      					}
                      					setWithLastConsumed(current, "firstFacet", lv_firstFacet_2_0, "name:");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalMyDsl.g:2527:3: ( (lv_name_3_0= ruleValid_ID ) )
            // InternalMyDsl.g:2528:4: (lv_name_3_0= ruleValid_ID )
            {
            // InternalMyDsl.g:2528:4: (lv_name_3_0= ruleValid_ID )
            // InternalMyDsl.g:2529:5: lv_name_3_0= ruleValid_ID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getS_VarAccess().getNameValid_IDParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_39);
            lv_name_3_0=ruleValid_ID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getS_VarRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_3_0,
              						"org.xtext.example.mydsl.MyDsl.Valid_ID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyDsl.g:2546:3: ( (lv_facets_4_0= ruleFacet ) )*
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( (LA58_0==RULE_ID||LA58_0==16||LA58_0==26||LA58_0==30||(LA58_0>=38 && LA58_0<=39)||(LA58_0>=112 && LA58_0<=136)) ) {
                    alt58=1;
                }


                switch (alt58) {
            	case 1 :
            	    // InternalMyDsl.g:2547:4: (lv_facets_4_0= ruleFacet )
            	    {
            	    // InternalMyDsl.g:2547:4: (lv_facets_4_0= ruleFacet )
            	    // InternalMyDsl.g:2548:5: lv_facets_4_0= ruleFacet
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getS_VarAccess().getFacetsFacetParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_39);
            	    lv_facets_4_0=ruleFacet();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getS_VarRule());
            	      					}
            	      					add(
            	      						current,
            	      						"facets",
            	      						lv_facets_4_0,
            	      						"org.xtext.example.mydsl.MyDsl.Facet");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);

            otherlv_5=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getS_VarAccess().getSemicolonKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleS_Var"


    // $ANTLR start "entryRuleS_Assignment"
    // InternalMyDsl.g:2573:1: entryRuleS_Assignment returns [EObject current=null] : iv_ruleS_Assignment= ruleS_Assignment EOF ;
    public final EObject entryRuleS_Assignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleS_Assignment = null;


        try {
            // InternalMyDsl.g:2573:53: (iv_ruleS_Assignment= ruleS_Assignment EOF )
            // InternalMyDsl.g:2574:2: iv_ruleS_Assignment= ruleS_Assignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getS_AssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleS_Assignment=ruleS_Assignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleS_Assignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleS_Assignment"


    // $ANTLR start "ruleS_Assignment"
    // InternalMyDsl.g:2580:1: ruleS_Assignment returns [EObject current=null] : (this_S_DirectAssignment_0= ruleS_DirectAssignment | this_S_Set_1= ruleS_Set ) ;
    public final EObject ruleS_Assignment() throws RecognitionException {
        EObject current = null;

        EObject this_S_DirectAssignment_0 = null;

        EObject this_S_Set_1 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:2586:2: ( (this_S_DirectAssignment_0= ruleS_DirectAssignment | this_S_Set_1= ruleS_Set ) )
            // InternalMyDsl.g:2587:2: (this_S_DirectAssignment_0= ruleS_DirectAssignment | this_S_Set_1= ruleS_Set )
            {
            // InternalMyDsl.g:2587:2: (this_S_DirectAssignment_0= ruleS_DirectAssignment | this_S_Set_1= ruleS_Set )
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( ((LA59_0>=RULE_ID && LA59_0<=RULE_KEYWORD)||LA59_0==20||LA59_0==24||LA59_0==26||LA59_0==30||(LA59_0>=38 && LA59_0<=39)||LA59_0==41||LA59_0==45||LA59_0==50||(LA59_0>=52 && LA59_0<=104)||(LA59_0>=112 && LA59_0<=135)||LA59_0==146||(LA59_0>=150 && LA59_0<=154)) ) {
                alt59=1;
            }
            else if ( (LA59_0==44) ) {
                alt59=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 59, 0, input);

                throw nvae;
            }
            switch (alt59) {
                case 1 :
                    // InternalMyDsl.g:2588:3: this_S_DirectAssignment_0= ruleS_DirectAssignment
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getS_AssignmentAccess().getS_DirectAssignmentParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_S_DirectAssignment_0=ruleS_DirectAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_S_DirectAssignment_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:2597:3: this_S_Set_1= ruleS_Set
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getS_AssignmentAccess().getS_SetParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_S_Set_1=ruleS_Set();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_S_Set_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleS_Assignment"


    // $ANTLR start "entryRuleS_DirectAssignment"
    // InternalMyDsl.g:2609:1: entryRuleS_DirectAssignment returns [EObject current=null] : iv_ruleS_DirectAssignment= ruleS_DirectAssignment EOF ;
    public final EObject entryRuleS_DirectAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleS_DirectAssignment = null;


        try {
            // InternalMyDsl.g:2609:59: (iv_ruleS_DirectAssignment= ruleS_DirectAssignment EOF )
            // InternalMyDsl.g:2610:2: iv_ruleS_DirectAssignment= ruleS_DirectAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getS_DirectAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleS_DirectAssignment=ruleS_DirectAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleS_DirectAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleS_DirectAssignment"


    // $ANTLR start "ruleS_DirectAssignment"
    // InternalMyDsl.g:2616:1: ruleS_DirectAssignment returns [EObject current=null] : ( ( ( (lv_expr_0_0= ruleExpression ) ) ( (lv_key_1_0= rule_AssignmentKey ) ) ( (lv_value_2_0= ruleExpression ) ) ( (lv_facets_3_0= ruleFacet ) )* ) otherlv_4= ';' ) ;
    public final EObject ruleS_DirectAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject lv_expr_0_0 = null;

        AntlrDatatypeRuleToken lv_key_1_0 = null;

        EObject lv_value_2_0 = null;

        EObject lv_facets_3_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:2622:2: ( ( ( ( (lv_expr_0_0= ruleExpression ) ) ( (lv_key_1_0= rule_AssignmentKey ) ) ( (lv_value_2_0= ruleExpression ) ) ( (lv_facets_3_0= ruleFacet ) )* ) otherlv_4= ';' ) )
            // InternalMyDsl.g:2623:2: ( ( ( (lv_expr_0_0= ruleExpression ) ) ( (lv_key_1_0= rule_AssignmentKey ) ) ( (lv_value_2_0= ruleExpression ) ) ( (lv_facets_3_0= ruleFacet ) )* ) otherlv_4= ';' )
            {
            // InternalMyDsl.g:2623:2: ( ( ( (lv_expr_0_0= ruleExpression ) ) ( (lv_key_1_0= rule_AssignmentKey ) ) ( (lv_value_2_0= ruleExpression ) ) ( (lv_facets_3_0= ruleFacet ) )* ) otherlv_4= ';' )
            // InternalMyDsl.g:2624:3: ( ( (lv_expr_0_0= ruleExpression ) ) ( (lv_key_1_0= rule_AssignmentKey ) ) ( (lv_value_2_0= ruleExpression ) ) ( (lv_facets_3_0= ruleFacet ) )* ) otherlv_4= ';'
            {
            // InternalMyDsl.g:2624:3: ( ( (lv_expr_0_0= ruleExpression ) ) ( (lv_key_1_0= rule_AssignmentKey ) ) ( (lv_value_2_0= ruleExpression ) ) ( (lv_facets_3_0= ruleFacet ) )* )
            // InternalMyDsl.g:2625:4: ( (lv_expr_0_0= ruleExpression ) ) ( (lv_key_1_0= rule_AssignmentKey ) ) ( (lv_value_2_0= ruleExpression ) ) ( (lv_facets_3_0= ruleFacet ) )*
            {
            // InternalMyDsl.g:2625:4: ( (lv_expr_0_0= ruleExpression ) )
            // InternalMyDsl.g:2626:5: (lv_expr_0_0= ruleExpression )
            {
            // InternalMyDsl.g:2626:5: (lv_expr_0_0= ruleExpression )
            // InternalMyDsl.g:2627:6: lv_expr_0_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getS_DirectAssignmentAccess().getExprExpressionParserRuleCall_0_0_0());
              					
            }
            pushFollow(FOLLOW_40);
            lv_expr_0_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getS_DirectAssignmentRule());
              						}
              						set(
              							current,
              							"expr",
              							lv_expr_0_0,
              							"org.xtext.example.mydsl.MyDsl.Expression");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }

            // InternalMyDsl.g:2644:4: ( (lv_key_1_0= rule_AssignmentKey ) )
            // InternalMyDsl.g:2645:5: (lv_key_1_0= rule_AssignmentKey )
            {
            // InternalMyDsl.g:2645:5: (lv_key_1_0= rule_AssignmentKey )
            // InternalMyDsl.g:2646:6: lv_key_1_0= rule_AssignmentKey
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getS_DirectAssignmentAccess().getKey_AssignmentKeyParserRuleCall_0_1_0());
              					
            }
            pushFollow(FOLLOW_5);
            lv_key_1_0=rule_AssignmentKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getS_DirectAssignmentRule());
              						}
              						set(
              							current,
              							"key",
              							lv_key_1_0,
              							"org.xtext.example.mydsl.MyDsl._AssignmentKey");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }

            // InternalMyDsl.g:2663:4: ( (lv_value_2_0= ruleExpression ) )
            // InternalMyDsl.g:2664:5: (lv_value_2_0= ruleExpression )
            {
            // InternalMyDsl.g:2664:5: (lv_value_2_0= ruleExpression )
            // InternalMyDsl.g:2665:6: lv_value_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getS_DirectAssignmentAccess().getValueExpressionParserRuleCall_0_2_0());
              					
            }
            pushFollow(FOLLOW_39);
            lv_value_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getS_DirectAssignmentRule());
              						}
              						set(
              							current,
              							"value",
              							lv_value_2_0,
              							"org.xtext.example.mydsl.MyDsl.Expression");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }

            // InternalMyDsl.g:2682:4: ( (lv_facets_3_0= ruleFacet ) )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( (LA60_0==RULE_ID||LA60_0==16||LA60_0==26||LA60_0==30||(LA60_0>=38 && LA60_0<=39)||(LA60_0>=112 && LA60_0<=136)) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    // InternalMyDsl.g:2683:5: (lv_facets_3_0= ruleFacet )
            	    {
            	    // InternalMyDsl.g:2683:5: (lv_facets_3_0= ruleFacet )
            	    // InternalMyDsl.g:2684:6: lv_facets_3_0= ruleFacet
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getS_DirectAssignmentAccess().getFacetsFacetParserRuleCall_0_3_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_39);
            	    lv_facets_3_0=ruleFacet();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getS_DirectAssignmentRule());
            	      						}
            	      						add(
            	      							current,
            	      							"facets",
            	      							lv_facets_3_0,
            	      							"org.xtext.example.mydsl.MyDsl.Facet");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);


            }

            otherlv_4=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getS_DirectAssignmentAccess().getSemicolonKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleS_DirectAssignment"


    // $ANTLR start "entryRuleS_Set"
    // InternalMyDsl.g:2710:1: entryRuleS_Set returns [EObject current=null] : iv_ruleS_Set= ruleS_Set EOF ;
    public final EObject entryRuleS_Set() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleS_Set = null;


        try {
            // InternalMyDsl.g:2710:46: (iv_ruleS_Set= ruleS_Set EOF )
            // InternalMyDsl.g:2711:2: iv_ruleS_Set= ruleS_Set EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getS_SetRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleS_Set=ruleS_Set();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleS_Set; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleS_Set"


    // $ANTLR start "ruleS_Set"
    // InternalMyDsl.g:2717:1: ruleS_Set returns [EObject current=null] : ( ( (lv_key_0_0= 'set' ) ) ( (lv_expr_1_0= ruleExpression ) ) (otherlv_2= 'value:' | otherlv_3= '<-' ) ( (lv_value_4_0= ruleExpression ) ) otherlv_5= ';' ) ;
    public final EObject ruleS_Set() throws RecognitionException {
        EObject current = null;

        Token lv_key_0_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_expr_1_0 = null;

        EObject lv_value_4_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:2723:2: ( ( ( (lv_key_0_0= 'set' ) ) ( (lv_expr_1_0= ruleExpression ) ) (otherlv_2= 'value:' | otherlv_3= '<-' ) ( (lv_value_4_0= ruleExpression ) ) otherlv_5= ';' ) )
            // InternalMyDsl.g:2724:2: ( ( (lv_key_0_0= 'set' ) ) ( (lv_expr_1_0= ruleExpression ) ) (otherlv_2= 'value:' | otherlv_3= '<-' ) ( (lv_value_4_0= ruleExpression ) ) otherlv_5= ';' )
            {
            // InternalMyDsl.g:2724:2: ( ( (lv_key_0_0= 'set' ) ) ( (lv_expr_1_0= ruleExpression ) ) (otherlv_2= 'value:' | otherlv_3= '<-' ) ( (lv_value_4_0= ruleExpression ) ) otherlv_5= ';' )
            // InternalMyDsl.g:2725:3: ( (lv_key_0_0= 'set' ) ) ( (lv_expr_1_0= ruleExpression ) ) (otherlv_2= 'value:' | otherlv_3= '<-' ) ( (lv_value_4_0= ruleExpression ) ) otherlv_5= ';'
            {
            // InternalMyDsl.g:2725:3: ( (lv_key_0_0= 'set' ) )
            // InternalMyDsl.g:2726:4: (lv_key_0_0= 'set' )
            {
            // InternalMyDsl.g:2726:4: (lv_key_0_0= 'set' )
            // InternalMyDsl.g:2727:5: lv_key_0_0= 'set'
            {
            lv_key_0_0=(Token)match(input,44,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_key_0_0, grammarAccess.getS_SetAccess().getKeySetKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getS_SetRule());
              					}
              					setWithLastConsumed(current, "key", lv_key_0_0, "set");
              				
            }

            }


            }

            // InternalMyDsl.g:2739:3: ( (lv_expr_1_0= ruleExpression ) )
            // InternalMyDsl.g:2740:4: (lv_expr_1_0= ruleExpression )
            {
            // InternalMyDsl.g:2740:4: (lv_expr_1_0= ruleExpression )
            // InternalMyDsl.g:2741:5: lv_expr_1_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getS_SetAccess().getExprExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_41);
            lv_expr_1_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getS_SetRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_1_0,
              						"org.xtext.example.mydsl.MyDsl.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyDsl.g:2758:3: (otherlv_2= 'value:' | otherlv_3= '<-' )
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==38) ) {
                alt61=1;
            }
            else if ( (LA61_0==16) ) {
                alt61=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 61, 0, input);

                throw nvae;
            }
            switch (alt61) {
                case 1 :
                    // InternalMyDsl.g:2759:4: otherlv_2= 'value:'
                    {
                    otherlv_2=(Token)match(input,38,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getS_SetAccess().getValueKeyword_2_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:2764:4: otherlv_3= '<-'
                    {
                    otherlv_3=(Token)match(input,16,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getS_SetAccess().getLessThanSignHyphenMinusKeyword_2_1());
                      			
                    }

                    }
                    break;

            }

            // InternalMyDsl.g:2769:3: ( (lv_value_4_0= ruleExpression ) )
            // InternalMyDsl.g:2770:4: (lv_value_4_0= ruleExpression )
            {
            // InternalMyDsl.g:2770:4: (lv_value_4_0= ruleExpression )
            // InternalMyDsl.g:2771:5: lv_value_4_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getS_SetAccess().getValueExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_31);
            lv_value_4_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getS_SetRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_4_0,
              						"org.xtext.example.mydsl.MyDsl.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_5=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getS_SetAccess().getSemicolonKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleS_Set"


    // $ANTLR start "entryRuleS_Equations"
    // InternalMyDsl.g:2796:1: entryRuleS_Equations returns [EObject current=null] : iv_ruleS_Equations= ruleS_Equations EOF ;
    public final EObject entryRuleS_Equations() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleS_Equations = null;


        try {
            // InternalMyDsl.g:2796:52: (iv_ruleS_Equations= ruleS_Equations EOF )
            // InternalMyDsl.g:2797:2: iv_ruleS_Equations= ruleS_Equations EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getS_EquationsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleS_Equations=ruleS_Equations();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleS_Equations; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleS_Equations"


    // $ANTLR start "ruleS_Equations"
    // InternalMyDsl.g:2803:1: ruleS_Equations returns [EObject current=null] : ( ( (lv_key_0_0= rule_EquationsKey ) ) ( (lv_name_1_0= ruleValid_ID ) ) ( (lv_facets_2_0= ruleFacet ) )* ( (otherlv_3= '{' ( ( (lv_equations_4_0= ruleS_Equation ) ) otherlv_5= ';' )* otherlv_6= '}' ) | otherlv_7= ';' ) ) ;
    public final EObject ruleS_Equations() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        AntlrDatatypeRuleToken lv_key_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_facets_2_0 = null;

        EObject lv_equations_4_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:2809:2: ( ( ( (lv_key_0_0= rule_EquationsKey ) ) ( (lv_name_1_0= ruleValid_ID ) ) ( (lv_facets_2_0= ruleFacet ) )* ( (otherlv_3= '{' ( ( (lv_equations_4_0= ruleS_Equation ) ) otherlv_5= ';' )* otherlv_6= '}' ) | otherlv_7= ';' ) ) )
            // InternalMyDsl.g:2810:2: ( ( (lv_key_0_0= rule_EquationsKey ) ) ( (lv_name_1_0= ruleValid_ID ) ) ( (lv_facets_2_0= ruleFacet ) )* ( (otherlv_3= '{' ( ( (lv_equations_4_0= ruleS_Equation ) ) otherlv_5= ';' )* otherlv_6= '}' ) | otherlv_7= ';' ) )
            {
            // InternalMyDsl.g:2810:2: ( ( (lv_key_0_0= rule_EquationsKey ) ) ( (lv_name_1_0= ruleValid_ID ) ) ( (lv_facets_2_0= ruleFacet ) )* ( (otherlv_3= '{' ( ( (lv_equations_4_0= ruleS_Equation ) ) otherlv_5= ';' )* otherlv_6= '}' ) | otherlv_7= ';' ) )
            // InternalMyDsl.g:2811:3: ( (lv_key_0_0= rule_EquationsKey ) ) ( (lv_name_1_0= ruleValid_ID ) ) ( (lv_facets_2_0= ruleFacet ) )* ( (otherlv_3= '{' ( ( (lv_equations_4_0= ruleS_Equation ) ) otherlv_5= ';' )* otherlv_6= '}' ) | otherlv_7= ';' )
            {
            // InternalMyDsl.g:2811:3: ( (lv_key_0_0= rule_EquationsKey ) )
            // InternalMyDsl.g:2812:4: (lv_key_0_0= rule_EquationsKey )
            {
            // InternalMyDsl.g:2812:4: (lv_key_0_0= rule_EquationsKey )
            // InternalMyDsl.g:2813:5: lv_key_0_0= rule_EquationsKey
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getS_EquationsAccess().getKey_EquationsKeyParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_15);
            lv_key_0_0=rule_EquationsKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getS_EquationsRule());
              					}
              					set(
              						current,
              						"key",
              						lv_key_0_0,
              						"org.xtext.example.mydsl.MyDsl._EquationsKey");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyDsl.g:2830:3: ( (lv_name_1_0= ruleValid_ID ) )
            // InternalMyDsl.g:2831:4: (lv_name_1_0= ruleValid_ID )
            {
            // InternalMyDsl.g:2831:4: (lv_name_1_0= ruleValid_ID )
            // InternalMyDsl.g:2832:5: lv_name_1_0= ruleValid_ID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getS_EquationsAccess().getNameValid_IDParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_22);
            lv_name_1_0=ruleValid_ID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getS_EquationsRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.xtext.example.mydsl.MyDsl.Valid_ID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyDsl.g:2849:3: ( (lv_facets_2_0= ruleFacet ) )*
            loop62:
            do {
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( (LA62_0==RULE_ID||LA62_0==16||LA62_0==26||LA62_0==30||(LA62_0>=38 && LA62_0<=39)||(LA62_0>=112 && LA62_0<=136)) ) {
                    alt62=1;
                }


                switch (alt62) {
            	case 1 :
            	    // InternalMyDsl.g:2850:4: (lv_facets_2_0= ruleFacet )
            	    {
            	    // InternalMyDsl.g:2850:4: (lv_facets_2_0= ruleFacet )
            	    // InternalMyDsl.g:2851:5: lv_facets_2_0= ruleFacet
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getS_EquationsAccess().getFacetsFacetParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_22);
            	    lv_facets_2_0=ruleFacet();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getS_EquationsRule());
            	      					}
            	      					add(
            	      						current,
            	      						"facets",
            	      						lv_facets_2_0,
            	      						"org.xtext.example.mydsl.MyDsl.Facet");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop62;
                }
            } while (true);

            // InternalMyDsl.g:2868:3: ( (otherlv_3= '{' ( ( (lv_equations_4_0= ruleS_Equation ) ) otherlv_5= ';' )* otherlv_6= '}' ) | otherlv_7= ';' )
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==45) ) {
                alt64=1;
            }
            else if ( (LA64_0==28) ) {
                alt64=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 64, 0, input);

                throw nvae;
            }
            switch (alt64) {
                case 1 :
                    // InternalMyDsl.g:2869:4: (otherlv_3= '{' ( ( (lv_equations_4_0= ruleS_Equation ) ) otherlv_5= ';' )* otherlv_6= '}' )
                    {
                    // InternalMyDsl.g:2869:4: (otherlv_3= '{' ( ( (lv_equations_4_0= ruleS_Equation ) ) otherlv_5= ';' )* otherlv_6= '}' )
                    // InternalMyDsl.g:2870:5: otherlv_3= '{' ( ( (lv_equations_4_0= ruleS_Equation ) ) otherlv_5= ';' )* otherlv_6= '}'
                    {
                    otherlv_3=(Token)match(input,45,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getS_EquationsAccess().getLeftCurlyBracketKeyword_3_0_0());
                      				
                    }
                    // InternalMyDsl.g:2874:5: ( ( (lv_equations_4_0= ruleS_Equation ) ) otherlv_5= ';' )*
                    loop63:
                    do {
                        int alt63=2;
                        int LA63_0 = input.LA(1);

                        if ( (LA63_0==RULE_ID||LA63_0==50||(LA63_0>=52 && LA63_0<=104)) ) {
                            alt63=1;
                        }


                        switch (alt63) {
                    	case 1 :
                    	    // InternalMyDsl.g:2875:6: ( (lv_equations_4_0= ruleS_Equation ) ) otherlv_5= ';'
                    	    {
                    	    // InternalMyDsl.g:2875:6: ( (lv_equations_4_0= ruleS_Equation ) )
                    	    // InternalMyDsl.g:2876:7: (lv_equations_4_0= ruleS_Equation )
                    	    {
                    	    // InternalMyDsl.g:2876:7: (lv_equations_4_0= ruleS_Equation )
                    	    // InternalMyDsl.g:2877:8: lv_equations_4_0= ruleS_Equation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getS_EquationsAccess().getEquationsS_EquationParserRuleCall_3_0_1_0_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_31);
                    	    lv_equations_4_0=ruleS_Equation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getS_EquationsRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"equations",
                    	      									lv_equations_4_0,
                    	      									"org.xtext.example.mydsl.MyDsl.S_Equation");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }

                    	    otherlv_5=(Token)match(input,28,FOLLOW_42); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_5, grammarAccess.getS_EquationsAccess().getSemicolonKeyword_3_0_1_1());
                    	      					
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop63;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getS_EquationsAccess().getRightCurlyBracketKeyword_3_0_2());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:2905:4: otherlv_7= ';'
                    {
                    otherlv_7=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getS_EquationsAccess().getSemicolonKeyword_3_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleS_Equations"


    // $ANTLR start "entryRuleS_Equation"
    // InternalMyDsl.g:2914:1: entryRuleS_Equation returns [EObject current=null] : iv_ruleS_Equation= ruleS_Equation EOF ;
    public final EObject entryRuleS_Equation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleS_Equation = null;


        try {
            // InternalMyDsl.g:2914:51: (iv_ruleS_Equation= ruleS_Equation EOF )
            // InternalMyDsl.g:2915:2: iv_ruleS_Equation= ruleS_Equation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getS_EquationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleS_Equation=ruleS_Equation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleS_Equation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleS_Equation"


    // $ANTLR start "ruleS_Equation"
    // InternalMyDsl.g:2921:1: ruleS_Equation returns [EObject current=null] : ( ( ( (lv_expr_0_1= ruleFunction | lv_expr_0_2= ruleVariableRef ) ) ) ( (lv_key_1_0= '=' ) ) ( (lv_value_2_0= ruleExpression ) ) ) ;
    public final EObject ruleS_Equation() throws RecognitionException {
        EObject current = null;

        Token lv_key_1_0=null;
        EObject lv_expr_0_1 = null;

        EObject lv_expr_0_2 = null;

        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:2927:2: ( ( ( ( (lv_expr_0_1= ruleFunction | lv_expr_0_2= ruleVariableRef ) ) ) ( (lv_key_1_0= '=' ) ) ( (lv_value_2_0= ruleExpression ) ) ) )
            // InternalMyDsl.g:2928:2: ( ( ( (lv_expr_0_1= ruleFunction | lv_expr_0_2= ruleVariableRef ) ) ) ( (lv_key_1_0= '=' ) ) ( (lv_value_2_0= ruleExpression ) ) )
            {
            // InternalMyDsl.g:2928:2: ( ( ( (lv_expr_0_1= ruleFunction | lv_expr_0_2= ruleVariableRef ) ) ) ( (lv_key_1_0= '=' ) ) ( (lv_value_2_0= ruleExpression ) ) )
            // InternalMyDsl.g:2929:3: ( ( (lv_expr_0_1= ruleFunction | lv_expr_0_2= ruleVariableRef ) ) ) ( (lv_key_1_0= '=' ) ) ( (lv_value_2_0= ruleExpression ) )
            {
            // InternalMyDsl.g:2929:3: ( ( (lv_expr_0_1= ruleFunction | lv_expr_0_2= ruleVariableRef ) ) )
            // InternalMyDsl.g:2930:4: ( (lv_expr_0_1= ruleFunction | lv_expr_0_2= ruleVariableRef ) )
            {
            // InternalMyDsl.g:2930:4: ( (lv_expr_0_1= ruleFunction | lv_expr_0_2= ruleVariableRef ) )
            // InternalMyDsl.g:2931:5: (lv_expr_0_1= ruleFunction | lv_expr_0_2= ruleVariableRef )
            {
            // InternalMyDsl.g:2931:5: (lv_expr_0_1= ruleFunction | lv_expr_0_2= ruleVariableRef )
            int alt65=2;
            alt65 = dfa65.predict(input);
            switch (alt65) {
                case 1 :
                    // InternalMyDsl.g:2932:6: lv_expr_0_1= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getS_EquationAccess().getExprFunctionParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_43);
                    lv_expr_0_1=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getS_EquationRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_0_1,
                      							"org.xtext.example.mydsl.MyDsl.Function");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:2948:6: lv_expr_0_2= ruleVariableRef
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getS_EquationAccess().getExprVariableRefParserRuleCall_0_0_1());
                      					
                    }
                    pushFollow(FOLLOW_43);
                    lv_expr_0_2=ruleVariableRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getS_EquationRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_0_2,
                      							"org.xtext.example.mydsl.MyDsl.VariableRef");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalMyDsl.g:2966:3: ( (lv_key_1_0= '=' ) )
            // InternalMyDsl.g:2967:4: (lv_key_1_0= '=' )
            {
            // InternalMyDsl.g:2967:4: (lv_key_1_0= '=' )
            // InternalMyDsl.g:2968:5: lv_key_1_0= '='
            {
            lv_key_1_0=(Token)match(input,47,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_key_1_0, grammarAccess.getS_EquationAccess().getKeyEqualsSignKeyword_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getS_EquationRule());
              					}
              					setWithLastConsumed(current, "key", lv_key_1_0, "=");
              				
            }

            }


            }

            // InternalMyDsl.g:2980:3: ( (lv_value_2_0= ruleExpression ) )
            // InternalMyDsl.g:2981:4: (lv_value_2_0= ruleExpression )
            {
            // InternalMyDsl.g:2981:4: (lv_value_2_0= ruleExpression )
            // InternalMyDsl.g:2982:5: lv_value_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getS_EquationAccess().getValueExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getS_EquationRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"org.xtext.example.mydsl.MyDsl.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleS_Equation"


    // $ANTLR start "entryRuleS_Solve"
    // InternalMyDsl.g:3003:1: entryRuleS_Solve returns [EObject current=null] : iv_ruleS_Solve= ruleS_Solve EOF ;
    public final EObject entryRuleS_Solve() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleS_Solve = null;


        try {
            // InternalMyDsl.g:3003:48: (iv_ruleS_Solve= ruleS_Solve EOF )
            // InternalMyDsl.g:3004:2: iv_ruleS_Solve= ruleS_Solve EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getS_SolveRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleS_Solve=ruleS_Solve();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleS_Solve; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleS_Solve"


    // $ANTLR start "ruleS_Solve"
    // InternalMyDsl.g:3010:1: ruleS_Solve returns [EObject current=null] : ( ( (lv_key_0_0= rule_SolveKey ) ) ( (lv_firstFacet_1_0= 'equation:' ) )? ( (lv_expr_2_0= ruleEquationRef ) ) ( (lv_facets_3_0= ruleFacet ) )* ( ( (lv_block_4_0= ruleBlock ) ) | otherlv_5= ';' ) ) ;
    public final EObject ruleS_Solve() throws RecognitionException {
        EObject current = null;

        Token lv_firstFacet_1_0=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_key_0_0 = null;

        EObject lv_expr_2_0 = null;

        EObject lv_facets_3_0 = null;

        EObject lv_block_4_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:3016:2: ( ( ( (lv_key_0_0= rule_SolveKey ) ) ( (lv_firstFacet_1_0= 'equation:' ) )? ( (lv_expr_2_0= ruleEquationRef ) ) ( (lv_facets_3_0= ruleFacet ) )* ( ( (lv_block_4_0= ruleBlock ) ) | otherlv_5= ';' ) ) )
            // InternalMyDsl.g:3017:2: ( ( (lv_key_0_0= rule_SolveKey ) ) ( (lv_firstFacet_1_0= 'equation:' ) )? ( (lv_expr_2_0= ruleEquationRef ) ) ( (lv_facets_3_0= ruleFacet ) )* ( ( (lv_block_4_0= ruleBlock ) ) | otherlv_5= ';' ) )
            {
            // InternalMyDsl.g:3017:2: ( ( (lv_key_0_0= rule_SolveKey ) ) ( (lv_firstFacet_1_0= 'equation:' ) )? ( (lv_expr_2_0= ruleEquationRef ) ) ( (lv_facets_3_0= ruleFacet ) )* ( ( (lv_block_4_0= ruleBlock ) ) | otherlv_5= ';' ) )
            // InternalMyDsl.g:3018:3: ( (lv_key_0_0= rule_SolveKey ) ) ( (lv_firstFacet_1_0= 'equation:' ) )? ( (lv_expr_2_0= ruleEquationRef ) ) ( (lv_facets_3_0= ruleFacet ) )* ( ( (lv_block_4_0= ruleBlock ) ) | otherlv_5= ';' )
            {
            // InternalMyDsl.g:3018:3: ( (lv_key_0_0= rule_SolveKey ) )
            // InternalMyDsl.g:3019:4: (lv_key_0_0= rule_SolveKey )
            {
            // InternalMyDsl.g:3019:4: (lv_key_0_0= rule_SolveKey )
            // InternalMyDsl.g:3020:5: lv_key_0_0= rule_SolveKey
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getS_SolveAccess().getKey_SolveKeyParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_44);
            lv_key_0_0=rule_SolveKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getS_SolveRule());
              					}
              					set(
              						current,
              						"key",
              						lv_key_0_0,
              						"org.xtext.example.mydsl.MyDsl._SolveKey");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyDsl.g:3037:3: ( (lv_firstFacet_1_0= 'equation:' ) )?
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==48) ) {
                alt66=1;
            }
            switch (alt66) {
                case 1 :
                    // InternalMyDsl.g:3038:4: (lv_firstFacet_1_0= 'equation:' )
                    {
                    // InternalMyDsl.g:3038:4: (lv_firstFacet_1_0= 'equation:' )
                    // InternalMyDsl.g:3039:5: lv_firstFacet_1_0= 'equation:'
                    {
                    lv_firstFacet_1_0=(Token)match(input,48,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_firstFacet_1_0, grammarAccess.getS_SolveAccess().getFirstFacetEquationKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getS_SolveRule());
                      					}
                      					setWithLastConsumed(current, "firstFacet", lv_firstFacet_1_0, "equation:");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalMyDsl.g:3051:3: ( (lv_expr_2_0= ruleEquationRef ) )
            // InternalMyDsl.g:3052:4: (lv_expr_2_0= ruleEquationRef )
            {
            // InternalMyDsl.g:3052:4: (lv_expr_2_0= ruleEquationRef )
            // InternalMyDsl.g:3053:5: lv_expr_2_0= ruleEquationRef
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getS_SolveAccess().getExprEquationRefParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_22);
            lv_expr_2_0=ruleEquationRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getS_SolveRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_2_0,
              						"org.xtext.example.mydsl.MyDsl.EquationRef");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyDsl.g:3070:3: ( (lv_facets_3_0= ruleFacet ) )*
            loop67:
            do {
                int alt67=2;
                int LA67_0 = input.LA(1);

                if ( (LA67_0==RULE_ID||LA67_0==16||LA67_0==26||LA67_0==30||(LA67_0>=38 && LA67_0<=39)||(LA67_0>=112 && LA67_0<=136)) ) {
                    alt67=1;
                }


                switch (alt67) {
            	case 1 :
            	    // InternalMyDsl.g:3071:4: (lv_facets_3_0= ruleFacet )
            	    {
            	    // InternalMyDsl.g:3071:4: (lv_facets_3_0= ruleFacet )
            	    // InternalMyDsl.g:3072:5: lv_facets_3_0= ruleFacet
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getS_SolveAccess().getFacetsFacetParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_22);
            	    lv_facets_3_0=ruleFacet();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getS_SolveRule());
            	      					}
            	      					add(
            	      						current,
            	      						"facets",
            	      						lv_facets_3_0,
            	      						"org.xtext.example.mydsl.MyDsl.Facet");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);

            // InternalMyDsl.g:3089:3: ( ( (lv_block_4_0= ruleBlock ) ) | otherlv_5= ';' )
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==45) ) {
                alt68=1;
            }
            else if ( (LA68_0==28) ) {
                alt68=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 68, 0, input);

                throw nvae;
            }
            switch (alt68) {
                case 1 :
                    // InternalMyDsl.g:3090:4: ( (lv_block_4_0= ruleBlock ) )
                    {
                    // InternalMyDsl.g:3090:4: ( (lv_block_4_0= ruleBlock ) )
                    // InternalMyDsl.g:3091:5: (lv_block_4_0= ruleBlock )
                    {
                    // InternalMyDsl.g:3091:5: (lv_block_4_0= ruleBlock )
                    // InternalMyDsl.g:3092:6: lv_block_4_0= ruleBlock
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getS_SolveAccess().getBlockBlockParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_block_4_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getS_SolveRule());
                      						}
                      						set(
                      							current,
                      							"block",
                      							lv_block_4_0,
                      							"org.xtext.example.mydsl.MyDsl.Block");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:3110:4: otherlv_5= ';'
                    {
                    otherlv_5=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getS_SolveAccess().getSemicolonKeyword_4_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleS_Solve"


    // $ANTLR start "entryRuleS_Display"
    // InternalMyDsl.g:3119:1: entryRuleS_Display returns [EObject current=null] : iv_ruleS_Display= ruleS_Display EOF ;
    public final EObject entryRuleS_Display() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleS_Display = null;


        try {
            // InternalMyDsl.g:3119:50: (iv_ruleS_Display= ruleS_Display EOF )
            // InternalMyDsl.g:3120:2: iv_ruleS_Display= ruleS_Display EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getS_DisplayRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleS_Display=ruleS_Display();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleS_Display; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleS_Display"


    // $ANTLR start "ruleS_Display"
    // InternalMyDsl.g:3126:1: ruleS_Display returns [EObject current=null] : ( ( (lv_key_0_0= 'display' ) ) ( (lv_firstFacet_1_0= 'name:' ) )? ( ( (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING ) ) ) ( (lv_facets_3_0= ruleFacet ) )* ( (lv_block_4_0= ruledisplayBlock ) ) ) ;
    public final EObject ruleS_Display() throws RecognitionException {
        EObject current = null;

        Token lv_key_0_0=null;
        Token lv_firstFacet_1_0=null;
        Token lv_name_2_2=null;
        AntlrDatatypeRuleToken lv_name_2_1 = null;

        EObject lv_facets_3_0 = null;

        EObject lv_block_4_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:3132:2: ( ( ( (lv_key_0_0= 'display' ) ) ( (lv_firstFacet_1_0= 'name:' ) )? ( ( (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING ) ) ) ( (lv_facets_3_0= ruleFacet ) )* ( (lv_block_4_0= ruledisplayBlock ) ) ) )
            // InternalMyDsl.g:3133:2: ( ( (lv_key_0_0= 'display' ) ) ( (lv_firstFacet_1_0= 'name:' ) )? ( ( (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING ) ) ) ( (lv_facets_3_0= ruleFacet ) )* ( (lv_block_4_0= ruledisplayBlock ) ) )
            {
            // InternalMyDsl.g:3133:2: ( ( (lv_key_0_0= 'display' ) ) ( (lv_firstFacet_1_0= 'name:' ) )? ( ( (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING ) ) ) ( (lv_facets_3_0= ruleFacet ) )* ( (lv_block_4_0= ruledisplayBlock ) ) )
            // InternalMyDsl.g:3134:3: ( (lv_key_0_0= 'display' ) ) ( (lv_firstFacet_1_0= 'name:' ) )? ( ( (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING ) ) ) ( (lv_facets_3_0= ruleFacet ) )* ( (lv_block_4_0= ruledisplayBlock ) )
            {
            // InternalMyDsl.g:3134:3: ( (lv_key_0_0= 'display' ) )
            // InternalMyDsl.g:3135:4: (lv_key_0_0= 'display' )
            {
            // InternalMyDsl.g:3135:4: (lv_key_0_0= 'display' )
            // InternalMyDsl.g:3136:5: lv_key_0_0= 'display'
            {
            lv_key_0_0=(Token)match(input,49,FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_key_0_0, grammarAccess.getS_DisplayAccess().getKeyDisplayKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getS_DisplayRule());
              					}
              					setWithLastConsumed(current, "key", lv_key_0_0, "display");
              				
            }

            }


            }

            // InternalMyDsl.g:3148:3: ( (lv_firstFacet_1_0= 'name:' ) )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==26) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // InternalMyDsl.g:3149:4: (lv_firstFacet_1_0= 'name:' )
                    {
                    // InternalMyDsl.g:3149:4: (lv_firstFacet_1_0= 'name:' )
                    // InternalMyDsl.g:3150:5: lv_firstFacet_1_0= 'name:'
                    {
                    lv_firstFacet_1_0=(Token)match(input,26,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_firstFacet_1_0, grammarAccess.getS_DisplayAccess().getFirstFacetNameKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getS_DisplayRule());
                      					}
                      					setWithLastConsumed(current, "firstFacet", lv_firstFacet_1_0, "name:");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalMyDsl.g:3162:3: ( ( (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING ) ) )
            // InternalMyDsl.g:3163:4: ( (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING ) )
            {
            // InternalMyDsl.g:3163:4: ( (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING ) )
            // InternalMyDsl.g:3164:5: (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING )
            {
            // InternalMyDsl.g:3164:5: (lv_name_2_1= ruleValid_ID | lv_name_2_2= RULE_STRING )
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==RULE_ID||LA70_0==50||(LA70_0>=52 && LA70_0<=104)) ) {
                alt70=1;
            }
            else if ( (LA70_0==RULE_STRING) ) {
                alt70=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 70, 0, input);

                throw nvae;
            }
            switch (alt70) {
                case 1 :
                    // InternalMyDsl.g:3165:6: lv_name_2_1= ruleValid_ID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getS_DisplayAccess().getNameValid_IDParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_25);
                    lv_name_2_1=ruleValid_ID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getS_DisplayRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_2_1,
                      							"org.xtext.example.mydsl.MyDsl.Valid_ID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:3181:6: lv_name_2_2= RULE_STRING
                    {
                    lv_name_2_2=(Token)match(input,RULE_STRING,FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_2_2, grammarAccess.getS_DisplayAccess().getNameSTRINGTerminalRuleCall_2_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getS_DisplayRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_2_2,
                      							"org.xtext.example.mydsl.MyDsl.STRING");
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalMyDsl.g:3198:3: ( (lv_facets_3_0= ruleFacet ) )*
            loop71:
            do {
                int alt71=2;
                int LA71_0 = input.LA(1);

                if ( (LA71_0==RULE_ID||LA71_0==16||LA71_0==26||LA71_0==30||(LA71_0>=38 && LA71_0<=39)||(LA71_0>=112 && LA71_0<=136)) ) {
                    alt71=1;
                }


                switch (alt71) {
            	case 1 :
            	    // InternalMyDsl.g:3199:4: (lv_facets_3_0= ruleFacet )
            	    {
            	    // InternalMyDsl.g:3199:4: (lv_facets_3_0= ruleFacet )
            	    // InternalMyDsl.g:3200:5: lv_facets_3_0= ruleFacet
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getS_DisplayAccess().getFacetsFacetParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_25);
            	    lv_facets_3_0=ruleFacet();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getS_DisplayRule());
            	      					}
            	      					add(
            	      						current,
            	      						"facets",
            	      						lv_facets_3_0,
            	      						"org.xtext.example.mydsl.MyDsl.Facet");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop71;
                }
            } while (true);

            // InternalMyDsl.g:3217:3: ( (lv_block_4_0= ruledisplayBlock ) )
            // InternalMyDsl.g:3218:4: (lv_block_4_0= ruledisplayBlock )
            {
            // InternalMyDsl.g:3218:4: (lv_block_4_0= ruledisplayBlock )
            // InternalMyDsl.g:3219:5: lv_block_4_0= ruledisplayBlock
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getS_DisplayAccess().getBlockDisplayBlockParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_block_4_0=ruledisplayBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getS_DisplayRule());
              					}
              					set(
              						current,
              						"block",
              						lv_block_4_0,
              						"org.xtext.example.mydsl.MyDsl.displayBlock");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleS_Display"


    // $ANTLR start "entryRuledisplayBlock"
    // InternalMyDsl.g:3240:1: entryRuledisplayBlock returns [EObject current=null] : iv_ruledisplayBlock= ruledisplayBlock EOF ;
    public final EObject entryRuledisplayBlock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruledisplayBlock = null;


        try {
            // InternalMyDsl.g:3240:53: (iv_ruledisplayBlock= ruledisplayBlock EOF )
            // InternalMyDsl.g:3241:2: iv_ruledisplayBlock= ruledisplayBlock EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDisplayBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledisplayBlock=ruledisplayBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledisplayBlock; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledisplayBlock"


    // $ANTLR start "ruledisplayBlock"
    // InternalMyDsl.g:3247:1: ruledisplayBlock returns [EObject current=null] : ( () otherlv_1= '{' ( (lv_statements_2_0= ruledisplayStatement ) )* otherlv_3= '}' ) ;
    public final EObject ruledisplayBlock() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_statements_2_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:3253:2: ( ( () otherlv_1= '{' ( (lv_statements_2_0= ruledisplayStatement ) )* otherlv_3= '}' ) )
            // InternalMyDsl.g:3254:2: ( () otherlv_1= '{' ( (lv_statements_2_0= ruledisplayStatement ) )* otherlv_3= '}' )
            {
            // InternalMyDsl.g:3254:2: ( () otherlv_1= '{' ( (lv_statements_2_0= ruledisplayStatement ) )* otherlv_3= '}' )
            // InternalMyDsl.g:3255:3: () otherlv_1= '{' ( (lv_statements_2_0= ruledisplayStatement ) )* otherlv_3= '}'
            {
            // InternalMyDsl.g:3255:3: ()
            // InternalMyDsl.g:3256:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDisplayBlockAccess().getBlockAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,45,FOLLOW_45); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDisplayBlockAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalMyDsl.g:3266:3: ( (lv_statements_2_0= ruledisplayStatement ) )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( ((LA72_0>=RULE_ID && LA72_0<=RULE_KEYWORD)||LA72_0==20||LA72_0==24||LA72_0==26||(LA72_0>=30 && LA72_0<=32)||LA72_0==35||(LA72_0>=37 && LA72_0<=39)||LA72_0==41||(LA72_0>=43 && LA72_0<=45)||(LA72_0>=49 && LA72_0<=104)||(LA72_0>=112 && LA72_0<=135)||LA72_0==146||(LA72_0>=150 && LA72_0<=154)) ) {
                    alt72=1;
                }


                switch (alt72) {
            	case 1 :
            	    // InternalMyDsl.g:3267:4: (lv_statements_2_0= ruledisplayStatement )
            	    {
            	    // InternalMyDsl.g:3267:4: (lv_statements_2_0= ruledisplayStatement )
            	    // InternalMyDsl.g:3268:5: lv_statements_2_0= ruledisplayStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDisplayBlockAccess().getStatementsDisplayStatementParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_45);
            	    lv_statements_2_0=ruledisplayStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDisplayBlockRule());
            	      					}
            	      					add(
            	      						current,
            	      						"statements",
            	      						lv_statements_2_0,
            	      						"org.xtext.example.mydsl.MyDsl.displayStatement");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);

            otherlv_3=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getDisplayBlockAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledisplayBlock"


    // $ANTLR start "entryRuledisplayStatement"
    // InternalMyDsl.g:3293:1: entryRuledisplayStatement returns [EObject current=null] : iv_ruledisplayStatement= ruledisplayStatement EOF ;
    public final EObject entryRuledisplayStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruledisplayStatement = null;


        try {
            // InternalMyDsl.g:3293:57: (iv_ruledisplayStatement= ruledisplayStatement EOF )
            // InternalMyDsl.g:3294:2: iv_ruledisplayStatement= ruledisplayStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDisplayStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruledisplayStatement=ruledisplayStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruledisplayStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuledisplayStatement"


    // $ANTLR start "ruledisplayStatement"
    // InternalMyDsl.g:3300:1: ruledisplayStatement returns [EObject current=null] : ( ( ( rulespeciesOrGridDisplayStatement )=>this_speciesOrGridDisplayStatement_0= rulespeciesOrGridDisplayStatement ) | ( ( ( ruleimageDisplayStatement )=>this_imageDisplayStatement_1= ruleimageDisplayStatement ) | this_Statement_2= ruleStatement ) ) ;
    public final EObject ruledisplayStatement() throws RecognitionException {
        EObject current = null;

        EObject this_speciesOrGridDisplayStatement_0 = null;

        EObject this_imageDisplayStatement_1 = null;

        EObject this_Statement_2 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:3306:2: ( ( ( ( rulespeciesOrGridDisplayStatement )=>this_speciesOrGridDisplayStatement_0= rulespeciesOrGridDisplayStatement ) | ( ( ( ruleimageDisplayStatement )=>this_imageDisplayStatement_1= ruleimageDisplayStatement ) | this_Statement_2= ruleStatement ) ) )
            // InternalMyDsl.g:3307:2: ( ( ( rulespeciesOrGridDisplayStatement )=>this_speciesOrGridDisplayStatement_0= rulespeciesOrGridDisplayStatement ) | ( ( ( ruleimageDisplayStatement )=>this_imageDisplayStatement_1= ruleimageDisplayStatement ) | this_Statement_2= ruleStatement ) )
            {
            // InternalMyDsl.g:3307:2: ( ( ( rulespeciesOrGridDisplayStatement )=>this_speciesOrGridDisplayStatement_0= rulespeciesOrGridDisplayStatement ) | ( ( ( ruleimageDisplayStatement )=>this_imageDisplayStatement_1= ruleimageDisplayStatement ) | this_Statement_2= ruleStatement ) )
            int alt74=2;
            alt74 = dfa74.predict(input);
            switch (alt74) {
                case 1 :
                    // InternalMyDsl.g:3308:3: ( ( rulespeciesOrGridDisplayStatement )=>this_speciesOrGridDisplayStatement_0= rulespeciesOrGridDisplayStatement )
                    {
                    // InternalMyDsl.g:3308:3: ( ( rulespeciesOrGridDisplayStatement )=>this_speciesOrGridDisplayStatement_0= rulespeciesOrGridDisplayStatement )
                    // InternalMyDsl.g:3309:4: ( rulespeciesOrGridDisplayStatement )=>this_speciesOrGridDisplayStatement_0= rulespeciesOrGridDisplayStatement
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getDisplayStatementAccess().getSpeciesOrGridDisplayStatementParserRuleCall_0());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_speciesOrGridDisplayStatement_0=rulespeciesOrGridDisplayStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_speciesOrGridDisplayStatement_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:3320:3: ( ( ( ruleimageDisplayStatement )=>this_imageDisplayStatement_1= ruleimageDisplayStatement ) | this_Statement_2= ruleStatement )
                    {
                    // InternalMyDsl.g:3320:3: ( ( ( ruleimageDisplayStatement )=>this_imageDisplayStatement_1= ruleimageDisplayStatement ) | this_Statement_2= ruleStatement )
                    int alt73=2;
                    alt73 = dfa73.predict(input);
                    switch (alt73) {
                        case 1 :
                            // InternalMyDsl.g:3321:4: ( ( ruleimageDisplayStatement )=>this_imageDisplayStatement_1= ruleimageDisplayStatement )
                            {
                            // InternalMyDsl.g:3321:4: ( ( ruleimageDisplayStatement )=>this_imageDisplayStatement_1= ruleimageDisplayStatement )
                            // InternalMyDsl.g:3322:5: ( ruleimageDisplayStatement )=>this_imageDisplayStatement_1= ruleimageDisplayStatement
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getDisplayStatementAccess().getImageDisplayStatementParserRuleCall_1_0());
                              				
                            }
                            pushFollow(FOLLOW_2);
                            this_imageDisplayStatement_1=ruleimageDisplayStatement();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current = this_imageDisplayStatement_1;
                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalMyDsl.g:3333:4: this_Statement_2= ruleStatement
                            {
                            if ( state.backtracking==0 ) {

                              				newCompositeNode(grammarAccess.getDisplayStatementAccess().getStatementParserRuleCall_1_1());
                              			
                            }
                            pushFollow(FOLLOW_2);
                            this_Statement_2=ruleStatement();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              				current = this_Statement_2;
                              				afterParserOrEnumRuleCall();
                              			
                            }

                            }
                            break;

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruledisplayStatement"


    // $ANTLR start "entryRulespeciesOrGridDisplayStatement"
    // InternalMyDsl.g:3346:1: entryRulespeciesOrGridDisplayStatement returns [EObject current=null] : iv_rulespeciesOrGridDisplayStatement= rulespeciesOrGridDisplayStatement EOF ;
    public final EObject entryRulespeciesOrGridDisplayStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_rulespeciesOrGridDisplayStatement = null;


        try {
            // InternalMyDsl.g:3346:70: (iv_rulespeciesOrGridDisplayStatement= rulespeciesOrGridDisplayStatement EOF )
            // InternalMyDsl.g:3347:2: iv_rulespeciesOrGridDisplayStatement= rulespeciesOrGridDisplayStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSpeciesOrGridDisplayStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulespeciesOrGridDisplayStatement=rulespeciesOrGridDisplayStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulespeciesOrGridDisplayStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulespeciesOrGridDisplayStatement"


    // $ANTLR start "rulespeciesOrGridDisplayStatement"
    // InternalMyDsl.g:3353:1: rulespeciesOrGridDisplayStatement returns [EObject current=null] : ( ( (lv_key_0_0= rule_SpeciesKey ) ) ( (lv_expr_1_0= ruleExpression ) ) ( (lv_facets_2_0= ruleFacet ) )* ( ( (lv_block_3_0= ruledisplayBlock ) ) | otherlv_4= ';' ) ) ;
    public final EObject rulespeciesOrGridDisplayStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_key_0_0 = null;

        EObject lv_expr_1_0 = null;

        EObject lv_facets_2_0 = null;

        EObject lv_block_3_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:3359:2: ( ( ( (lv_key_0_0= rule_SpeciesKey ) ) ( (lv_expr_1_0= ruleExpression ) ) ( (lv_facets_2_0= ruleFacet ) )* ( ( (lv_block_3_0= ruledisplayBlock ) ) | otherlv_4= ';' ) ) )
            // InternalMyDsl.g:3360:2: ( ( (lv_key_0_0= rule_SpeciesKey ) ) ( (lv_expr_1_0= ruleExpression ) ) ( (lv_facets_2_0= ruleFacet ) )* ( ( (lv_block_3_0= ruledisplayBlock ) ) | otherlv_4= ';' ) )
            {
            // InternalMyDsl.g:3360:2: ( ( (lv_key_0_0= rule_SpeciesKey ) ) ( (lv_expr_1_0= ruleExpression ) ) ( (lv_facets_2_0= ruleFacet ) )* ( ( (lv_block_3_0= ruledisplayBlock ) ) | otherlv_4= ';' ) )
            // InternalMyDsl.g:3361:3: ( (lv_key_0_0= rule_SpeciesKey ) ) ( (lv_expr_1_0= ruleExpression ) ) ( (lv_facets_2_0= ruleFacet ) )* ( ( (lv_block_3_0= ruledisplayBlock ) ) | otherlv_4= ';' )
            {
            // InternalMyDsl.g:3361:3: ( (lv_key_0_0= rule_SpeciesKey ) )
            // InternalMyDsl.g:3362:4: (lv_key_0_0= rule_SpeciesKey )
            {
            // InternalMyDsl.g:3362:4: (lv_key_0_0= rule_SpeciesKey )
            // InternalMyDsl.g:3363:5: lv_key_0_0= rule_SpeciesKey
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSpeciesOrGridDisplayStatementAccess().getKey_SpeciesKeyParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_5);
            lv_key_0_0=rule_SpeciesKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSpeciesOrGridDisplayStatementRule());
              					}
              					set(
              						current,
              						"key",
              						lv_key_0_0,
              						"org.xtext.example.mydsl.MyDsl._SpeciesKey");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyDsl.g:3380:3: ( (lv_expr_1_0= ruleExpression ) )
            // InternalMyDsl.g:3381:4: (lv_expr_1_0= ruleExpression )
            {
            // InternalMyDsl.g:3381:4: (lv_expr_1_0= ruleExpression )
            // InternalMyDsl.g:3382:5: lv_expr_1_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSpeciesOrGridDisplayStatementAccess().getExprExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_22);
            lv_expr_1_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSpeciesOrGridDisplayStatementRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_1_0,
              						"org.xtext.example.mydsl.MyDsl.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyDsl.g:3399:3: ( (lv_facets_2_0= ruleFacet ) )*
            loop75:
            do {
                int alt75=2;
                int LA75_0 = input.LA(1);

                if ( (LA75_0==RULE_ID||LA75_0==16||LA75_0==26||LA75_0==30||(LA75_0>=38 && LA75_0<=39)||(LA75_0>=112 && LA75_0<=136)) ) {
                    alt75=1;
                }


                switch (alt75) {
            	case 1 :
            	    // InternalMyDsl.g:3400:4: (lv_facets_2_0= ruleFacet )
            	    {
            	    // InternalMyDsl.g:3400:4: (lv_facets_2_0= ruleFacet )
            	    // InternalMyDsl.g:3401:5: lv_facets_2_0= ruleFacet
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSpeciesOrGridDisplayStatementAccess().getFacetsFacetParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_22);
            	    lv_facets_2_0=ruleFacet();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSpeciesOrGridDisplayStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"facets",
            	      						lv_facets_2_0,
            	      						"org.xtext.example.mydsl.MyDsl.Facet");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop75;
                }
            } while (true);

            // InternalMyDsl.g:3418:3: ( ( (lv_block_3_0= ruledisplayBlock ) ) | otherlv_4= ';' )
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==45) ) {
                alt76=1;
            }
            else if ( (LA76_0==28) ) {
                alt76=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 76, 0, input);

                throw nvae;
            }
            switch (alt76) {
                case 1 :
                    // InternalMyDsl.g:3419:4: ( (lv_block_3_0= ruledisplayBlock ) )
                    {
                    // InternalMyDsl.g:3419:4: ( (lv_block_3_0= ruledisplayBlock ) )
                    // InternalMyDsl.g:3420:5: (lv_block_3_0= ruledisplayBlock )
                    {
                    // InternalMyDsl.g:3420:5: (lv_block_3_0= ruledisplayBlock )
                    // InternalMyDsl.g:3421:6: lv_block_3_0= ruledisplayBlock
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getSpeciesOrGridDisplayStatementAccess().getBlockDisplayBlockParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_block_3_0=ruledisplayBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getSpeciesOrGridDisplayStatementRule());
                      						}
                      						set(
                      							current,
                      							"block",
                      							lv_block_3_0,
                      							"org.xtext.example.mydsl.MyDsl.displayBlock");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:3439:4: otherlv_4= ';'
                    {
                    otherlv_4=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getSpeciesOrGridDisplayStatementAccess().getSemicolonKeyword_3_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulespeciesOrGridDisplayStatement"


    // $ANTLR start "entryRuleimageDisplayStatement"
    // InternalMyDsl.g:3448:1: entryRuleimageDisplayStatement returns [EObject current=null] : iv_ruleimageDisplayStatement= ruleimageDisplayStatement EOF ;
    public final EObject entryRuleimageDisplayStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleimageDisplayStatement = null;


        try {
            // InternalMyDsl.g:3448:62: (iv_ruleimageDisplayStatement= ruleimageDisplayStatement EOF )
            // InternalMyDsl.g:3449:2: iv_ruleimageDisplayStatement= ruleimageDisplayStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImageDisplayStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleimageDisplayStatement=ruleimageDisplayStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleimageDisplayStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleimageDisplayStatement"


    // $ANTLR start "ruleimageDisplayStatement"
    // InternalMyDsl.g:3455:1: ruleimageDisplayStatement returns [EObject current=null] : ( ( (lv_key_0_0= rule_ImageLayerKey ) ) ( (lv_expr_1_0= ruleExpression ) ) ( (lv_facets_2_0= ruleFacet ) )* otherlv_3= ';' ) ;
    public final EObject ruleimageDisplayStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_key_0_0 = null;

        EObject lv_expr_1_0 = null;

        EObject lv_facets_2_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:3461:2: ( ( ( (lv_key_0_0= rule_ImageLayerKey ) ) ( (lv_expr_1_0= ruleExpression ) ) ( (lv_facets_2_0= ruleFacet ) )* otherlv_3= ';' ) )
            // InternalMyDsl.g:3462:2: ( ( (lv_key_0_0= rule_ImageLayerKey ) ) ( (lv_expr_1_0= ruleExpression ) ) ( (lv_facets_2_0= ruleFacet ) )* otherlv_3= ';' )
            {
            // InternalMyDsl.g:3462:2: ( ( (lv_key_0_0= rule_ImageLayerKey ) ) ( (lv_expr_1_0= ruleExpression ) ) ( (lv_facets_2_0= ruleFacet ) )* otherlv_3= ';' )
            // InternalMyDsl.g:3463:3: ( (lv_key_0_0= rule_ImageLayerKey ) ) ( (lv_expr_1_0= ruleExpression ) ) ( (lv_facets_2_0= ruleFacet ) )* otherlv_3= ';'
            {
            // InternalMyDsl.g:3463:3: ( (lv_key_0_0= rule_ImageLayerKey ) )
            // InternalMyDsl.g:3464:4: (lv_key_0_0= rule_ImageLayerKey )
            {
            // InternalMyDsl.g:3464:4: (lv_key_0_0= rule_ImageLayerKey )
            // InternalMyDsl.g:3465:5: lv_key_0_0= rule_ImageLayerKey
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getImageDisplayStatementAccess().getKey_ImageLayerKeyParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_5);
            lv_key_0_0=rule_ImageLayerKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getImageDisplayStatementRule());
              					}
              					set(
              						current,
              						"key",
              						lv_key_0_0,
              						"org.xtext.example.mydsl.MyDsl._ImageLayerKey");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyDsl.g:3482:3: ( (lv_expr_1_0= ruleExpression ) )
            // InternalMyDsl.g:3483:4: (lv_expr_1_0= ruleExpression )
            {
            // InternalMyDsl.g:3483:4: (lv_expr_1_0= ruleExpression )
            // InternalMyDsl.g:3484:5: lv_expr_1_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getImageDisplayStatementAccess().getExprExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_39);
            lv_expr_1_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getImageDisplayStatementRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_1_0,
              						"org.xtext.example.mydsl.MyDsl.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyDsl.g:3501:3: ( (lv_facets_2_0= ruleFacet ) )*
            loop77:
            do {
                int alt77=2;
                int LA77_0 = input.LA(1);

                if ( (LA77_0==RULE_ID||LA77_0==16||LA77_0==26||LA77_0==30||(LA77_0>=38 && LA77_0<=39)||(LA77_0>=112 && LA77_0<=136)) ) {
                    alt77=1;
                }


                switch (alt77) {
            	case 1 :
            	    // InternalMyDsl.g:3502:4: (lv_facets_2_0= ruleFacet )
            	    {
            	    // InternalMyDsl.g:3502:4: (lv_facets_2_0= ruleFacet )
            	    // InternalMyDsl.g:3503:5: lv_facets_2_0= ruleFacet
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getImageDisplayStatementAccess().getFacetsFacetParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_39);
            	    lv_facets_2_0=ruleFacet();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getImageDisplayStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"facets",
            	      						lv_facets_2_0,
            	      						"org.xtext.example.mydsl.MyDsl.Facet");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop77;
                }
            } while (true);

            otherlv_3=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getImageDisplayStatementAccess().getSemicolonKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleimageDisplayStatement"


    // $ANTLR start "entryRule_EquationsKey"
    // InternalMyDsl.g:3528:1: entryRule_EquationsKey returns [String current=null] : iv_rule_EquationsKey= rule_EquationsKey EOF ;
    public final String entryRule_EquationsKey() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rule_EquationsKey = null;


        try {
            // InternalMyDsl.g:3528:53: (iv_rule_EquationsKey= rule_EquationsKey EOF )
            // InternalMyDsl.g:3529:2: iv_rule_EquationsKey= rule_EquationsKey EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.get_EquationsKeyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rule_EquationsKey=rule_EquationsKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rule_EquationsKey.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRule_EquationsKey"


    // $ANTLR start "rule_EquationsKey"
    // InternalMyDsl.g:3535:1: rule_EquationsKey returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= 'equation' ;
    public final AntlrDatatypeRuleToken rule_EquationsKey() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMyDsl.g:3541:2: (kw= 'equation' )
            // InternalMyDsl.g:3542:2: kw= 'equation'
            {
            kw=(Token)match(input,50,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.get_EquationsKeyAccess().getEquationKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rule_EquationsKey"


    // $ANTLR start "entryRule_SolveKey"
    // InternalMyDsl.g:3550:1: entryRule_SolveKey returns [String current=null] : iv_rule_SolveKey= rule_SolveKey EOF ;
    public final String entryRule_SolveKey() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rule_SolveKey = null;


        try {
            // InternalMyDsl.g:3550:49: (iv_rule_SolveKey= rule_SolveKey EOF )
            // InternalMyDsl.g:3551:2: iv_rule_SolveKey= rule_SolveKey EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.get_SolveKeyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rule_SolveKey=rule_SolveKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rule_SolveKey.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRule_SolveKey"


    // $ANTLR start "rule_SolveKey"
    // InternalMyDsl.g:3557:1: rule_SolveKey returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= 'solve' ;
    public final AntlrDatatypeRuleToken rule_SolveKey() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMyDsl.g:3563:2: (kw= 'solve' )
            // InternalMyDsl.g:3564:2: kw= 'solve'
            {
            kw=(Token)match(input,51,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.get_SolveKeyAccess().getSolveKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rule_SolveKey"


    // $ANTLR start "entryRule_SpeciesKey"
    // InternalMyDsl.g:3572:1: entryRule_SpeciesKey returns [String current=null] : iv_rule_SpeciesKey= rule_SpeciesKey EOF ;
    public final String entryRule_SpeciesKey() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rule_SpeciesKey = null;


        try {
            // InternalMyDsl.g:3572:51: (iv_rule_SpeciesKey= rule_SpeciesKey EOF )
            // InternalMyDsl.g:3573:2: iv_rule_SpeciesKey= rule_SpeciesKey EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.get_SpeciesKeyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rule_SpeciesKey=rule_SpeciesKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rule_SpeciesKey.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRule_SpeciesKey"


    // $ANTLR start "rule_SpeciesKey"
    // InternalMyDsl.g:3579:1: rule_SpeciesKey returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'species' | kw= 'grid' ) ;
    public final AntlrDatatypeRuleToken rule_SpeciesKey() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMyDsl.g:3585:2: ( (kw= 'species' | kw= 'grid' ) )
            // InternalMyDsl.g:3586:2: (kw= 'species' | kw= 'grid' )
            {
            // InternalMyDsl.g:3586:2: (kw= 'species' | kw= 'grid' )
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==52) ) {
                alt78=1;
            }
            else if ( (LA78_0==53) ) {
                alt78=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 78, 0, input);

                throw nvae;
            }
            switch (alt78) {
                case 1 :
                    // InternalMyDsl.g:3587:3: kw= 'species'
                    {
                    kw=(Token)match(input,52,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_SpeciesKeyAccess().getSpeciesKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:3593:3: kw= 'grid'
                    {
                    kw=(Token)match(input,53,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_SpeciesKeyAccess().getGridKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rule_SpeciesKey"


    // $ANTLR start "entryRule_ImageLayerKey"
    // InternalMyDsl.g:3602:1: entryRule_ImageLayerKey returns [String current=null] : iv_rule_ImageLayerKey= rule_ImageLayerKey EOF ;
    public final String entryRule_ImageLayerKey() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rule_ImageLayerKey = null;


        try {
            // InternalMyDsl.g:3602:54: (iv_rule_ImageLayerKey= rule_ImageLayerKey EOF )
            // InternalMyDsl.g:3603:2: iv_rule_ImageLayerKey= rule_ImageLayerKey EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.get_ImageLayerKeyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rule_ImageLayerKey=rule_ImageLayerKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rule_ImageLayerKey.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRule_ImageLayerKey"


    // $ANTLR start "rule_ImageLayerKey"
    // InternalMyDsl.g:3609:1: rule_ImageLayerKey returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= 'image' ;
    public final AntlrDatatypeRuleToken rule_ImageLayerKey() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMyDsl.g:3615:2: (kw= 'image' )
            // InternalMyDsl.g:3616:2: kw= 'image'
            {
            kw=(Token)match(input,54,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.get_ImageLayerKeyAccess().getImageKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rule_ImageLayerKey"


    // $ANTLR start "entryRule_ExperimentKey"
    // InternalMyDsl.g:3624:1: entryRule_ExperimentKey returns [String current=null] : iv_rule_ExperimentKey= rule_ExperimentKey EOF ;
    public final String entryRule_ExperimentKey() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rule_ExperimentKey = null;


        try {
            // InternalMyDsl.g:3624:54: (iv_rule_ExperimentKey= rule_ExperimentKey EOF )
            // InternalMyDsl.g:3625:2: iv_rule_ExperimentKey= rule_ExperimentKey EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.get_ExperimentKeyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rule_ExperimentKey=rule_ExperimentKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rule_ExperimentKey.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRule_ExperimentKey"


    // $ANTLR start "rule_ExperimentKey"
    // InternalMyDsl.g:3631:1: rule_ExperimentKey returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= 'experiment' ;
    public final AntlrDatatypeRuleToken rule_ExperimentKey() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMyDsl.g:3637:2: (kw= 'experiment' )
            // InternalMyDsl.g:3638:2: kw= 'experiment'
            {
            kw=(Token)match(input,55,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.get_ExperimentKeyAccess().getExperimentKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rule_ExperimentKey"


    // $ANTLR start "entryRule_1Expr_Facets_BlockOrEnd_Key"
    // InternalMyDsl.g:3646:1: entryRule_1Expr_Facets_BlockOrEnd_Key returns [String current=null] : iv_rule_1Expr_Facets_BlockOrEnd_Key= rule_1Expr_Facets_BlockOrEnd_Key EOF ;
    public final String entryRule_1Expr_Facets_BlockOrEnd_Key() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rule_1Expr_Facets_BlockOrEnd_Key = null;


        try {
            // InternalMyDsl.g:3646:68: (iv_rule_1Expr_Facets_BlockOrEnd_Key= rule_1Expr_Facets_BlockOrEnd_Key EOF )
            // InternalMyDsl.g:3647:2: iv_rule_1Expr_Facets_BlockOrEnd_Key= rule_1Expr_Facets_BlockOrEnd_Key EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.get_1Expr_Facets_BlockOrEnd_KeyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rule_1Expr_Facets_BlockOrEnd_Key=rule_1Expr_Facets_BlockOrEnd_Key();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rule_1Expr_Facets_BlockOrEnd_Key.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRule_1Expr_Facets_BlockOrEnd_Key"


    // $ANTLR start "rule_1Expr_Facets_BlockOrEnd_Key"
    // InternalMyDsl.g:3653:1: rule_1Expr_Facets_BlockOrEnd_Key returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this__LayerKey_0= rule_LayerKey | kw= 'ask' | kw= 'release' | kw= 'capture' | kw= 'create' | kw= 'write' | kw= 'error' | kw= 'warn' | kw= 'exception' | kw= 'save' | kw= 'assert' | kw= 'inspect' | kw= 'browse' | kw= 'draw' | kw= 'using' | kw= 'switch' | kw= 'put' | kw= 'add' | kw= 'remove' | kw= 'match' | kw= 'match_between' | kw= 'match_one' | kw= 'parameter' | kw= 'status' | kw= 'highlight' | kw= 'focus_on' | kw= 'layout' ) ;
    public final AntlrDatatypeRuleToken rule_1Expr_Facets_BlockOrEnd_Key() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this__LayerKey_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:3659:2: ( (this__LayerKey_0= rule_LayerKey | kw= 'ask' | kw= 'release' | kw= 'capture' | kw= 'create' | kw= 'write' | kw= 'error' | kw= 'warn' | kw= 'exception' | kw= 'save' | kw= 'assert' | kw= 'inspect' | kw= 'browse' | kw= 'draw' | kw= 'using' | kw= 'switch' | kw= 'put' | kw= 'add' | kw= 'remove' | kw= 'match' | kw= 'match_between' | kw= 'match_one' | kw= 'parameter' | kw= 'status' | kw= 'highlight' | kw= 'focus_on' | kw= 'layout' ) )
            // InternalMyDsl.g:3660:2: (this__LayerKey_0= rule_LayerKey | kw= 'ask' | kw= 'release' | kw= 'capture' | kw= 'create' | kw= 'write' | kw= 'error' | kw= 'warn' | kw= 'exception' | kw= 'save' | kw= 'assert' | kw= 'inspect' | kw= 'browse' | kw= 'draw' | kw= 'using' | kw= 'switch' | kw= 'put' | kw= 'add' | kw= 'remove' | kw= 'match' | kw= 'match_between' | kw= 'match_one' | kw= 'parameter' | kw= 'status' | kw= 'highlight' | kw= 'focus_on' | kw= 'layout' )
            {
            // InternalMyDsl.g:3660:2: (this__LayerKey_0= rule_LayerKey | kw= 'ask' | kw= 'release' | kw= 'capture' | kw= 'create' | kw= 'write' | kw= 'error' | kw= 'warn' | kw= 'exception' | kw= 'save' | kw= 'assert' | kw= 'inspect' | kw= 'browse' | kw= 'draw' | kw= 'using' | kw= 'switch' | kw= 'put' | kw= 'add' | kw= 'remove' | kw= 'match' | kw= 'match_between' | kw= 'match_one' | kw= 'parameter' | kw= 'status' | kw= 'highlight' | kw= 'focus_on' | kw= 'layout' )
            int alt79=27;
            switch ( input.LA(1) ) {
            case 82:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 91:
            case 92:
            case 93:
            case 94:
            case 95:
                {
                alt79=1;
                }
                break;
            case 56:
                {
                alt79=2;
                }
                break;
            case 57:
                {
                alt79=3;
                }
                break;
            case 58:
                {
                alt79=4;
                }
                break;
            case 59:
                {
                alt79=5;
                }
                break;
            case 60:
                {
                alt79=6;
                }
                break;
            case 61:
                {
                alt79=7;
                }
                break;
            case 62:
                {
                alt79=8;
                }
                break;
            case 63:
                {
                alt79=9;
                }
                break;
            case 64:
                {
                alt79=10;
                }
                break;
            case 65:
                {
                alt79=11;
                }
                break;
            case 66:
                {
                alt79=12;
                }
                break;
            case 67:
                {
                alt79=13;
                }
                break;
            case 68:
                {
                alt79=14;
                }
                break;
            case 69:
                {
                alt79=15;
                }
                break;
            case 70:
                {
                alt79=16;
                }
                break;
            case 71:
                {
                alt79=17;
                }
                break;
            case 72:
                {
                alt79=18;
                }
                break;
            case 73:
                {
                alt79=19;
                }
                break;
            case 74:
                {
                alt79=20;
                }
                break;
            case 75:
                {
                alt79=21;
                }
                break;
            case 76:
                {
                alt79=22;
                }
                break;
            case 77:
                {
                alt79=23;
                }
                break;
            case 78:
                {
                alt79=24;
                }
                break;
            case 79:
                {
                alt79=25;
                }
                break;
            case 80:
                {
                alt79=26;
                }
                break;
            case 81:
                {
                alt79=27;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 79, 0, input);

                throw nvae;
            }

            switch (alt79) {
                case 1 :
                    // InternalMyDsl.g:3661:3: this__LayerKey_0= rule_LayerKey
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.get_1Expr_Facets_BlockOrEnd_KeyAccess().get_LayerKeyParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this__LayerKey_0=rule_LayerKey();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this__LayerKey_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:3672:3: kw= 'ask'
                    {
                    kw=(Token)match(input,56,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_1Expr_Facets_BlockOrEnd_KeyAccess().getAskKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMyDsl.g:3678:3: kw= 'release'
                    {
                    kw=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_1Expr_Facets_BlockOrEnd_KeyAccess().getReleaseKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalMyDsl.g:3684:3: kw= 'capture'
                    {
                    kw=(Token)match(input,58,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_1Expr_Facets_BlockOrEnd_KeyAccess().getCaptureKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalMyDsl.g:3690:3: kw= 'create'
                    {
                    kw=(Token)match(input,59,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_1Expr_Facets_BlockOrEnd_KeyAccess().getCreateKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalMyDsl.g:3696:3: kw= 'write'
                    {
                    kw=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_1Expr_Facets_BlockOrEnd_KeyAccess().getWriteKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalMyDsl.g:3702:3: kw= 'error'
                    {
                    kw=(Token)match(input,61,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_1Expr_Facets_BlockOrEnd_KeyAccess().getErrorKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalMyDsl.g:3708:3: kw= 'warn'
                    {
                    kw=(Token)match(input,62,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_1Expr_Facets_BlockOrEnd_KeyAccess().getWarnKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalMyDsl.g:3714:3: kw= 'exception'
                    {
                    kw=(Token)match(input,63,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_1Expr_Facets_BlockOrEnd_KeyAccess().getExceptionKeyword_8());
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalMyDsl.g:3720:3: kw= 'save'
                    {
                    kw=(Token)match(input,64,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_1Expr_Facets_BlockOrEnd_KeyAccess().getSaveKeyword_9());
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalMyDsl.g:3726:3: kw= 'assert'
                    {
                    kw=(Token)match(input,65,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_1Expr_Facets_BlockOrEnd_KeyAccess().getAssertKeyword_10());
                      		
                    }

                    }
                    break;
                case 12 :
                    // InternalMyDsl.g:3732:3: kw= 'inspect'
                    {
                    kw=(Token)match(input,66,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_1Expr_Facets_BlockOrEnd_KeyAccess().getInspectKeyword_11());
                      		
                    }

                    }
                    break;
                case 13 :
                    // InternalMyDsl.g:3738:3: kw= 'browse'
                    {
                    kw=(Token)match(input,67,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_1Expr_Facets_BlockOrEnd_KeyAccess().getBrowseKeyword_12());
                      		
                    }

                    }
                    break;
                case 14 :
                    // InternalMyDsl.g:3744:3: kw= 'draw'
                    {
                    kw=(Token)match(input,68,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_1Expr_Facets_BlockOrEnd_KeyAccess().getDrawKeyword_13());
                      		
                    }

                    }
                    break;
                case 15 :
                    // InternalMyDsl.g:3750:3: kw= 'using'
                    {
                    kw=(Token)match(input,69,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_1Expr_Facets_BlockOrEnd_KeyAccess().getUsingKeyword_14());
                      		
                    }

                    }
                    break;
                case 16 :
                    // InternalMyDsl.g:3756:3: kw= 'switch'
                    {
                    kw=(Token)match(input,70,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_1Expr_Facets_BlockOrEnd_KeyAccess().getSwitchKeyword_15());
                      		
                    }

                    }
                    break;
                case 17 :
                    // InternalMyDsl.g:3762:3: kw= 'put'
                    {
                    kw=(Token)match(input,71,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_1Expr_Facets_BlockOrEnd_KeyAccess().getPutKeyword_16());
                      		
                    }

                    }
                    break;
                case 18 :
                    // InternalMyDsl.g:3768:3: kw= 'add'
                    {
                    kw=(Token)match(input,72,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_1Expr_Facets_BlockOrEnd_KeyAccess().getAddKeyword_17());
                      		
                    }

                    }
                    break;
                case 19 :
                    // InternalMyDsl.g:3774:3: kw= 'remove'
                    {
                    kw=(Token)match(input,73,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_1Expr_Facets_BlockOrEnd_KeyAccess().getRemoveKeyword_18());
                      		
                    }

                    }
                    break;
                case 20 :
                    // InternalMyDsl.g:3780:3: kw= 'match'
                    {
                    kw=(Token)match(input,74,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_1Expr_Facets_BlockOrEnd_KeyAccess().getMatchKeyword_19());
                      		
                    }

                    }
                    break;
                case 21 :
                    // InternalMyDsl.g:3786:3: kw= 'match_between'
                    {
                    kw=(Token)match(input,75,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_1Expr_Facets_BlockOrEnd_KeyAccess().getMatch_betweenKeyword_20());
                      		
                    }

                    }
                    break;
                case 22 :
                    // InternalMyDsl.g:3792:3: kw= 'match_one'
                    {
                    kw=(Token)match(input,76,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_1Expr_Facets_BlockOrEnd_KeyAccess().getMatch_oneKeyword_21());
                      		
                    }

                    }
                    break;
                case 23 :
                    // InternalMyDsl.g:3798:3: kw= 'parameter'
                    {
                    kw=(Token)match(input,77,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_1Expr_Facets_BlockOrEnd_KeyAccess().getParameterKeyword_22());
                      		
                    }

                    }
                    break;
                case 24 :
                    // InternalMyDsl.g:3804:3: kw= 'status'
                    {
                    kw=(Token)match(input,78,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_1Expr_Facets_BlockOrEnd_KeyAccess().getStatusKeyword_23());
                      		
                    }

                    }
                    break;
                case 25 :
                    // InternalMyDsl.g:3810:3: kw= 'highlight'
                    {
                    kw=(Token)match(input,79,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_1Expr_Facets_BlockOrEnd_KeyAccess().getHighlightKeyword_24());
                      		
                    }

                    }
                    break;
                case 26 :
                    // InternalMyDsl.g:3816:3: kw= 'focus_on'
                    {
                    kw=(Token)match(input,80,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_1Expr_Facets_BlockOrEnd_KeyAccess().getFocus_onKeyword_25());
                      		
                    }

                    }
                    break;
                case 27 :
                    // InternalMyDsl.g:3822:3: kw= 'layout'
                    {
                    kw=(Token)match(input,81,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_1Expr_Facets_BlockOrEnd_KeyAccess().getLayoutKeyword_26());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rule_1Expr_Facets_BlockOrEnd_Key"


    // $ANTLR start "entryRule_LayerKey"
    // InternalMyDsl.g:3831:1: entryRule_LayerKey returns [String current=null] : iv_rule_LayerKey= rule_LayerKey EOF ;
    public final String entryRule_LayerKey() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rule_LayerKey = null;


        try {
            // InternalMyDsl.g:3831:49: (iv_rule_LayerKey= rule_LayerKey EOF )
            // InternalMyDsl.g:3832:2: iv_rule_LayerKey= rule_LayerKey EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.get_LayerKeyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rule_LayerKey=rule_LayerKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rule_LayerKey.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRule_LayerKey"


    // $ANTLR start "rule_LayerKey"
    // InternalMyDsl.g:3838:1: rule_LayerKey returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'light' | kw= 'camera' | kw= 'text' | kw= 'image_layer' | kw= 'data' | kw= 'chart' | kw= 'agents' | kw= 'graphics' | kw= 'display_population' | kw= 'display_grid' | kw= 'event' | kw= 'overlay' | kw= 'datalist' | kw= 'mesh' ) ;
    public final AntlrDatatypeRuleToken rule_LayerKey() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMyDsl.g:3844:2: ( (kw= 'light' | kw= 'camera' | kw= 'text' | kw= 'image_layer' | kw= 'data' | kw= 'chart' | kw= 'agents' | kw= 'graphics' | kw= 'display_population' | kw= 'display_grid' | kw= 'event' | kw= 'overlay' | kw= 'datalist' | kw= 'mesh' ) )
            // InternalMyDsl.g:3845:2: (kw= 'light' | kw= 'camera' | kw= 'text' | kw= 'image_layer' | kw= 'data' | kw= 'chart' | kw= 'agents' | kw= 'graphics' | kw= 'display_population' | kw= 'display_grid' | kw= 'event' | kw= 'overlay' | kw= 'datalist' | kw= 'mesh' )
            {
            // InternalMyDsl.g:3845:2: (kw= 'light' | kw= 'camera' | kw= 'text' | kw= 'image_layer' | kw= 'data' | kw= 'chart' | kw= 'agents' | kw= 'graphics' | kw= 'display_population' | kw= 'display_grid' | kw= 'event' | kw= 'overlay' | kw= 'datalist' | kw= 'mesh' )
            int alt80=14;
            switch ( input.LA(1) ) {
            case 82:
                {
                alt80=1;
                }
                break;
            case 83:
                {
                alt80=2;
                }
                break;
            case 84:
                {
                alt80=3;
                }
                break;
            case 85:
                {
                alt80=4;
                }
                break;
            case 86:
                {
                alt80=5;
                }
                break;
            case 87:
                {
                alt80=6;
                }
                break;
            case 88:
                {
                alt80=7;
                }
                break;
            case 89:
                {
                alt80=8;
                }
                break;
            case 90:
                {
                alt80=9;
                }
                break;
            case 91:
                {
                alt80=10;
                }
                break;
            case 92:
                {
                alt80=11;
                }
                break;
            case 93:
                {
                alt80=12;
                }
                break;
            case 94:
                {
                alt80=13;
                }
                break;
            case 95:
                {
                alt80=14;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 80, 0, input);

                throw nvae;
            }

            switch (alt80) {
                case 1 :
                    // InternalMyDsl.g:3846:3: kw= 'light'
                    {
                    kw=(Token)match(input,82,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_LayerKeyAccess().getLightKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:3852:3: kw= 'camera'
                    {
                    kw=(Token)match(input,83,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_LayerKeyAccess().getCameraKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMyDsl.g:3858:3: kw= 'text'
                    {
                    kw=(Token)match(input,84,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_LayerKeyAccess().getTextKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalMyDsl.g:3864:3: kw= 'image_layer'
                    {
                    kw=(Token)match(input,85,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_LayerKeyAccess().getImage_layerKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalMyDsl.g:3870:3: kw= 'data'
                    {
                    kw=(Token)match(input,86,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_LayerKeyAccess().getDataKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalMyDsl.g:3876:3: kw= 'chart'
                    {
                    kw=(Token)match(input,87,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_LayerKeyAccess().getChartKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalMyDsl.g:3882:3: kw= 'agents'
                    {
                    kw=(Token)match(input,88,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_LayerKeyAccess().getAgentsKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalMyDsl.g:3888:3: kw= 'graphics'
                    {
                    kw=(Token)match(input,89,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_LayerKeyAccess().getGraphicsKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalMyDsl.g:3894:3: kw= 'display_population'
                    {
                    kw=(Token)match(input,90,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_LayerKeyAccess().getDisplay_populationKeyword_8());
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalMyDsl.g:3900:3: kw= 'display_grid'
                    {
                    kw=(Token)match(input,91,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_LayerKeyAccess().getDisplay_gridKeyword_9());
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalMyDsl.g:3906:3: kw= 'event'
                    {
                    kw=(Token)match(input,92,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_LayerKeyAccess().getEventKeyword_10());
                      		
                    }

                    }
                    break;
                case 12 :
                    // InternalMyDsl.g:3912:3: kw= 'overlay'
                    {
                    kw=(Token)match(input,93,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_LayerKeyAccess().getOverlayKeyword_11());
                      		
                    }

                    }
                    break;
                case 13 :
                    // InternalMyDsl.g:3918:3: kw= 'datalist'
                    {
                    kw=(Token)match(input,94,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_LayerKeyAccess().getDatalistKeyword_12());
                      		
                    }

                    }
                    break;
                case 14 :
                    // InternalMyDsl.g:3924:3: kw= 'mesh'
                    {
                    kw=(Token)match(input,95,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_LayerKeyAccess().getMeshKeyword_13());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rule_LayerKey"


    // $ANTLR start "entryRule_DoKey"
    // InternalMyDsl.g:3933:1: entryRule_DoKey returns [String current=null] : iv_rule_DoKey= rule_DoKey EOF ;
    public final String entryRule_DoKey() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rule_DoKey = null;


        try {
            // InternalMyDsl.g:3933:46: (iv_rule_DoKey= rule_DoKey EOF )
            // InternalMyDsl.g:3934:2: iv_rule_DoKey= rule_DoKey EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.get_DoKeyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rule_DoKey=rule_DoKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rule_DoKey.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRule_DoKey"


    // $ANTLR start "rule_DoKey"
    // InternalMyDsl.g:3940:1: rule_DoKey returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'do' | kw= 'invoke' ) ;
    public final AntlrDatatypeRuleToken rule_DoKey() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMyDsl.g:3946:2: ( (kw= 'do' | kw= 'invoke' ) )
            // InternalMyDsl.g:3947:2: (kw= 'do' | kw= 'invoke' )
            {
            // InternalMyDsl.g:3947:2: (kw= 'do' | kw= 'invoke' )
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==96) ) {
                alt81=1;
            }
            else if ( (LA81_0==97) ) {
                alt81=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 81, 0, input);

                throw nvae;
            }
            switch (alt81) {
                case 1 :
                    // InternalMyDsl.g:3948:3: kw= 'do'
                    {
                    kw=(Token)match(input,96,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_DoKeyAccess().getDoKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:3954:3: kw= 'invoke'
                    {
                    kw=(Token)match(input,97,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_DoKeyAccess().getInvokeKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rule_DoKey"


    // $ANTLR start "entryRule_VarOrConstKey"
    // InternalMyDsl.g:3963:1: entryRule_VarOrConstKey returns [String current=null] : iv_rule_VarOrConstKey= rule_VarOrConstKey EOF ;
    public final String entryRule_VarOrConstKey() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rule_VarOrConstKey = null;


        try {
            // InternalMyDsl.g:3963:54: (iv_rule_VarOrConstKey= rule_VarOrConstKey EOF )
            // InternalMyDsl.g:3964:2: iv_rule_VarOrConstKey= rule_VarOrConstKey EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.get_VarOrConstKeyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rule_VarOrConstKey=rule_VarOrConstKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rule_VarOrConstKey.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRule_VarOrConstKey"


    // $ANTLR start "rule_VarOrConstKey"
    // InternalMyDsl.g:3970:1: rule_VarOrConstKey returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'var' | kw= 'const' | kw= 'let' | kw= 'arg' ) ;
    public final AntlrDatatypeRuleToken rule_VarOrConstKey() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMyDsl.g:3976:2: ( (kw= 'var' | kw= 'const' | kw= 'let' | kw= 'arg' ) )
            // InternalMyDsl.g:3977:2: (kw= 'var' | kw= 'const' | kw= 'let' | kw= 'arg' )
            {
            // InternalMyDsl.g:3977:2: (kw= 'var' | kw= 'const' | kw= 'let' | kw= 'arg' )
            int alt82=4;
            switch ( input.LA(1) ) {
            case 98:
                {
                alt82=1;
                }
                break;
            case 99:
                {
                alt82=2;
                }
                break;
            case 100:
                {
                alt82=3;
                }
                break;
            case 101:
                {
                alt82=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 82, 0, input);

                throw nvae;
            }

            switch (alt82) {
                case 1 :
                    // InternalMyDsl.g:3978:3: kw= 'var'
                    {
                    kw=(Token)match(input,98,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_VarOrConstKeyAccess().getVarKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:3984:3: kw= 'const'
                    {
                    kw=(Token)match(input,99,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_VarOrConstKeyAccess().getConstKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMyDsl.g:3990:3: kw= 'let'
                    {
                    kw=(Token)match(input,100,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_VarOrConstKeyAccess().getLetKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalMyDsl.g:3996:3: kw= 'arg'
                    {
                    kw=(Token)match(input,101,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_VarOrConstKeyAccess().getArgKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rule_VarOrConstKey"


    // $ANTLR start "entryRule_ReflexKey"
    // InternalMyDsl.g:4005:1: entryRule_ReflexKey returns [String current=null] : iv_rule_ReflexKey= rule_ReflexKey EOF ;
    public final String entryRule_ReflexKey() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rule_ReflexKey = null;


        try {
            // InternalMyDsl.g:4005:50: (iv_rule_ReflexKey= rule_ReflexKey EOF )
            // InternalMyDsl.g:4006:2: iv_rule_ReflexKey= rule_ReflexKey EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.get_ReflexKeyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rule_ReflexKey=rule_ReflexKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rule_ReflexKey.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRule_ReflexKey"


    // $ANTLR start "rule_ReflexKey"
    // InternalMyDsl.g:4012:1: rule_ReflexKey returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'init' | kw= 'reflex' | kw= 'aspect' ) ;
    public final AntlrDatatypeRuleToken rule_ReflexKey() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMyDsl.g:4018:2: ( (kw= 'init' | kw= 'reflex' | kw= 'aspect' ) )
            // InternalMyDsl.g:4019:2: (kw= 'init' | kw= 'reflex' | kw= 'aspect' )
            {
            // InternalMyDsl.g:4019:2: (kw= 'init' | kw= 'reflex' | kw= 'aspect' )
            int alt83=3;
            switch ( input.LA(1) ) {
            case 102:
                {
                alt83=1;
                }
                break;
            case 103:
                {
                alt83=2;
                }
                break;
            case 104:
                {
                alt83=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 83, 0, input);

                throw nvae;
            }

            switch (alt83) {
                case 1 :
                    // InternalMyDsl.g:4020:3: kw= 'init'
                    {
                    kw=(Token)match(input,102,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_ReflexKeyAccess().getInitKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:4026:3: kw= 'reflex'
                    {
                    kw=(Token)match(input,103,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_ReflexKeyAccess().getReflexKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMyDsl.g:4032:3: kw= 'aspect'
                    {
                    kw=(Token)match(input,104,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_ReflexKeyAccess().getAspectKeyword_2());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rule_ReflexKey"


    // $ANTLR start "entryRule_AssignmentKey"
    // InternalMyDsl.g:4041:1: entryRule_AssignmentKey returns [String current=null] : iv_rule_AssignmentKey= rule_AssignmentKey EOF ;
    public final String entryRule_AssignmentKey() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rule_AssignmentKey = null;


        try {
            // InternalMyDsl.g:4041:54: (iv_rule_AssignmentKey= rule_AssignmentKey EOF )
            // InternalMyDsl.g:4042:2: iv_rule_AssignmentKey= rule_AssignmentKey EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.get_AssignmentKeyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rule_AssignmentKey=rule_AssignmentKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rule_AssignmentKey.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRule_AssignmentKey"


    // $ANTLR start "rule_AssignmentKey"
    // InternalMyDsl.g:4048:1: rule_AssignmentKey returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '<-' | kw= '<<' | (kw= '>' kw= '>' ) | kw= '<<+' | (kw= '>' kw= '>-' ) | kw= '+<-' | kw= '<+' | kw= '>-' ) ;
    public final AntlrDatatypeRuleToken rule_AssignmentKey() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMyDsl.g:4054:2: ( (kw= '<-' | kw= '<<' | (kw= '>' kw= '>' ) | kw= '<<+' | (kw= '>' kw= '>-' ) | kw= '+<-' | kw= '<+' | kw= '>-' ) )
            // InternalMyDsl.g:4055:2: (kw= '<-' | kw= '<<' | (kw= '>' kw= '>' ) | kw= '<<+' | (kw= '>' kw= '>-' ) | kw= '+<-' | kw= '<+' | kw= '>-' )
            {
            // InternalMyDsl.g:4055:2: (kw= '<-' | kw= '<<' | (kw= '>' kw= '>' ) | kw= '<<+' | (kw= '>' kw= '>-' ) | kw= '+<-' | kw= '<+' | kw= '>-' )
            int alt84=8;
            alt84 = dfa84.predict(input);
            switch (alt84) {
                case 1 :
                    // InternalMyDsl.g:4056:3: kw= '<-'
                    {
                    kw=(Token)match(input,16,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_AssignmentKeyAccess().getLessThanSignHyphenMinusKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:4062:3: kw= '<<'
                    {
                    kw=(Token)match(input,105,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_AssignmentKeyAccess().getLessThanSignLessThanSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMyDsl.g:4068:3: (kw= '>' kw= '>' )
                    {
                    // InternalMyDsl.g:4068:3: (kw= '>' kw= '>' )
                    // InternalMyDsl.g:4069:4: kw= '>' kw= '>'
                    {
                    kw=(Token)match(input,106,FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.get_AssignmentKeyAccess().getGreaterThanSignKeyword_2_0());
                      			
                    }
                    kw=(Token)match(input,106,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.get_AssignmentKeyAccess().getGreaterThanSignKeyword_2_1());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalMyDsl.g:4081:3: kw= '<<+'
                    {
                    kw=(Token)match(input,107,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_AssignmentKeyAccess().getLessThanSignLessThanSignPlusSignKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalMyDsl.g:4087:3: (kw= '>' kw= '>-' )
                    {
                    // InternalMyDsl.g:4087:3: (kw= '>' kw= '>-' )
                    // InternalMyDsl.g:4088:4: kw= '>' kw= '>-'
                    {
                    kw=(Token)match(input,106,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.get_AssignmentKeyAccess().getGreaterThanSignKeyword_4_0());
                      			
                    }
                    kw=(Token)match(input,108,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.get_AssignmentKeyAccess().getGreaterThanSignHyphenMinusKeyword_4_1());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalMyDsl.g:4100:3: kw= '+<-'
                    {
                    kw=(Token)match(input,109,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_AssignmentKeyAccess().getPlusSignLessThanSignHyphenMinusKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalMyDsl.g:4106:3: kw= '<+'
                    {
                    kw=(Token)match(input,110,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_AssignmentKeyAccess().getLessThanSignPlusSignKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalMyDsl.g:4112:3: kw= '>-'
                    {
                    kw=(Token)match(input,108,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.get_AssignmentKeyAccess().getGreaterThanSignHyphenMinusKeyword_7());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rule_AssignmentKey"


    // $ANTLR start "entryRuleActionArguments"
    // InternalMyDsl.g:4121:1: entryRuleActionArguments returns [EObject current=null] : iv_ruleActionArguments= ruleActionArguments EOF ;
    public final EObject entryRuleActionArguments() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleActionArguments = null;


        try {
            // InternalMyDsl.g:4121:56: (iv_ruleActionArguments= ruleActionArguments EOF )
            // InternalMyDsl.g:4122:2: iv_ruleActionArguments= ruleActionArguments EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getActionArgumentsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleActionArguments=ruleActionArguments();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleActionArguments; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleActionArguments"


    // $ANTLR start "ruleActionArguments"
    // InternalMyDsl.g:4128:1: ruleActionArguments returns [EObject current=null] : ( ( (lv_args_0_0= ruleArgumentDefinition ) ) (otherlv_1= ',' ( (lv_args_2_0= ruleArgumentDefinition ) ) )* ) ;
    public final EObject ruleActionArguments() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_args_0_0 = null;

        EObject lv_args_2_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:4134:2: ( ( ( (lv_args_0_0= ruleArgumentDefinition ) ) (otherlv_1= ',' ( (lv_args_2_0= ruleArgumentDefinition ) ) )* ) )
            // InternalMyDsl.g:4135:2: ( ( (lv_args_0_0= ruleArgumentDefinition ) ) (otherlv_1= ',' ( (lv_args_2_0= ruleArgumentDefinition ) ) )* )
            {
            // InternalMyDsl.g:4135:2: ( ( (lv_args_0_0= ruleArgumentDefinition ) ) (otherlv_1= ',' ( (lv_args_2_0= ruleArgumentDefinition ) ) )* )
            // InternalMyDsl.g:4136:3: ( (lv_args_0_0= ruleArgumentDefinition ) ) (otherlv_1= ',' ( (lv_args_2_0= ruleArgumentDefinition ) ) )*
            {
            // InternalMyDsl.g:4136:3: ( (lv_args_0_0= ruleArgumentDefinition ) )
            // InternalMyDsl.g:4137:4: (lv_args_0_0= ruleArgumentDefinition )
            {
            // InternalMyDsl.g:4137:4: (lv_args_0_0= ruleArgumentDefinition )
            // InternalMyDsl.g:4138:5: lv_args_0_0= ruleArgumentDefinition
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getActionArgumentsAccess().getArgsArgumentDefinitionParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_48);
            lv_args_0_0=ruleArgumentDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getActionArgumentsRule());
              					}
              					add(
              						current,
              						"args",
              						lv_args_0_0,
              						"org.xtext.example.mydsl.MyDsl.ArgumentDefinition");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyDsl.g:4155:3: (otherlv_1= ',' ( (lv_args_2_0= ruleArgumentDefinition ) ) )*
            loop85:
            do {
                int alt85=2;
                int LA85_0 = input.LA(1);

                if ( (LA85_0==111) ) {
                    alt85=1;
                }


                switch (alt85) {
            	case 1 :
            	    // InternalMyDsl.g:4156:4: otherlv_1= ',' ( (lv_args_2_0= ruleArgumentDefinition ) )
            	    {
            	    otherlv_1=(Token)match(input,111,FOLLOW_36); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getActionArgumentsAccess().getCommaKeyword_1_0());
            	      			
            	    }
            	    // InternalMyDsl.g:4160:4: ( (lv_args_2_0= ruleArgumentDefinition ) )
            	    // InternalMyDsl.g:4161:5: (lv_args_2_0= ruleArgumentDefinition )
            	    {
            	    // InternalMyDsl.g:4161:5: (lv_args_2_0= ruleArgumentDefinition )
            	    // InternalMyDsl.g:4162:6: lv_args_2_0= ruleArgumentDefinition
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getActionArgumentsAccess().getArgsArgumentDefinitionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_48);
            	    lv_args_2_0=ruleArgumentDefinition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getActionArgumentsRule());
            	      						}
            	      						add(
            	      							current,
            	      							"args",
            	      							lv_args_2_0,
            	      							"org.xtext.example.mydsl.MyDsl.ArgumentDefinition");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop85;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleActionArguments"


    // $ANTLR start "entryRuleArgumentDefinition"
    // InternalMyDsl.g:4184:1: entryRuleArgumentDefinition returns [EObject current=null] : iv_ruleArgumentDefinition= ruleArgumentDefinition EOF ;
    public final EObject entryRuleArgumentDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArgumentDefinition = null;


        try {
            // InternalMyDsl.g:4184:59: (iv_ruleArgumentDefinition= ruleArgumentDefinition EOF )
            // InternalMyDsl.g:4185:2: iv_ruleArgumentDefinition= ruleArgumentDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArgumentDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArgumentDefinition=ruleArgumentDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArgumentDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArgumentDefinition"


    // $ANTLR start "ruleArgumentDefinition"
    // InternalMyDsl.g:4191:1: ruleArgumentDefinition returns [EObject current=null] : ( ( (lv_type_0_0= ruleTypeRef ) ) ( (lv_name_1_0= ruleValid_ID ) ) (otherlv_2= '<-' ( (lv_default_3_0= ruleExpression ) ) )? ) ;
    public final EObject ruleArgumentDefinition() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_type_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_default_3_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:4197:2: ( ( ( (lv_type_0_0= ruleTypeRef ) ) ( (lv_name_1_0= ruleValid_ID ) ) (otherlv_2= '<-' ( (lv_default_3_0= ruleExpression ) ) )? ) )
            // InternalMyDsl.g:4198:2: ( ( (lv_type_0_0= ruleTypeRef ) ) ( (lv_name_1_0= ruleValid_ID ) ) (otherlv_2= '<-' ( (lv_default_3_0= ruleExpression ) ) )? )
            {
            // InternalMyDsl.g:4198:2: ( ( (lv_type_0_0= ruleTypeRef ) ) ( (lv_name_1_0= ruleValid_ID ) ) (otherlv_2= '<-' ( (lv_default_3_0= ruleExpression ) ) )? )
            // InternalMyDsl.g:4199:3: ( (lv_type_0_0= ruleTypeRef ) ) ( (lv_name_1_0= ruleValid_ID ) ) (otherlv_2= '<-' ( (lv_default_3_0= ruleExpression ) ) )?
            {
            // InternalMyDsl.g:4199:3: ( (lv_type_0_0= ruleTypeRef ) )
            // InternalMyDsl.g:4200:4: (lv_type_0_0= ruleTypeRef )
            {
            // InternalMyDsl.g:4200:4: (lv_type_0_0= ruleTypeRef )
            // InternalMyDsl.g:4201:5: lv_type_0_0= ruleTypeRef
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getArgumentDefinitionAccess().getTypeTypeRefParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_15);
            lv_type_0_0=ruleTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getArgumentDefinitionRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_0_0,
              						"org.xtext.example.mydsl.MyDsl.TypeRef");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyDsl.g:4218:3: ( (lv_name_1_0= ruleValid_ID ) )
            // InternalMyDsl.g:4219:4: (lv_name_1_0= ruleValid_ID )
            {
            // InternalMyDsl.g:4219:4: (lv_name_1_0= ruleValid_ID )
            // InternalMyDsl.g:4220:5: lv_name_1_0= ruleValid_ID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getArgumentDefinitionAccess().getNameValid_IDParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_49);
            lv_name_1_0=ruleValid_ID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getArgumentDefinitionRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.xtext.example.mydsl.MyDsl.Valid_ID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyDsl.g:4237:3: (otherlv_2= '<-' ( (lv_default_3_0= ruleExpression ) ) )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==16) ) {
                alt86=1;
            }
            switch (alt86) {
                case 1 :
                    // InternalMyDsl.g:4238:4: otherlv_2= '<-' ( (lv_default_3_0= ruleExpression ) )
                    {
                    otherlv_2=(Token)match(input,16,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getArgumentDefinitionAccess().getLessThanSignHyphenMinusKeyword_2_0());
                      			
                    }
                    // InternalMyDsl.g:4242:4: ( (lv_default_3_0= ruleExpression ) )
                    // InternalMyDsl.g:4243:5: (lv_default_3_0= ruleExpression )
                    {
                    // InternalMyDsl.g:4243:5: (lv_default_3_0= ruleExpression )
                    // InternalMyDsl.g:4244:6: lv_default_3_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getArgumentDefinitionAccess().getDefaultExpressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_default_3_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getArgumentDefinitionRule());
                      						}
                      						set(
                      							current,
                      							"default",
                      							lv_default_3_0,
                      							"org.xtext.example.mydsl.MyDsl.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArgumentDefinition"


    // $ANTLR start "entryRuleFacet"
    // InternalMyDsl.g:4266:1: entryRuleFacet returns [EObject current=null] : iv_ruleFacet= ruleFacet EOF ;
    public final EObject entryRuleFacet() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFacet = null;


        try {
            // InternalMyDsl.g:4266:46: (iv_ruleFacet= ruleFacet EOF )
            // InternalMyDsl.g:4267:2: iv_ruleFacet= ruleFacet EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFacetRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFacet=ruleFacet();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFacet; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFacet"


    // $ANTLR start "ruleFacet"
    // InternalMyDsl.g:4273:1: ruleFacet returns [EObject current=null] : (this_ActionFacet_0= ruleActionFacet | this_DefinitionFacet_1= ruleDefinitionFacet | this_ClassicFacet_2= ruleClassicFacet | this_TypeFacet_3= ruleTypeFacet | this_VarFacet_4= ruleVarFacet | this_FunctionFacet_5= ruleFunctionFacet ) ;
    public final EObject ruleFacet() throws RecognitionException {
        EObject current = null;

        EObject this_ActionFacet_0 = null;

        EObject this_DefinitionFacet_1 = null;

        EObject this_ClassicFacet_2 = null;

        EObject this_TypeFacet_3 = null;

        EObject this_VarFacet_4 = null;

        EObject this_FunctionFacet_5 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:4279:2: ( (this_ActionFacet_0= ruleActionFacet | this_DefinitionFacet_1= ruleDefinitionFacet | this_ClassicFacet_2= ruleClassicFacet | this_TypeFacet_3= ruleTypeFacet | this_VarFacet_4= ruleVarFacet | this_FunctionFacet_5= ruleFunctionFacet ) )
            // InternalMyDsl.g:4280:2: (this_ActionFacet_0= ruleActionFacet | this_DefinitionFacet_1= ruleDefinitionFacet | this_ClassicFacet_2= ruleClassicFacet | this_TypeFacet_3= ruleTypeFacet | this_VarFacet_4= ruleVarFacet | this_FunctionFacet_5= ruleFunctionFacet )
            {
            // InternalMyDsl.g:4280:2: (this_ActionFacet_0= ruleActionFacet | this_DefinitionFacet_1= ruleDefinitionFacet | this_ClassicFacet_2= ruleClassicFacet | this_TypeFacet_3= ruleTypeFacet | this_VarFacet_4= ruleVarFacet | this_FunctionFacet_5= ruleFunctionFacet )
            int alt87=6;
            switch ( input.LA(1) ) {
            case 30:
            case 134:
                {
                alt87=1;
                }
                break;
            case 26:
            case 112:
                {
                alt87=2;
                }
                break;
            case RULE_ID:
            case 16:
            case 38:
            case 39:
            case 118:
            case 119:
            case 120:
            case 121:
            case 122:
            case 123:
            case 124:
            case 125:
            case 126:
            case 127:
            case 128:
            case 129:
            case 130:
            case 131:
            case 132:
            case 133:
                {
                alt87=3;
                }
                break;
            case 113:
            case 114:
            case 115:
            case 116:
            case 117:
                {
                alt87=4;
                }
                break;
            case 135:
                {
                alt87=5;
                }
                break;
            case 136:
                {
                alt87=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 87, 0, input);

                throw nvae;
            }

            switch (alt87) {
                case 1 :
                    // InternalMyDsl.g:4281:3: this_ActionFacet_0= ruleActionFacet
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFacetAccess().getActionFacetParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ActionFacet_0=ruleActionFacet();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ActionFacet_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:4290:3: this_DefinitionFacet_1= ruleDefinitionFacet
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFacetAccess().getDefinitionFacetParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DefinitionFacet_1=ruleDefinitionFacet();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DefinitionFacet_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMyDsl.g:4299:3: this_ClassicFacet_2= ruleClassicFacet
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFacetAccess().getClassicFacetParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ClassicFacet_2=ruleClassicFacet();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ClassicFacet_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalMyDsl.g:4308:3: this_TypeFacet_3= ruleTypeFacet
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFacetAccess().getTypeFacetParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeFacet_3=ruleTypeFacet();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypeFacet_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalMyDsl.g:4317:3: this_VarFacet_4= ruleVarFacet
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFacetAccess().getVarFacetParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_VarFacet_4=ruleVarFacet();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_VarFacet_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalMyDsl.g:4326:3: this_FunctionFacet_5= ruleFunctionFacet
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFacetAccess().getFunctionFacetParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_FunctionFacet_5=ruleFunctionFacet();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FunctionFacet_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFacet"


    // $ANTLR start "entryRuleFirstFacetKey"
    // InternalMyDsl.g:4338:1: entryRuleFirstFacetKey returns [String current=null] : iv_ruleFirstFacetKey= ruleFirstFacetKey EOF ;
    public final String entryRuleFirstFacetKey() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFirstFacetKey = null;


        try {
            // InternalMyDsl.g:4338:53: (iv_ruleFirstFacetKey= ruleFirstFacetKey EOF )
            // InternalMyDsl.g:4339:2: iv_ruleFirstFacetKey= ruleFirstFacetKey EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFirstFacetKeyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFirstFacetKey=ruleFirstFacetKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFirstFacetKey.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFirstFacetKey"


    // $ANTLR start "ruleFirstFacetKey"
    // InternalMyDsl.g:4345:1: ruleFirstFacetKey returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_DefinitionFacetKey_0= ruleDefinitionFacetKey | this_TypeFacetKey_1= ruleTypeFacetKey | this_SpecialFacetKey_2= ruleSpecialFacetKey | this_VarFacetKey_3= ruleVarFacetKey | this_ActionFacetKey_4= ruleActionFacetKey | this_ClassicFacetKey_5= ruleClassicFacetKey ) ;
    public final AntlrDatatypeRuleToken ruleFirstFacetKey() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        AntlrDatatypeRuleToken this_DefinitionFacetKey_0 = null;

        AntlrDatatypeRuleToken this_TypeFacetKey_1 = null;

        AntlrDatatypeRuleToken this_SpecialFacetKey_2 = null;

        AntlrDatatypeRuleToken this_VarFacetKey_3 = null;

        AntlrDatatypeRuleToken this_ActionFacetKey_4 = null;

        AntlrDatatypeRuleToken this_ClassicFacetKey_5 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:4351:2: ( (this_DefinitionFacetKey_0= ruleDefinitionFacetKey | this_TypeFacetKey_1= ruleTypeFacetKey | this_SpecialFacetKey_2= ruleSpecialFacetKey | this_VarFacetKey_3= ruleVarFacetKey | this_ActionFacetKey_4= ruleActionFacetKey | this_ClassicFacetKey_5= ruleClassicFacetKey ) )
            // InternalMyDsl.g:4352:2: (this_DefinitionFacetKey_0= ruleDefinitionFacetKey | this_TypeFacetKey_1= ruleTypeFacetKey | this_SpecialFacetKey_2= ruleSpecialFacetKey | this_VarFacetKey_3= ruleVarFacetKey | this_ActionFacetKey_4= ruleActionFacetKey | this_ClassicFacetKey_5= ruleClassicFacetKey )
            {
            // InternalMyDsl.g:4352:2: (this_DefinitionFacetKey_0= ruleDefinitionFacetKey | this_TypeFacetKey_1= ruleTypeFacetKey | this_SpecialFacetKey_2= ruleSpecialFacetKey | this_VarFacetKey_3= ruleVarFacetKey | this_ActionFacetKey_4= ruleActionFacetKey | this_ClassicFacetKey_5= ruleClassicFacetKey )
            int alt88=6;
            switch ( input.LA(1) ) {
            case 26:
            case 112:
                {
                alt88=1;
                }
                break;
            case 113:
            case 114:
            case 115:
            case 116:
            case 117:
                {
                alt88=2;
                }
                break;
            case 38:
            case 39:
            case 118:
            case 119:
            case 120:
            case 121:
            case 122:
            case 123:
            case 124:
            case 125:
            case 126:
            case 127:
            case 128:
            case 129:
            case 130:
            case 131:
            case 132:
            case 133:
                {
                alt88=3;
                }
                break;
            case 135:
                {
                alt88=4;
                }
                break;
            case 30:
            case 134:
                {
                alt88=5;
                }
                break;
            case RULE_ID:
                {
                alt88=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 88, 0, input);

                throw nvae;
            }

            switch (alt88) {
                case 1 :
                    // InternalMyDsl.g:4353:3: this_DefinitionFacetKey_0= ruleDefinitionFacetKey
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFirstFacetKeyAccess().getDefinitionFacetKeyParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DefinitionFacetKey_0=ruleDefinitionFacetKey();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_DefinitionFacetKey_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:4364:3: this_TypeFacetKey_1= ruleTypeFacetKey
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFirstFacetKeyAccess().getTypeFacetKeyParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeFacetKey_1=ruleTypeFacetKey();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_TypeFacetKey_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMyDsl.g:4375:3: this_SpecialFacetKey_2= ruleSpecialFacetKey
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFirstFacetKeyAccess().getSpecialFacetKeyParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_SpecialFacetKey_2=ruleSpecialFacetKey();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_SpecialFacetKey_2);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalMyDsl.g:4386:3: this_VarFacetKey_3= ruleVarFacetKey
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFirstFacetKeyAccess().getVarFacetKeyParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_VarFacetKey_3=ruleVarFacetKey();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_VarFacetKey_3);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalMyDsl.g:4397:3: this_ActionFacetKey_4= ruleActionFacetKey
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFirstFacetKeyAccess().getActionFacetKeyParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ActionFacetKey_4=ruleActionFacetKey();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ActionFacetKey_4);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalMyDsl.g:4408:3: this_ClassicFacetKey_5= ruleClassicFacetKey
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getFirstFacetKeyAccess().getClassicFacetKeyParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ClassicFacetKey_5=ruleClassicFacetKey();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ClassicFacetKey_5);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFirstFacetKey"


    // $ANTLR start "entryRuleClassicFacetKey"
    // InternalMyDsl.g:4422:1: entryRuleClassicFacetKey returns [String current=null] : iv_ruleClassicFacetKey= ruleClassicFacetKey EOF ;
    public final String entryRuleClassicFacetKey() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleClassicFacetKey = null;


        try {
            // InternalMyDsl.g:4422:55: (iv_ruleClassicFacetKey= ruleClassicFacetKey EOF )
            // InternalMyDsl.g:4423:2: iv_ruleClassicFacetKey= ruleClassicFacetKey EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassicFacetKeyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassicFacetKey=ruleClassicFacetKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassicFacetKey.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassicFacetKey"


    // $ANTLR start "ruleClassicFacetKey"
    // InternalMyDsl.g:4429:1: ruleClassicFacetKey returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID kw= ':' ) ;
    public final AntlrDatatypeRuleToken ruleClassicFacetKey() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;


        	enterRule();

        try {
            // InternalMyDsl.g:4435:2: ( (this_ID_0= RULE_ID kw= ':' ) )
            // InternalMyDsl.g:4436:2: (this_ID_0= RULE_ID kw= ':' )
            {
            // InternalMyDsl.g:4436:2: (this_ID_0= RULE_ID kw= ':' )
            // InternalMyDsl.g:4437:3: this_ID_0= RULE_ID kw= ':'
            {
            this_ID_0=(Token)match(input,RULE_ID,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_ID_0, grammarAccess.getClassicFacetKeyAccess().getIDTerminalRuleCall_0());
              		
            }
            kw=(Token)match(input,40,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getClassicFacetKeyAccess().getColonKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassicFacetKey"


    // $ANTLR start "entryRuleDefinitionFacetKey"
    // InternalMyDsl.g:4453:1: entryRuleDefinitionFacetKey returns [String current=null] : iv_ruleDefinitionFacetKey= ruleDefinitionFacetKey EOF ;
    public final String entryRuleDefinitionFacetKey() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDefinitionFacetKey = null;


        try {
            // InternalMyDsl.g:4453:58: (iv_ruleDefinitionFacetKey= ruleDefinitionFacetKey EOF )
            // InternalMyDsl.g:4454:2: iv_ruleDefinitionFacetKey= ruleDefinitionFacetKey EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefinitionFacetKeyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDefinitionFacetKey=ruleDefinitionFacetKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefinitionFacetKey.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDefinitionFacetKey"


    // $ANTLR start "ruleDefinitionFacetKey"
    // InternalMyDsl.g:4460:1: ruleDefinitionFacetKey returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'name:' | kw= 'returns:' ) ;
    public final AntlrDatatypeRuleToken ruleDefinitionFacetKey() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMyDsl.g:4466:2: ( (kw= 'name:' | kw= 'returns:' ) )
            // InternalMyDsl.g:4467:2: (kw= 'name:' | kw= 'returns:' )
            {
            // InternalMyDsl.g:4467:2: (kw= 'name:' | kw= 'returns:' )
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==26) ) {
                alt89=1;
            }
            else if ( (LA89_0==112) ) {
                alt89=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 89, 0, input);

                throw nvae;
            }
            switch (alt89) {
                case 1 :
                    // InternalMyDsl.g:4468:3: kw= 'name:'
                    {
                    kw=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDefinitionFacetKeyAccess().getNameKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:4474:3: kw= 'returns:'
                    {
                    kw=(Token)match(input,112,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDefinitionFacetKeyAccess().getReturnsKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDefinitionFacetKey"


    // $ANTLR start "entryRuleTypeFacetKey"
    // InternalMyDsl.g:4483:1: entryRuleTypeFacetKey returns [String current=null] : iv_ruleTypeFacetKey= ruleTypeFacetKey EOF ;
    public final String entryRuleTypeFacetKey() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTypeFacetKey = null;


        try {
            // InternalMyDsl.g:4483:52: (iv_ruleTypeFacetKey= ruleTypeFacetKey EOF )
            // InternalMyDsl.g:4484:2: iv_ruleTypeFacetKey= ruleTypeFacetKey EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeFacetKeyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeFacetKey=ruleTypeFacetKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeFacetKey.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeFacetKey"


    // $ANTLR start "ruleTypeFacetKey"
    // InternalMyDsl.g:4490:1: ruleTypeFacetKey returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'as:' | kw= 'of:' | kw= 'parent:' | kw= 'species:' | kw= 'type:' ) ;
    public final AntlrDatatypeRuleToken ruleTypeFacetKey() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMyDsl.g:4496:2: ( (kw= 'as:' | kw= 'of:' | kw= 'parent:' | kw= 'species:' | kw= 'type:' ) )
            // InternalMyDsl.g:4497:2: (kw= 'as:' | kw= 'of:' | kw= 'parent:' | kw= 'species:' | kw= 'type:' )
            {
            // InternalMyDsl.g:4497:2: (kw= 'as:' | kw= 'of:' | kw= 'parent:' | kw= 'species:' | kw= 'type:' )
            int alt90=5;
            switch ( input.LA(1) ) {
            case 113:
                {
                alt90=1;
                }
                break;
            case 114:
                {
                alt90=2;
                }
                break;
            case 115:
                {
                alt90=3;
                }
                break;
            case 116:
                {
                alt90=4;
                }
                break;
            case 117:
                {
                alt90=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 90, 0, input);

                throw nvae;
            }

            switch (alt90) {
                case 1 :
                    // InternalMyDsl.g:4498:3: kw= 'as:'
                    {
                    kw=(Token)match(input,113,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTypeFacetKeyAccess().getAsKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:4504:3: kw= 'of:'
                    {
                    kw=(Token)match(input,114,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTypeFacetKeyAccess().getOfKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMyDsl.g:4510:3: kw= 'parent:'
                    {
                    kw=(Token)match(input,115,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTypeFacetKeyAccess().getParentKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalMyDsl.g:4516:3: kw= 'species:'
                    {
                    kw=(Token)match(input,116,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTypeFacetKeyAccess().getSpeciesKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalMyDsl.g:4522:3: kw= 'type:'
                    {
                    kw=(Token)match(input,117,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTypeFacetKeyAccess().getTypeKeyword_4());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeFacetKey"


    // $ANTLR start "entryRuleSpecialFacetKey"
    // InternalMyDsl.g:4531:1: entryRuleSpecialFacetKey returns [String current=null] : iv_ruleSpecialFacetKey= ruleSpecialFacetKey EOF ;
    public final String entryRuleSpecialFacetKey() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleSpecialFacetKey = null;


        try {
            // InternalMyDsl.g:4531:55: (iv_ruleSpecialFacetKey= ruleSpecialFacetKey EOF )
            // InternalMyDsl.g:4532:2: iv_ruleSpecialFacetKey= ruleSpecialFacetKey EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSpecialFacetKeyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSpecialFacetKey=ruleSpecialFacetKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSpecialFacetKey.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSpecialFacetKey"


    // $ANTLR start "ruleSpecialFacetKey"
    // InternalMyDsl.g:4538:1: ruleSpecialFacetKey returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'camera:' | kw= 'data:' | (kw= 'when' kw= ':' ) | kw= 'const:' | kw= 'value:' | kw= 'topology:' | kw= 'item:' | kw= 'init:' | kw= 'message:' | kw= 'control:' | kw= 'layout:' | kw= 'environment:' | kw= 'text:' | kw= 'image:' | kw= 'using:' | kw= 'parameter:' | kw= 'aspect:' | kw= 'light:' ) ;
    public final AntlrDatatypeRuleToken ruleSpecialFacetKey() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMyDsl.g:4544:2: ( (kw= 'camera:' | kw= 'data:' | (kw= 'when' kw= ':' ) | kw= 'const:' | kw= 'value:' | kw= 'topology:' | kw= 'item:' | kw= 'init:' | kw= 'message:' | kw= 'control:' | kw= 'layout:' | kw= 'environment:' | kw= 'text:' | kw= 'image:' | kw= 'using:' | kw= 'parameter:' | kw= 'aspect:' | kw= 'light:' ) )
            // InternalMyDsl.g:4545:2: (kw= 'camera:' | kw= 'data:' | (kw= 'when' kw= ':' ) | kw= 'const:' | kw= 'value:' | kw= 'topology:' | kw= 'item:' | kw= 'init:' | kw= 'message:' | kw= 'control:' | kw= 'layout:' | kw= 'environment:' | kw= 'text:' | kw= 'image:' | kw= 'using:' | kw= 'parameter:' | kw= 'aspect:' | kw= 'light:' )
            {
            // InternalMyDsl.g:4545:2: (kw= 'camera:' | kw= 'data:' | (kw= 'when' kw= ':' ) | kw= 'const:' | kw= 'value:' | kw= 'topology:' | kw= 'item:' | kw= 'init:' | kw= 'message:' | kw= 'control:' | kw= 'layout:' | kw= 'environment:' | kw= 'text:' | kw= 'image:' | kw= 'using:' | kw= 'parameter:' | kw= 'aspect:' | kw= 'light:' )
            int alt91=18;
            switch ( input.LA(1) ) {
            case 118:
                {
                alt91=1;
                }
                break;
            case 119:
                {
                alt91=2;
                }
                break;
            case 39:
                {
                alt91=3;
                }
                break;
            case 120:
                {
                alt91=4;
                }
                break;
            case 38:
                {
                alt91=5;
                }
                break;
            case 121:
                {
                alt91=6;
                }
                break;
            case 122:
                {
                alt91=7;
                }
                break;
            case 123:
                {
                alt91=8;
                }
                break;
            case 124:
                {
                alt91=9;
                }
                break;
            case 125:
                {
                alt91=10;
                }
                break;
            case 126:
                {
                alt91=11;
                }
                break;
            case 127:
                {
                alt91=12;
                }
                break;
            case 128:
                {
                alt91=13;
                }
                break;
            case 129:
                {
                alt91=14;
                }
                break;
            case 130:
                {
                alt91=15;
                }
                break;
            case 131:
                {
                alt91=16;
                }
                break;
            case 132:
                {
                alt91=17;
                }
                break;
            case 133:
                {
                alt91=18;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 91, 0, input);

                throw nvae;
            }

            switch (alt91) {
                case 1 :
                    // InternalMyDsl.g:4546:3: kw= 'camera:'
                    {
                    kw=(Token)match(input,118,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getSpecialFacetKeyAccess().getCameraKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:4552:3: kw= 'data:'
                    {
                    kw=(Token)match(input,119,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getSpecialFacetKeyAccess().getDataKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMyDsl.g:4558:3: (kw= 'when' kw= ':' )
                    {
                    // InternalMyDsl.g:4558:3: (kw= 'when' kw= ':' )
                    // InternalMyDsl.g:4559:4: kw= 'when' kw= ':'
                    {
                    kw=(Token)match(input,39,FOLLOW_34); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getSpecialFacetKeyAccess().getWhenKeyword_2_0());
                      			
                    }
                    kw=(Token)match(input,40,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getSpecialFacetKeyAccess().getColonKeyword_2_1());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalMyDsl.g:4571:3: kw= 'const:'
                    {
                    kw=(Token)match(input,120,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getSpecialFacetKeyAccess().getConstKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalMyDsl.g:4577:3: kw= 'value:'
                    {
                    kw=(Token)match(input,38,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getSpecialFacetKeyAccess().getValueKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalMyDsl.g:4583:3: kw= 'topology:'
                    {
                    kw=(Token)match(input,121,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getSpecialFacetKeyAccess().getTopologyKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalMyDsl.g:4589:3: kw= 'item:'
                    {
                    kw=(Token)match(input,122,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getSpecialFacetKeyAccess().getItemKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalMyDsl.g:4595:3: kw= 'init:'
                    {
                    kw=(Token)match(input,123,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getSpecialFacetKeyAccess().getInitKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalMyDsl.g:4601:3: kw= 'message:'
                    {
                    kw=(Token)match(input,124,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getSpecialFacetKeyAccess().getMessageKeyword_8());
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalMyDsl.g:4607:3: kw= 'control:'
                    {
                    kw=(Token)match(input,125,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getSpecialFacetKeyAccess().getControlKeyword_9());
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalMyDsl.g:4613:3: kw= 'layout:'
                    {
                    kw=(Token)match(input,126,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getSpecialFacetKeyAccess().getLayoutKeyword_10());
                      		
                    }

                    }
                    break;
                case 12 :
                    // InternalMyDsl.g:4619:3: kw= 'environment:'
                    {
                    kw=(Token)match(input,127,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getSpecialFacetKeyAccess().getEnvironmentKeyword_11());
                      		
                    }

                    }
                    break;
                case 13 :
                    // InternalMyDsl.g:4625:3: kw= 'text:'
                    {
                    kw=(Token)match(input,128,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getSpecialFacetKeyAccess().getTextKeyword_12());
                      		
                    }

                    }
                    break;
                case 14 :
                    // InternalMyDsl.g:4631:3: kw= 'image:'
                    {
                    kw=(Token)match(input,129,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getSpecialFacetKeyAccess().getImageKeyword_13());
                      		
                    }

                    }
                    break;
                case 15 :
                    // InternalMyDsl.g:4637:3: kw= 'using:'
                    {
                    kw=(Token)match(input,130,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getSpecialFacetKeyAccess().getUsingKeyword_14());
                      		
                    }

                    }
                    break;
                case 16 :
                    // InternalMyDsl.g:4643:3: kw= 'parameter:'
                    {
                    kw=(Token)match(input,131,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getSpecialFacetKeyAccess().getParameterKeyword_15());
                      		
                    }

                    }
                    break;
                case 17 :
                    // InternalMyDsl.g:4649:3: kw= 'aspect:'
                    {
                    kw=(Token)match(input,132,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getSpecialFacetKeyAccess().getAspectKeyword_16());
                      		
                    }

                    }
                    break;
                case 18 :
                    // InternalMyDsl.g:4655:3: kw= 'light:'
                    {
                    kw=(Token)match(input,133,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getSpecialFacetKeyAccess().getLightKeyword_17());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSpecialFacetKey"


    // $ANTLR start "entryRuleActionFacetKey"
    // InternalMyDsl.g:4664:1: entryRuleActionFacetKey returns [String current=null] : iv_ruleActionFacetKey= ruleActionFacetKey EOF ;
    public final String entryRuleActionFacetKey() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleActionFacetKey = null;


        try {
            // InternalMyDsl.g:4664:54: (iv_ruleActionFacetKey= ruleActionFacetKey EOF )
            // InternalMyDsl.g:4665:2: iv_ruleActionFacetKey= ruleActionFacetKey EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getActionFacetKeyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleActionFacetKey=ruleActionFacetKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleActionFacetKey.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleActionFacetKey"


    // $ANTLR start "ruleActionFacetKey"
    // InternalMyDsl.g:4671:1: ruleActionFacetKey returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'action:' | kw= 'on_change:' ) ;
    public final AntlrDatatypeRuleToken ruleActionFacetKey() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMyDsl.g:4677:2: ( (kw= 'action:' | kw= 'on_change:' ) )
            // InternalMyDsl.g:4678:2: (kw= 'action:' | kw= 'on_change:' )
            {
            // InternalMyDsl.g:4678:2: (kw= 'action:' | kw= 'on_change:' )
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==30) ) {
                alt92=1;
            }
            else if ( (LA92_0==134) ) {
                alt92=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 92, 0, input);

                throw nvae;
            }
            switch (alt92) {
                case 1 :
                    // InternalMyDsl.g:4679:3: kw= 'action:'
                    {
                    kw=(Token)match(input,30,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getActionFacetKeyAccess().getActionKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:4685:3: kw= 'on_change:'
                    {
                    kw=(Token)match(input,134,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getActionFacetKeyAccess().getOn_changeKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleActionFacetKey"


    // $ANTLR start "entryRuleVarFacetKey"
    // InternalMyDsl.g:4694:1: entryRuleVarFacetKey returns [String current=null] : iv_ruleVarFacetKey= ruleVarFacetKey EOF ;
    public final String entryRuleVarFacetKey() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleVarFacetKey = null;


        try {
            // InternalMyDsl.g:4694:51: (iv_ruleVarFacetKey= ruleVarFacetKey EOF )
            // InternalMyDsl.g:4695:2: iv_ruleVarFacetKey= ruleVarFacetKey EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVarFacetKeyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVarFacetKey=ruleVarFacetKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVarFacetKey.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVarFacetKey"


    // $ANTLR start "ruleVarFacetKey"
    // InternalMyDsl.g:4701:1: ruleVarFacetKey returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : kw= 'var:' ;
    public final AntlrDatatypeRuleToken ruleVarFacetKey() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalMyDsl.g:4707:2: (kw= 'var:' )
            // InternalMyDsl.g:4708:2: kw= 'var:'
            {
            kw=(Token)match(input,135,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current.merge(kw);
              		newLeafNode(kw, grammarAccess.getVarFacetKeyAccess().getVarKeyword());
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVarFacetKey"


    // $ANTLR start "entryRuleClassicFacet"
    // InternalMyDsl.g:4716:1: entryRuleClassicFacet returns [EObject current=null] : iv_ruleClassicFacet= ruleClassicFacet EOF ;
    public final EObject entryRuleClassicFacet() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassicFacet = null;


        try {
            // InternalMyDsl.g:4716:53: (iv_ruleClassicFacet= ruleClassicFacet EOF )
            // InternalMyDsl.g:4717:2: iv_ruleClassicFacet= ruleClassicFacet EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassicFacetRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassicFacet=ruleClassicFacet();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassicFacet; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassicFacet"


    // $ANTLR start "ruleClassicFacet"
    // InternalMyDsl.g:4723:1: ruleClassicFacet returns [EObject current=null] : ( ( ( (lv_key_0_0= ruleClassicFacetKey ) ) | ( (lv_key_1_0= '<-' ) ) | ( (lv_key_2_0= ruleSpecialFacetKey ) ) ) ( (lv_expr_3_0= ruleExpression ) ) ) ;
    public final EObject ruleClassicFacet() throws RecognitionException {
        EObject current = null;

        Token lv_key_1_0=null;
        AntlrDatatypeRuleToken lv_key_0_0 = null;

        AntlrDatatypeRuleToken lv_key_2_0 = null;

        EObject lv_expr_3_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:4729:2: ( ( ( ( (lv_key_0_0= ruleClassicFacetKey ) ) | ( (lv_key_1_0= '<-' ) ) | ( (lv_key_2_0= ruleSpecialFacetKey ) ) ) ( (lv_expr_3_0= ruleExpression ) ) ) )
            // InternalMyDsl.g:4730:2: ( ( ( (lv_key_0_0= ruleClassicFacetKey ) ) | ( (lv_key_1_0= '<-' ) ) | ( (lv_key_2_0= ruleSpecialFacetKey ) ) ) ( (lv_expr_3_0= ruleExpression ) ) )
            {
            // InternalMyDsl.g:4730:2: ( ( ( (lv_key_0_0= ruleClassicFacetKey ) ) | ( (lv_key_1_0= '<-' ) ) | ( (lv_key_2_0= ruleSpecialFacetKey ) ) ) ( (lv_expr_3_0= ruleExpression ) ) )
            // InternalMyDsl.g:4731:3: ( ( (lv_key_0_0= ruleClassicFacetKey ) ) | ( (lv_key_1_0= '<-' ) ) | ( (lv_key_2_0= ruleSpecialFacetKey ) ) ) ( (lv_expr_3_0= ruleExpression ) )
            {
            // InternalMyDsl.g:4731:3: ( ( (lv_key_0_0= ruleClassicFacetKey ) ) | ( (lv_key_1_0= '<-' ) ) | ( (lv_key_2_0= ruleSpecialFacetKey ) ) )
            int alt93=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt93=1;
                }
                break;
            case 16:
                {
                alt93=2;
                }
                break;
            case 38:
            case 39:
            case 118:
            case 119:
            case 120:
            case 121:
            case 122:
            case 123:
            case 124:
            case 125:
            case 126:
            case 127:
            case 128:
            case 129:
            case 130:
            case 131:
            case 132:
            case 133:
                {
                alt93=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 93, 0, input);

                throw nvae;
            }

            switch (alt93) {
                case 1 :
                    // InternalMyDsl.g:4732:4: ( (lv_key_0_0= ruleClassicFacetKey ) )
                    {
                    // InternalMyDsl.g:4732:4: ( (lv_key_0_0= ruleClassicFacetKey ) )
                    // InternalMyDsl.g:4733:5: (lv_key_0_0= ruleClassicFacetKey )
                    {
                    // InternalMyDsl.g:4733:5: (lv_key_0_0= ruleClassicFacetKey )
                    // InternalMyDsl.g:4734:6: lv_key_0_0= ruleClassicFacetKey
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassicFacetAccess().getKeyClassicFacetKeyParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_5);
                    lv_key_0_0=ruleClassicFacetKey();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassicFacetRule());
                      						}
                      						set(
                      							current,
                      							"key",
                      							lv_key_0_0,
                      							"org.xtext.example.mydsl.MyDsl.ClassicFacetKey");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:4752:4: ( (lv_key_1_0= '<-' ) )
                    {
                    // InternalMyDsl.g:4752:4: ( (lv_key_1_0= '<-' ) )
                    // InternalMyDsl.g:4753:5: (lv_key_1_0= '<-' )
                    {
                    // InternalMyDsl.g:4753:5: (lv_key_1_0= '<-' )
                    // InternalMyDsl.g:4754:6: lv_key_1_0= '<-'
                    {
                    lv_key_1_0=(Token)match(input,16,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_key_1_0, grammarAccess.getClassicFacetAccess().getKeyLessThanSignHyphenMinusKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getClassicFacetRule());
                      						}
                      						setWithLastConsumed(current, "key", lv_key_1_0, "<-");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalMyDsl.g:4767:4: ( (lv_key_2_0= ruleSpecialFacetKey ) )
                    {
                    // InternalMyDsl.g:4767:4: ( (lv_key_2_0= ruleSpecialFacetKey ) )
                    // InternalMyDsl.g:4768:5: (lv_key_2_0= ruleSpecialFacetKey )
                    {
                    // InternalMyDsl.g:4768:5: (lv_key_2_0= ruleSpecialFacetKey )
                    // InternalMyDsl.g:4769:6: lv_key_2_0= ruleSpecialFacetKey
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassicFacetAccess().getKeySpecialFacetKeyParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_5);
                    lv_key_2_0=ruleSpecialFacetKey();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassicFacetRule());
                      						}
                      						set(
                      							current,
                      							"key",
                      							lv_key_2_0,
                      							"org.xtext.example.mydsl.MyDsl.SpecialFacetKey");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalMyDsl.g:4787:3: ( (lv_expr_3_0= ruleExpression ) )
            // InternalMyDsl.g:4788:4: (lv_expr_3_0= ruleExpression )
            {
            // InternalMyDsl.g:4788:4: (lv_expr_3_0= ruleExpression )
            // InternalMyDsl.g:4789:5: lv_expr_3_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getClassicFacetAccess().getExprExpressionParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expr_3_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getClassicFacetRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_3_0,
              						"org.xtext.example.mydsl.MyDsl.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassicFacet"


    // $ANTLR start "entryRuleDefinitionFacet"
    // InternalMyDsl.g:4810:1: entryRuleDefinitionFacet returns [EObject current=null] : iv_ruleDefinitionFacet= ruleDefinitionFacet EOF ;
    public final EObject entryRuleDefinitionFacet() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDefinitionFacet = null;


        try {
            // InternalMyDsl.g:4810:56: (iv_ruleDefinitionFacet= ruleDefinitionFacet EOF )
            // InternalMyDsl.g:4811:2: iv_ruleDefinitionFacet= ruleDefinitionFacet EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefinitionFacetRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDefinitionFacet=ruleDefinitionFacet();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefinitionFacet; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDefinitionFacet"


    // $ANTLR start "ruleDefinitionFacet"
    // InternalMyDsl.g:4817:1: ruleDefinitionFacet returns [EObject current=null] : ( ( ( 'name:' | 'returns:' )=> (lv_key_0_0= ruleDefinitionFacetKey ) ) ( ( (lv_name_1_1= ruleValid_ID | lv_name_1_2= RULE_STRING ) ) ) ) ;
    public final EObject ruleDefinitionFacet() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_2=null;
        AntlrDatatypeRuleToken lv_key_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_1 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:4823:2: ( ( ( ( 'name:' | 'returns:' )=> (lv_key_0_0= ruleDefinitionFacetKey ) ) ( ( (lv_name_1_1= ruleValid_ID | lv_name_1_2= RULE_STRING ) ) ) ) )
            // InternalMyDsl.g:4824:2: ( ( ( 'name:' | 'returns:' )=> (lv_key_0_0= ruleDefinitionFacetKey ) ) ( ( (lv_name_1_1= ruleValid_ID | lv_name_1_2= RULE_STRING ) ) ) )
            {
            // InternalMyDsl.g:4824:2: ( ( ( 'name:' | 'returns:' )=> (lv_key_0_0= ruleDefinitionFacetKey ) ) ( ( (lv_name_1_1= ruleValid_ID | lv_name_1_2= RULE_STRING ) ) ) )
            // InternalMyDsl.g:4825:3: ( ( 'name:' | 'returns:' )=> (lv_key_0_0= ruleDefinitionFacetKey ) ) ( ( (lv_name_1_1= ruleValid_ID | lv_name_1_2= RULE_STRING ) ) )
            {
            // InternalMyDsl.g:4825:3: ( ( 'name:' | 'returns:' )=> (lv_key_0_0= ruleDefinitionFacetKey ) )
            // InternalMyDsl.g:4826:4: ( 'name:' | 'returns:' )=> (lv_key_0_0= ruleDefinitionFacetKey )
            {
            // InternalMyDsl.g:4827:4: (lv_key_0_0= ruleDefinitionFacetKey )
            // InternalMyDsl.g:4828:5: lv_key_0_0= ruleDefinitionFacetKey
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionFacetAccess().getKeyDefinitionFacetKeyParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_20);
            lv_key_0_0=ruleDefinitionFacetKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionFacetRule());
              					}
              					set(
              						current,
              						"key",
              						lv_key_0_0,
              						"org.xtext.example.mydsl.MyDsl.DefinitionFacetKey");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyDsl.g:4845:3: ( ( (lv_name_1_1= ruleValid_ID | lv_name_1_2= RULE_STRING ) ) )
            // InternalMyDsl.g:4846:4: ( (lv_name_1_1= ruleValid_ID | lv_name_1_2= RULE_STRING ) )
            {
            // InternalMyDsl.g:4846:4: ( (lv_name_1_1= ruleValid_ID | lv_name_1_2= RULE_STRING ) )
            // InternalMyDsl.g:4847:5: (lv_name_1_1= ruleValid_ID | lv_name_1_2= RULE_STRING )
            {
            // InternalMyDsl.g:4847:5: (lv_name_1_1= ruleValid_ID | lv_name_1_2= RULE_STRING )
            int alt94=2;
            int LA94_0 = input.LA(1);

            if ( (LA94_0==RULE_ID||LA94_0==50||(LA94_0>=52 && LA94_0<=104)) ) {
                alt94=1;
            }
            else if ( (LA94_0==RULE_STRING) ) {
                alt94=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 94, 0, input);

                throw nvae;
            }
            switch (alt94) {
                case 1 :
                    // InternalMyDsl.g:4848:6: lv_name_1_1= ruleValid_ID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDefinitionFacetAccess().getNameValid_IDParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_1_1=ruleValid_ID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDefinitionFacetRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_1_1,
                      							"org.xtext.example.mydsl.MyDsl.Valid_ID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:4864:6: lv_name_1_2= RULE_STRING
                    {
                    lv_name_1_2=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_1_2, grammarAccess.getDefinitionFacetAccess().getNameSTRINGTerminalRuleCall_1_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDefinitionFacetRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_1_2,
                      							"org.xtext.example.mydsl.MyDsl.STRING");
                      					
                    }

                    }
                    break;

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDefinitionFacet"


    // $ANTLR start "entryRuleFunctionFacet"
    // InternalMyDsl.g:4885:1: entryRuleFunctionFacet returns [EObject current=null] : iv_ruleFunctionFacet= ruleFunctionFacet EOF ;
    public final EObject entryRuleFunctionFacet() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionFacet = null;


        try {
            // InternalMyDsl.g:4885:54: (iv_ruleFunctionFacet= ruleFunctionFacet EOF )
            // InternalMyDsl.g:4886:2: iv_ruleFunctionFacet= ruleFunctionFacet EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionFacetRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionFacet=ruleFunctionFacet();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionFacet; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionFacet"


    // $ANTLR start "ruleFunctionFacet"
    // InternalMyDsl.g:4892:1: ruleFunctionFacet returns [EObject current=null] : ( ( (lv_key_0_0= '->' ) ) ( ( ( ( ( ruleExpression ) ) )=> ( (lv_expr_1_0= ruleExpression ) ) ) | (otherlv_2= '{' ( (lv_expr_3_0= ruleExpression ) ) otherlv_4= '}' ) ) ) ;
    public final EObject ruleFunctionFacet() throws RecognitionException {
        EObject current = null;

        Token lv_key_0_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_expr_1_0 = null;

        EObject lv_expr_3_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:4898:2: ( ( ( (lv_key_0_0= '->' ) ) ( ( ( ( ( ruleExpression ) ) )=> ( (lv_expr_1_0= ruleExpression ) ) ) | (otherlv_2= '{' ( (lv_expr_3_0= ruleExpression ) ) otherlv_4= '}' ) ) ) )
            // InternalMyDsl.g:4899:2: ( ( (lv_key_0_0= '->' ) ) ( ( ( ( ( ruleExpression ) ) )=> ( (lv_expr_1_0= ruleExpression ) ) ) | (otherlv_2= '{' ( (lv_expr_3_0= ruleExpression ) ) otherlv_4= '}' ) ) )
            {
            // InternalMyDsl.g:4899:2: ( ( (lv_key_0_0= '->' ) ) ( ( ( ( ( ruleExpression ) ) )=> ( (lv_expr_1_0= ruleExpression ) ) ) | (otherlv_2= '{' ( (lv_expr_3_0= ruleExpression ) ) otherlv_4= '}' ) ) )
            // InternalMyDsl.g:4900:3: ( (lv_key_0_0= '->' ) ) ( ( ( ( ( ruleExpression ) ) )=> ( (lv_expr_1_0= ruleExpression ) ) ) | (otherlv_2= '{' ( (lv_expr_3_0= ruleExpression ) ) otherlv_4= '}' ) )
            {
            // InternalMyDsl.g:4900:3: ( (lv_key_0_0= '->' ) )
            // InternalMyDsl.g:4901:4: (lv_key_0_0= '->' )
            {
            // InternalMyDsl.g:4901:4: (lv_key_0_0= '->' )
            // InternalMyDsl.g:4902:5: lv_key_0_0= '->'
            {
            lv_key_0_0=(Token)match(input,136,FOLLOW_5); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_key_0_0, grammarAccess.getFunctionFacetAccess().getKeyHyphenMinusGreaterThanSignKeyword_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getFunctionFacetRule());
              					}
              					setWithLastConsumed(current, "key", lv_key_0_0, "->");
              				
            }

            }


            }

            // InternalMyDsl.g:4914:3: ( ( ( ( ( ruleExpression ) ) )=> ( (lv_expr_1_0= ruleExpression ) ) ) | (otherlv_2= '{' ( (lv_expr_3_0= ruleExpression ) ) otherlv_4= '}' ) )
            int alt95=2;
            alt95 = dfa95.predict(input);
            switch (alt95) {
                case 1 :
                    // InternalMyDsl.g:4915:4: ( ( ( ( ruleExpression ) ) )=> ( (lv_expr_1_0= ruleExpression ) ) )
                    {
                    // InternalMyDsl.g:4915:4: ( ( ( ( ruleExpression ) ) )=> ( (lv_expr_1_0= ruleExpression ) ) )
                    // InternalMyDsl.g:4916:5: ( ( ( ruleExpression ) ) )=> ( (lv_expr_1_0= ruleExpression ) )
                    {
                    // InternalMyDsl.g:4922:5: ( (lv_expr_1_0= ruleExpression ) )
                    // InternalMyDsl.g:4923:6: (lv_expr_1_0= ruleExpression )
                    {
                    // InternalMyDsl.g:4923:6: (lv_expr_1_0= ruleExpression )
                    // InternalMyDsl.g:4924:7: lv_expr_1_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFunctionFacetAccess().getExprExpressionParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_expr_1_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFunctionFacetRule());
                      							}
                      							set(
                      								current,
                      								"expr",
                      								lv_expr_1_0,
                      								"org.xtext.example.mydsl.MyDsl.Expression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:4943:4: (otherlv_2= '{' ( (lv_expr_3_0= ruleExpression ) ) otherlv_4= '}' )
                    {
                    // InternalMyDsl.g:4943:4: (otherlv_2= '{' ( (lv_expr_3_0= ruleExpression ) ) otherlv_4= '}' )
                    // InternalMyDsl.g:4944:5: otherlv_2= '{' ( (lv_expr_3_0= ruleExpression ) ) otherlv_4= '}'
                    {
                    otherlv_2=(Token)match(input,45,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getFunctionFacetAccess().getLeftCurlyBracketKeyword_1_1_0());
                      				
                    }
                    // InternalMyDsl.g:4948:5: ( (lv_expr_3_0= ruleExpression ) )
                    // InternalMyDsl.g:4949:6: (lv_expr_3_0= ruleExpression )
                    {
                    // InternalMyDsl.g:4949:6: (lv_expr_3_0= ruleExpression )
                    // InternalMyDsl.g:4950:7: lv_expr_3_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFunctionFacetAccess().getExprExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_50);
                    lv_expr_3_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFunctionFacetRule());
                      							}
                      							set(
                      								current,
                      								"expr",
                      								lv_expr_3_0,
                      								"org.xtext.example.mydsl.MyDsl.Expression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getFunctionFacetAccess().getRightCurlyBracketKeyword_1_1_2());
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionFacet"


    // $ANTLR start "entryRuleTypeFacet"
    // InternalMyDsl.g:4977:1: entryRuleTypeFacet returns [EObject current=null] : iv_ruleTypeFacet= ruleTypeFacet EOF ;
    public final EObject entryRuleTypeFacet() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeFacet = null;


        try {
            // InternalMyDsl.g:4977:50: (iv_ruleTypeFacet= ruleTypeFacet EOF )
            // InternalMyDsl.g:4978:2: iv_ruleTypeFacet= ruleTypeFacet EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeFacetRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeFacet=ruleTypeFacet();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeFacet; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeFacet"


    // $ANTLR start "ruleTypeFacet"
    // InternalMyDsl.g:4984:1: ruleTypeFacet returns [EObject current=null] : ( ( (lv_key_0_0= ruleTypeFacetKey ) ) ( ( ( 'species' | 'image' | RULE_ID )=> ( (lv_expr_1_0= ruleTypeRef ) ) ) | ( (lv_expr_2_0= ruleExpression ) ) ) ) ;
    public final EObject ruleTypeFacet() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_key_0_0 = null;

        EObject lv_expr_1_0 = null;

        EObject lv_expr_2_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:4990:2: ( ( ( (lv_key_0_0= ruleTypeFacetKey ) ) ( ( ( 'species' | 'image' | RULE_ID )=> ( (lv_expr_1_0= ruleTypeRef ) ) ) | ( (lv_expr_2_0= ruleExpression ) ) ) ) )
            // InternalMyDsl.g:4991:2: ( ( (lv_key_0_0= ruleTypeFacetKey ) ) ( ( ( 'species' | 'image' | RULE_ID )=> ( (lv_expr_1_0= ruleTypeRef ) ) ) | ( (lv_expr_2_0= ruleExpression ) ) ) )
            {
            // InternalMyDsl.g:4991:2: ( ( (lv_key_0_0= ruleTypeFacetKey ) ) ( ( ( 'species' | 'image' | RULE_ID )=> ( (lv_expr_1_0= ruleTypeRef ) ) ) | ( (lv_expr_2_0= ruleExpression ) ) ) )
            // InternalMyDsl.g:4992:3: ( (lv_key_0_0= ruleTypeFacetKey ) ) ( ( ( 'species' | 'image' | RULE_ID )=> ( (lv_expr_1_0= ruleTypeRef ) ) ) | ( (lv_expr_2_0= ruleExpression ) ) )
            {
            // InternalMyDsl.g:4992:3: ( (lv_key_0_0= ruleTypeFacetKey ) )
            // InternalMyDsl.g:4993:4: (lv_key_0_0= ruleTypeFacetKey )
            {
            // InternalMyDsl.g:4993:4: (lv_key_0_0= ruleTypeFacetKey )
            // InternalMyDsl.g:4994:5: lv_key_0_0= ruleTypeFacetKey
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeFacetAccess().getKeyTypeFacetKeyParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_5);
            lv_key_0_0=ruleTypeFacetKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeFacetRule());
              					}
              					set(
              						current,
              						"key",
              						lv_key_0_0,
              						"org.xtext.example.mydsl.MyDsl.TypeFacetKey");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyDsl.g:5011:3: ( ( ( 'species' | 'image' | RULE_ID )=> ( (lv_expr_1_0= ruleTypeRef ) ) ) | ( (lv_expr_2_0= ruleExpression ) ) )
            int alt96=2;
            alt96 = dfa96.predict(input);
            switch (alt96) {
                case 1 :
                    // InternalMyDsl.g:5012:4: ( ( 'species' | 'image' | RULE_ID )=> ( (lv_expr_1_0= ruleTypeRef ) ) )
                    {
                    // InternalMyDsl.g:5012:4: ( ( 'species' | 'image' | RULE_ID )=> ( (lv_expr_1_0= ruleTypeRef ) ) )
                    // InternalMyDsl.g:5013:5: ( 'species' | 'image' | RULE_ID )=> ( (lv_expr_1_0= ruleTypeRef ) )
                    {
                    // InternalMyDsl.g:5014:5: ( (lv_expr_1_0= ruleTypeRef ) )
                    // InternalMyDsl.g:5015:6: (lv_expr_1_0= ruleTypeRef )
                    {
                    // InternalMyDsl.g:5015:6: (lv_expr_1_0= ruleTypeRef )
                    // InternalMyDsl.g:5016:7: lv_expr_1_0= ruleTypeRef
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getTypeFacetAccess().getExprTypeRefParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_expr_1_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getTypeFacetRule());
                      							}
                      							set(
                      								current,
                      								"expr",
                      								lv_expr_1_0,
                      								"org.xtext.example.mydsl.MyDsl.TypeRef");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:5035:4: ( (lv_expr_2_0= ruleExpression ) )
                    {
                    // InternalMyDsl.g:5035:4: ( (lv_expr_2_0= ruleExpression ) )
                    // InternalMyDsl.g:5036:5: (lv_expr_2_0= ruleExpression )
                    {
                    // InternalMyDsl.g:5036:5: (lv_expr_2_0= ruleExpression )
                    // InternalMyDsl.g:5037:6: lv_expr_2_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeFacetAccess().getExprExpressionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expr_2_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeFacetRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_2_0,
                      							"org.xtext.example.mydsl.MyDsl.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeFacet"


    // $ANTLR start "entryRuleActionFacet"
    // InternalMyDsl.g:5059:1: entryRuleActionFacet returns [EObject current=null] : iv_ruleActionFacet= ruleActionFacet EOF ;
    public final EObject entryRuleActionFacet() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleActionFacet = null;


        try {
            // InternalMyDsl.g:5059:52: (iv_ruleActionFacet= ruleActionFacet EOF )
            // InternalMyDsl.g:5060:2: iv_ruleActionFacet= ruleActionFacet EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getActionFacetRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleActionFacet=ruleActionFacet();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleActionFacet; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleActionFacet"


    // $ANTLR start "ruleActionFacet"
    // InternalMyDsl.g:5066:1: ruleActionFacet returns [EObject current=null] : ( ( (lv_key_0_0= ruleActionFacetKey ) ) ( ( (lv_expr_1_0= ruleActionRef ) ) | ( (lv_block_2_0= ruleBlock ) ) ) ) ;
    public final EObject ruleActionFacet() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_key_0_0 = null;

        EObject lv_expr_1_0 = null;

        EObject lv_block_2_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:5072:2: ( ( ( (lv_key_0_0= ruleActionFacetKey ) ) ( ( (lv_expr_1_0= ruleActionRef ) ) | ( (lv_block_2_0= ruleBlock ) ) ) ) )
            // InternalMyDsl.g:5073:2: ( ( (lv_key_0_0= ruleActionFacetKey ) ) ( ( (lv_expr_1_0= ruleActionRef ) ) | ( (lv_block_2_0= ruleBlock ) ) ) )
            {
            // InternalMyDsl.g:5073:2: ( ( (lv_key_0_0= ruleActionFacetKey ) ) ( ( (lv_expr_1_0= ruleActionRef ) ) | ( (lv_block_2_0= ruleBlock ) ) ) )
            // InternalMyDsl.g:5074:3: ( (lv_key_0_0= ruleActionFacetKey ) ) ( ( (lv_expr_1_0= ruleActionRef ) ) | ( (lv_block_2_0= ruleBlock ) ) )
            {
            // InternalMyDsl.g:5074:3: ( (lv_key_0_0= ruleActionFacetKey ) )
            // InternalMyDsl.g:5075:4: (lv_key_0_0= ruleActionFacetKey )
            {
            // InternalMyDsl.g:5075:4: (lv_key_0_0= ruleActionFacetKey )
            // InternalMyDsl.g:5076:5: lv_key_0_0= ruleActionFacetKey
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getActionFacetAccess().getKeyActionFacetKeyParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_51);
            lv_key_0_0=ruleActionFacetKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getActionFacetRule());
              					}
              					set(
              						current,
              						"key",
              						lv_key_0_0,
              						"org.xtext.example.mydsl.MyDsl.ActionFacetKey");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyDsl.g:5093:3: ( ( (lv_expr_1_0= ruleActionRef ) ) | ( (lv_block_2_0= ruleBlock ) ) )
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==RULE_ID||LA97_0==50||(LA97_0>=52 && LA97_0<=104)) ) {
                alt97=1;
            }
            else if ( (LA97_0==45) ) {
                alt97=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 97, 0, input);

                throw nvae;
            }
            switch (alt97) {
                case 1 :
                    // InternalMyDsl.g:5094:4: ( (lv_expr_1_0= ruleActionRef ) )
                    {
                    // InternalMyDsl.g:5094:4: ( (lv_expr_1_0= ruleActionRef ) )
                    // InternalMyDsl.g:5095:5: (lv_expr_1_0= ruleActionRef )
                    {
                    // InternalMyDsl.g:5095:5: (lv_expr_1_0= ruleActionRef )
                    // InternalMyDsl.g:5096:6: lv_expr_1_0= ruleActionRef
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionFacetAccess().getExprActionRefParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expr_1_0=ruleActionRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionFacetRule());
                      						}
                      						set(
                      							current,
                      							"expr",
                      							lv_expr_1_0,
                      							"org.xtext.example.mydsl.MyDsl.ActionRef");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:5114:4: ( (lv_block_2_0= ruleBlock ) )
                    {
                    // InternalMyDsl.g:5114:4: ( (lv_block_2_0= ruleBlock ) )
                    // InternalMyDsl.g:5115:5: (lv_block_2_0= ruleBlock )
                    {
                    // InternalMyDsl.g:5115:5: (lv_block_2_0= ruleBlock )
                    // InternalMyDsl.g:5116:6: lv_block_2_0= ruleBlock
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionFacetAccess().getBlockBlockParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_block_2_0=ruleBlock();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionFacetRule());
                      						}
                      						set(
                      							current,
                      							"block",
                      							lv_block_2_0,
                      							"org.xtext.example.mydsl.MyDsl.Block");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleActionFacet"


    // $ANTLR start "entryRuleVarFacet"
    // InternalMyDsl.g:5138:1: entryRuleVarFacet returns [EObject current=null] : iv_ruleVarFacet= ruleVarFacet EOF ;
    public final EObject entryRuleVarFacet() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVarFacet = null;


        try {
            // InternalMyDsl.g:5138:49: (iv_ruleVarFacet= ruleVarFacet EOF )
            // InternalMyDsl.g:5139:2: iv_ruleVarFacet= ruleVarFacet EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVarFacetRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVarFacet=ruleVarFacet();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVarFacet; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVarFacet"


    // $ANTLR start "ruleVarFacet"
    // InternalMyDsl.g:5145:1: ruleVarFacet returns [EObject current=null] : ( ( (lv_key_0_0= ruleVarFacetKey ) ) ( (lv_expr_1_0= ruleVariableRef ) ) ) ;
    public final EObject ruleVarFacet() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_key_0_0 = null;

        EObject lv_expr_1_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:5151:2: ( ( ( (lv_key_0_0= ruleVarFacetKey ) ) ( (lv_expr_1_0= ruleVariableRef ) ) ) )
            // InternalMyDsl.g:5152:2: ( ( (lv_key_0_0= ruleVarFacetKey ) ) ( (lv_expr_1_0= ruleVariableRef ) ) )
            {
            // InternalMyDsl.g:5152:2: ( ( (lv_key_0_0= ruleVarFacetKey ) ) ( (lv_expr_1_0= ruleVariableRef ) ) )
            // InternalMyDsl.g:5153:3: ( (lv_key_0_0= ruleVarFacetKey ) ) ( (lv_expr_1_0= ruleVariableRef ) )
            {
            // InternalMyDsl.g:5153:3: ( (lv_key_0_0= ruleVarFacetKey ) )
            // InternalMyDsl.g:5154:4: (lv_key_0_0= ruleVarFacetKey )
            {
            // InternalMyDsl.g:5154:4: (lv_key_0_0= ruleVarFacetKey )
            // InternalMyDsl.g:5155:5: lv_key_0_0= ruleVarFacetKey
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVarFacetAccess().getKeyVarFacetKeyParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_15);
            lv_key_0_0=ruleVarFacetKey();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVarFacetRule());
              					}
              					set(
              						current,
              						"key",
              						lv_key_0_0,
              						"org.xtext.example.mydsl.MyDsl.VarFacetKey");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyDsl.g:5172:3: ( (lv_expr_1_0= ruleVariableRef ) )
            // InternalMyDsl.g:5173:4: (lv_expr_1_0= ruleVariableRef )
            {
            // InternalMyDsl.g:5173:4: (lv_expr_1_0= ruleVariableRef )
            // InternalMyDsl.g:5174:5: lv_expr_1_0= ruleVariableRef
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVarFacetAccess().getExprVariableRefParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_expr_1_0=ruleVariableRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVarFacetRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_1_0,
              						"org.xtext.example.mydsl.MyDsl.VariableRef");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVarFacet"


    // $ANTLR start "entryRuleBlock"
    // InternalMyDsl.g:5195:1: entryRuleBlock returns [EObject current=null] : iv_ruleBlock= ruleBlock EOF ;
    public final EObject entryRuleBlock() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBlock = null;


        try {
            // InternalMyDsl.g:5195:46: (iv_ruleBlock= ruleBlock EOF )
            // InternalMyDsl.g:5196:2: iv_ruleBlock= ruleBlock EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBlock=ruleBlock();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBlock; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBlock"


    // $ANTLR start "ruleBlock"
    // InternalMyDsl.g:5202:1: ruleBlock returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_statements_2_0= ruleStatement ) )* otherlv_3= '}' ) ) ;
    public final EObject ruleBlock() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_statements_2_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:5208:2: ( ( () otherlv_1= '{' ( ( (lv_statements_2_0= ruleStatement ) )* otherlv_3= '}' ) ) )
            // InternalMyDsl.g:5209:2: ( () otherlv_1= '{' ( ( (lv_statements_2_0= ruleStatement ) )* otherlv_3= '}' ) )
            {
            // InternalMyDsl.g:5209:2: ( () otherlv_1= '{' ( ( (lv_statements_2_0= ruleStatement ) )* otherlv_3= '}' ) )
            // InternalMyDsl.g:5210:3: () otherlv_1= '{' ( ( (lv_statements_2_0= ruleStatement ) )* otherlv_3= '}' )
            {
            // InternalMyDsl.g:5210:3: ()
            // InternalMyDsl.g:5211:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getBlockAccess().getBlockAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,45,FOLLOW_45); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalMyDsl.g:5221:3: ( ( (lv_statements_2_0= ruleStatement ) )* otherlv_3= '}' )
            // InternalMyDsl.g:5222:4: ( (lv_statements_2_0= ruleStatement ) )* otherlv_3= '}'
            {
            // InternalMyDsl.g:5222:4: ( (lv_statements_2_0= ruleStatement ) )*
            loop98:
            do {
                int alt98=2;
                int LA98_0 = input.LA(1);

                if ( ((LA98_0>=RULE_ID && LA98_0<=RULE_KEYWORD)||LA98_0==20||LA98_0==24||LA98_0==26||(LA98_0>=30 && LA98_0<=32)||LA98_0==35||(LA98_0>=37 && LA98_0<=39)||LA98_0==41||(LA98_0>=43 && LA98_0<=45)||(LA98_0>=49 && LA98_0<=104)||(LA98_0>=112 && LA98_0<=135)||LA98_0==146||(LA98_0>=150 && LA98_0<=154)) ) {
                    alt98=1;
                }


                switch (alt98) {
            	case 1 :
            	    // InternalMyDsl.g:5223:5: (lv_statements_2_0= ruleStatement )
            	    {
            	    // InternalMyDsl.g:5223:5: (lv_statements_2_0= ruleStatement )
            	    // InternalMyDsl.g:5224:6: lv_statements_2_0= ruleStatement
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getBlockAccess().getStatementsStatementParserRuleCall_2_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_45);
            	    lv_statements_2_0=ruleStatement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getBlockRule());
            	      						}
            	      						add(
            	      							current,
            	      							"statements",
            	      							lv_statements_2_0,
            	      							"org.xtext.example.mydsl.MyDsl.Statement");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop98;
                }
            } while (true);

            otherlv_3=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_3, grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_2_1());
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBlock"


    // $ANTLR start "entryRuleExpression"
    // InternalMyDsl.g:5250:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            // InternalMyDsl.g:5250:51: (iv_ruleExpression= ruleExpression EOF )
            // InternalMyDsl.g:5251:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalMyDsl.g:5257:1: ruleExpression returns [EObject current=null] : ( ( ( ( ( ( ( ruleValid_ID ) ) '::' ) | ( ( ( ( ruleDefinitionFacetKey | ruleTypeFacetKey | ruleSpecialFacetKey | ruleActionFacetKey | ruleVarFacetKey ) ) ) ':' ) ) )=>this_ArgumentPair_0= ruleArgumentPair ) | this_Pair_1= rulePair ) ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ArgumentPair_0 = null;

        EObject this_Pair_1 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:5263:2: ( ( ( ( ( ( ( ( ruleValid_ID ) ) '::' ) | ( ( ( ( ruleDefinitionFacetKey | ruleTypeFacetKey | ruleSpecialFacetKey | ruleActionFacetKey | ruleVarFacetKey ) ) ) ':' ) ) )=>this_ArgumentPair_0= ruleArgumentPair ) | this_Pair_1= rulePair ) )
            // InternalMyDsl.g:5264:2: ( ( ( ( ( ( ( ruleValid_ID ) ) '::' ) | ( ( ( ( ruleDefinitionFacetKey | ruleTypeFacetKey | ruleSpecialFacetKey | ruleActionFacetKey | ruleVarFacetKey ) ) ) ':' ) ) )=>this_ArgumentPair_0= ruleArgumentPair ) | this_Pair_1= rulePair )
            {
            // InternalMyDsl.g:5264:2: ( ( ( ( ( ( ( ruleValid_ID ) ) '::' ) | ( ( ( ( ruleDefinitionFacetKey | ruleTypeFacetKey | ruleSpecialFacetKey | ruleActionFacetKey | ruleVarFacetKey ) ) ) ':' ) ) )=>this_ArgumentPair_0= ruleArgumentPair ) | this_Pair_1= rulePair )
            int alt99=2;
            alt99 = dfa99.predict(input);
            switch (alt99) {
                case 1 :
                    // InternalMyDsl.g:5265:3: ( ( ( ( ( ( ruleValid_ID ) ) '::' ) | ( ( ( ( ruleDefinitionFacetKey | ruleTypeFacetKey | ruleSpecialFacetKey | ruleActionFacetKey | ruleVarFacetKey ) ) ) ':' ) ) )=>this_ArgumentPair_0= ruleArgumentPair )
                    {
                    // InternalMyDsl.g:5265:3: ( ( ( ( ( ( ruleValid_ID ) ) '::' ) | ( ( ( ( ruleDefinitionFacetKey | ruleTypeFacetKey | ruleSpecialFacetKey | ruleActionFacetKey | ruleVarFacetKey ) ) ) ':' ) ) )=>this_ArgumentPair_0= ruleArgumentPair )
                    // InternalMyDsl.g:5266:4: ( ( ( ( ( ruleValid_ID ) ) '::' ) | ( ( ( ( ruleDefinitionFacetKey | ruleTypeFacetKey | ruleSpecialFacetKey | ruleActionFacetKey | ruleVarFacetKey ) ) ) ':' ) ) )=>this_ArgumentPair_0= ruleArgumentPair
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getExpressionAccess().getArgumentPairParserRuleCall_0());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_ArgumentPair_0=ruleArgumentPair();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ArgumentPair_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:5302:3: this_Pair_1= rulePair
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExpressionAccess().getPairParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Pair_1=rulePair();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Pair_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleArgumentPair"
    // InternalMyDsl.g:5314:1: entryRuleArgumentPair returns [EObject current=null] : iv_ruleArgumentPair= ruleArgumentPair EOF ;
    public final EObject entryRuleArgumentPair() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleArgumentPair = null;


        try {
            // InternalMyDsl.g:5314:53: (iv_ruleArgumentPair= ruleArgumentPair EOF )
            // InternalMyDsl.g:5315:2: iv_ruleArgumentPair= ruleArgumentPair EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getArgumentPairRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleArgumentPair=ruleArgumentPair();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleArgumentPair; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleArgumentPair"


    // $ANTLR start "ruleArgumentPair"
    // InternalMyDsl.g:5321:1: ruleArgumentPair returns [EObject current=null] : ( ( ( ( ( ( ( ruleValid_ID ) ) '::' ) | ( ( ( ( ruleDefinitionFacetKey | ruleTypeFacetKey | ruleSpecialFacetKey | ruleActionFacetKey | ruleVarFacetKey ) ) ) ':' ) ) )=> ( ( ( (lv_op_0_0= ruleValid_ID ) ) otherlv_1= '::' ) | ( ( ( (lv_op_2_1= ruleDefinitionFacetKey | lv_op_2_2= ruleTypeFacetKey | lv_op_2_3= ruleSpecialFacetKey | lv_op_2_4= ruleActionFacetKey | lv_op_2_5= ruleVarFacetKey ) ) ) otherlv_3= ':' ) ) )? ( (lv_right_4_0= rulePair ) ) ) ;
    public final EObject ruleArgumentPair() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_op_0_0 = null;

        AntlrDatatypeRuleToken lv_op_2_1 = null;

        AntlrDatatypeRuleToken lv_op_2_2 = null;

        AntlrDatatypeRuleToken lv_op_2_3 = null;

        AntlrDatatypeRuleToken lv_op_2_4 = null;

        AntlrDatatypeRuleToken lv_op_2_5 = null;

        EObject lv_right_4_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:5327:2: ( ( ( ( ( ( ( ( ruleValid_ID ) ) '::' ) | ( ( ( ( ruleDefinitionFacetKey | ruleTypeFacetKey | ruleSpecialFacetKey | ruleActionFacetKey | ruleVarFacetKey ) ) ) ':' ) ) )=> ( ( ( (lv_op_0_0= ruleValid_ID ) ) otherlv_1= '::' ) | ( ( ( (lv_op_2_1= ruleDefinitionFacetKey | lv_op_2_2= ruleTypeFacetKey | lv_op_2_3= ruleSpecialFacetKey | lv_op_2_4= ruleActionFacetKey | lv_op_2_5= ruleVarFacetKey ) ) ) otherlv_3= ':' ) ) )? ( (lv_right_4_0= rulePair ) ) ) )
            // InternalMyDsl.g:5328:2: ( ( ( ( ( ( ( ruleValid_ID ) ) '::' ) | ( ( ( ( ruleDefinitionFacetKey | ruleTypeFacetKey | ruleSpecialFacetKey | ruleActionFacetKey | ruleVarFacetKey ) ) ) ':' ) ) )=> ( ( ( (lv_op_0_0= ruleValid_ID ) ) otherlv_1= '::' ) | ( ( ( (lv_op_2_1= ruleDefinitionFacetKey | lv_op_2_2= ruleTypeFacetKey | lv_op_2_3= ruleSpecialFacetKey | lv_op_2_4= ruleActionFacetKey | lv_op_2_5= ruleVarFacetKey ) ) ) otherlv_3= ':' ) ) )? ( (lv_right_4_0= rulePair ) ) )
            {
            // InternalMyDsl.g:5328:2: ( ( ( ( ( ( ( ruleValid_ID ) ) '::' ) | ( ( ( ( ruleDefinitionFacetKey | ruleTypeFacetKey | ruleSpecialFacetKey | ruleActionFacetKey | ruleVarFacetKey ) ) ) ':' ) ) )=> ( ( ( (lv_op_0_0= ruleValid_ID ) ) otherlv_1= '::' ) | ( ( ( (lv_op_2_1= ruleDefinitionFacetKey | lv_op_2_2= ruleTypeFacetKey | lv_op_2_3= ruleSpecialFacetKey | lv_op_2_4= ruleActionFacetKey | lv_op_2_5= ruleVarFacetKey ) ) ) otherlv_3= ':' ) ) )? ( (lv_right_4_0= rulePair ) ) )
            // InternalMyDsl.g:5329:3: ( ( ( ( ( ( ruleValid_ID ) ) '::' ) | ( ( ( ( ruleDefinitionFacetKey | ruleTypeFacetKey | ruleSpecialFacetKey | ruleActionFacetKey | ruleVarFacetKey ) ) ) ':' ) ) )=> ( ( ( (lv_op_0_0= ruleValid_ID ) ) otherlv_1= '::' ) | ( ( ( (lv_op_2_1= ruleDefinitionFacetKey | lv_op_2_2= ruleTypeFacetKey | lv_op_2_3= ruleSpecialFacetKey | lv_op_2_4= ruleActionFacetKey | lv_op_2_5= ruleVarFacetKey ) ) ) otherlv_3= ':' ) ) )? ( (lv_right_4_0= rulePair ) )
            {
            // InternalMyDsl.g:5329:3: ( ( ( ( ( ( ruleValid_ID ) ) '::' ) | ( ( ( ( ruleDefinitionFacetKey | ruleTypeFacetKey | ruleSpecialFacetKey | ruleActionFacetKey | ruleVarFacetKey ) ) ) ':' ) ) )=> ( ( ( (lv_op_0_0= ruleValid_ID ) ) otherlv_1= '::' ) | ( ( ( (lv_op_2_1= ruleDefinitionFacetKey | lv_op_2_2= ruleTypeFacetKey | lv_op_2_3= ruleSpecialFacetKey | lv_op_2_4= ruleActionFacetKey | lv_op_2_5= ruleVarFacetKey ) ) ) otherlv_3= ':' ) ) )?
            int alt102=2;
            alt102 = dfa102.predict(input);
            switch (alt102) {
                case 1 :
                    // InternalMyDsl.g:5330:4: ( ( ( ( ( ruleValid_ID ) ) '::' ) | ( ( ( ( ruleDefinitionFacetKey | ruleTypeFacetKey | ruleSpecialFacetKey | ruleActionFacetKey | ruleVarFacetKey ) ) ) ':' ) ) )=> ( ( ( (lv_op_0_0= ruleValid_ID ) ) otherlv_1= '::' ) | ( ( ( (lv_op_2_1= ruleDefinitionFacetKey | lv_op_2_2= ruleTypeFacetKey | lv_op_2_3= ruleSpecialFacetKey | lv_op_2_4= ruleActionFacetKey | lv_op_2_5= ruleVarFacetKey ) ) ) otherlv_3= ':' ) )
                    {
                    // InternalMyDsl.g:5356:4: ( ( ( (lv_op_0_0= ruleValid_ID ) ) otherlv_1= '::' ) | ( ( ( (lv_op_2_1= ruleDefinitionFacetKey | lv_op_2_2= ruleTypeFacetKey | lv_op_2_3= ruleSpecialFacetKey | lv_op_2_4= ruleActionFacetKey | lv_op_2_5= ruleVarFacetKey ) ) ) otherlv_3= ':' ) )
                    int alt101=2;
                    int LA101_0 = input.LA(1);

                    if ( (LA101_0==RULE_ID||LA101_0==50||(LA101_0>=52 && LA101_0<=104)) ) {
                        alt101=1;
                    }
                    else if ( (LA101_0==26||LA101_0==30||(LA101_0>=38 && LA101_0<=39)||(LA101_0>=112 && LA101_0<=135)) ) {
                        alt101=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 101, 0, input);

                        throw nvae;
                    }
                    switch (alt101) {
                        case 1 :
                            // InternalMyDsl.g:5357:5: ( ( (lv_op_0_0= ruleValid_ID ) ) otherlv_1= '::' )
                            {
                            // InternalMyDsl.g:5357:5: ( ( (lv_op_0_0= ruleValid_ID ) ) otherlv_1= '::' )
                            // InternalMyDsl.g:5358:6: ( (lv_op_0_0= ruleValid_ID ) ) otherlv_1= '::'
                            {
                            // InternalMyDsl.g:5358:6: ( (lv_op_0_0= ruleValid_ID ) )
                            // InternalMyDsl.g:5359:7: (lv_op_0_0= ruleValid_ID )
                            {
                            // InternalMyDsl.g:5359:7: (lv_op_0_0= ruleValid_ID )
                            // InternalMyDsl.g:5360:8: lv_op_0_0= ruleValid_ID
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getArgumentPairAccess().getOpValid_IDParserRuleCall_0_0_0_0_0());
                              							
                            }
                            pushFollow(FOLLOW_52);
                            lv_op_0_0=ruleValid_ID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getArgumentPairRule());
                              								}
                              								set(
                              									current,
                              									"op",
                              									lv_op_0_0,
                              									"org.xtext.example.mydsl.MyDsl.Valid_ID");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_1=(Token)match(input,137,FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_1, grammarAccess.getArgumentPairAccess().getColonColonKeyword_0_0_0_1());
                              					
                            }

                            }


                            }
                            break;
                        case 2 :
                            // InternalMyDsl.g:5383:5: ( ( ( (lv_op_2_1= ruleDefinitionFacetKey | lv_op_2_2= ruleTypeFacetKey | lv_op_2_3= ruleSpecialFacetKey | lv_op_2_4= ruleActionFacetKey | lv_op_2_5= ruleVarFacetKey ) ) ) otherlv_3= ':' )
                            {
                            // InternalMyDsl.g:5383:5: ( ( ( (lv_op_2_1= ruleDefinitionFacetKey | lv_op_2_2= ruleTypeFacetKey | lv_op_2_3= ruleSpecialFacetKey | lv_op_2_4= ruleActionFacetKey | lv_op_2_5= ruleVarFacetKey ) ) ) otherlv_3= ':' )
                            // InternalMyDsl.g:5384:6: ( ( (lv_op_2_1= ruleDefinitionFacetKey | lv_op_2_2= ruleTypeFacetKey | lv_op_2_3= ruleSpecialFacetKey | lv_op_2_4= ruleActionFacetKey | lv_op_2_5= ruleVarFacetKey ) ) ) otherlv_3= ':'
                            {
                            // InternalMyDsl.g:5384:6: ( ( (lv_op_2_1= ruleDefinitionFacetKey | lv_op_2_2= ruleTypeFacetKey | lv_op_2_3= ruleSpecialFacetKey | lv_op_2_4= ruleActionFacetKey | lv_op_2_5= ruleVarFacetKey ) ) )
                            // InternalMyDsl.g:5385:7: ( (lv_op_2_1= ruleDefinitionFacetKey | lv_op_2_2= ruleTypeFacetKey | lv_op_2_3= ruleSpecialFacetKey | lv_op_2_4= ruleActionFacetKey | lv_op_2_5= ruleVarFacetKey ) )
                            {
                            // InternalMyDsl.g:5385:7: ( (lv_op_2_1= ruleDefinitionFacetKey | lv_op_2_2= ruleTypeFacetKey | lv_op_2_3= ruleSpecialFacetKey | lv_op_2_4= ruleActionFacetKey | lv_op_2_5= ruleVarFacetKey ) )
                            // InternalMyDsl.g:5386:8: (lv_op_2_1= ruleDefinitionFacetKey | lv_op_2_2= ruleTypeFacetKey | lv_op_2_3= ruleSpecialFacetKey | lv_op_2_4= ruleActionFacetKey | lv_op_2_5= ruleVarFacetKey )
                            {
                            // InternalMyDsl.g:5386:8: (lv_op_2_1= ruleDefinitionFacetKey | lv_op_2_2= ruleTypeFacetKey | lv_op_2_3= ruleSpecialFacetKey | lv_op_2_4= ruleActionFacetKey | lv_op_2_5= ruleVarFacetKey )
                            int alt100=5;
                            switch ( input.LA(1) ) {
                            case 26:
                            case 112:
                                {
                                alt100=1;
                                }
                                break;
                            case 113:
                            case 114:
                            case 115:
                            case 116:
                            case 117:
                                {
                                alt100=2;
                                }
                                break;
                            case 38:
                            case 39:
                            case 118:
                            case 119:
                            case 120:
                            case 121:
                            case 122:
                            case 123:
                            case 124:
                            case 125:
                            case 126:
                            case 127:
                            case 128:
                            case 129:
                            case 130:
                            case 131:
                            case 132:
                            case 133:
                                {
                                alt100=3;
                                }
                                break;
                            case 30:
                            case 134:
                                {
                                alt100=4;
                                }
                                break;
                            case 135:
                                {
                                alt100=5;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 100, 0, input);

                                throw nvae;
                            }

                            switch (alt100) {
                                case 1 :
                                    // InternalMyDsl.g:5387:9: lv_op_2_1= ruleDefinitionFacetKey
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getArgumentPairAccess().getOpDefinitionFacetKeyParserRuleCall_0_0_1_0_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_34);
                                    lv_op_2_1=ruleDefinitionFacetKey();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getArgumentPairRule());
                                      									}
                                      									set(
                                      										current,
                                      										"op",
                                      										lv_op_2_1,
                                      										"org.xtext.example.mydsl.MyDsl.DefinitionFacetKey");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalMyDsl.g:5403:9: lv_op_2_2= ruleTypeFacetKey
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getArgumentPairAccess().getOpTypeFacetKeyParserRuleCall_0_0_1_0_0_1());
                                      								
                                    }
                                    pushFollow(FOLLOW_34);
                                    lv_op_2_2=ruleTypeFacetKey();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getArgumentPairRule());
                                      									}
                                      									set(
                                      										current,
                                      										"op",
                                      										lv_op_2_2,
                                      										"org.xtext.example.mydsl.MyDsl.TypeFacetKey");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalMyDsl.g:5419:9: lv_op_2_3= ruleSpecialFacetKey
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getArgumentPairAccess().getOpSpecialFacetKeyParserRuleCall_0_0_1_0_0_2());
                                      								
                                    }
                                    pushFollow(FOLLOW_34);
                                    lv_op_2_3=ruleSpecialFacetKey();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getArgumentPairRule());
                                      									}
                                      									set(
                                      										current,
                                      										"op",
                                      										lv_op_2_3,
                                      										"org.xtext.example.mydsl.MyDsl.SpecialFacetKey");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }
                                    break;
                                case 4 :
                                    // InternalMyDsl.g:5435:9: lv_op_2_4= ruleActionFacetKey
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getArgumentPairAccess().getOpActionFacetKeyParserRuleCall_0_0_1_0_0_3());
                                      								
                                    }
                                    pushFollow(FOLLOW_34);
                                    lv_op_2_4=ruleActionFacetKey();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getArgumentPairRule());
                                      									}
                                      									set(
                                      										current,
                                      										"op",
                                      										lv_op_2_4,
                                      										"org.xtext.example.mydsl.MyDsl.ActionFacetKey");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }
                                    break;
                                case 5 :
                                    // InternalMyDsl.g:5451:9: lv_op_2_5= ruleVarFacetKey
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getArgumentPairAccess().getOpVarFacetKeyParserRuleCall_0_0_1_0_0_4());
                                      								
                                    }
                                    pushFollow(FOLLOW_34);
                                    lv_op_2_5=ruleVarFacetKey();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getArgumentPairRule());
                                      									}
                                      									set(
                                      										current,
                                      										"op",
                                      										lv_op_2_5,
                                      										"org.xtext.example.mydsl.MyDsl.VarFacetKey");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            otherlv_3=(Token)match(input,40,FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_3, grammarAccess.getArgumentPairAccess().getColonKeyword_0_0_1_1());
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalMyDsl.g:5476:3: ( (lv_right_4_0= rulePair ) )
            // InternalMyDsl.g:5477:4: (lv_right_4_0= rulePair )
            {
            // InternalMyDsl.g:5477:4: (lv_right_4_0= rulePair )
            // InternalMyDsl.g:5478:5: lv_right_4_0= rulePair
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getArgumentPairAccess().getRightPairParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_right_4_0=rulePair();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getArgumentPairRule());
              					}
              					set(
              						current,
              						"right",
              						lv_right_4_0,
              						"org.xtext.example.mydsl.MyDsl.Pair");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleArgumentPair"


    // $ANTLR start "entryRulePair"
    // InternalMyDsl.g:5499:1: entryRulePair returns [EObject current=null] : iv_rulePair= rulePair EOF ;
    public final EObject entryRulePair() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePair = null;


        try {
            // InternalMyDsl.g:5499:45: (iv_rulePair= rulePair EOF )
            // InternalMyDsl.g:5500:2: iv_rulePair= rulePair EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPairRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePair=rulePair();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePair; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePair"


    // $ANTLR start "rulePair"
    // InternalMyDsl.g:5506:1: rulePair returns [EObject current=null] : (this_If_0= ruleIf ( () ( (lv_op_2_0= '::' ) ) ( (lv_right_3_0= ruleIf ) ) )? ) ;
    public final EObject rulePair() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        EObject this_If_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:5512:2: ( (this_If_0= ruleIf ( () ( (lv_op_2_0= '::' ) ) ( (lv_right_3_0= ruleIf ) ) )? ) )
            // InternalMyDsl.g:5513:2: (this_If_0= ruleIf ( () ( (lv_op_2_0= '::' ) ) ( (lv_right_3_0= ruleIf ) ) )? )
            {
            // InternalMyDsl.g:5513:2: (this_If_0= ruleIf ( () ( (lv_op_2_0= '::' ) ) ( (lv_right_3_0= ruleIf ) ) )? )
            // InternalMyDsl.g:5514:3: this_If_0= ruleIf ( () ( (lv_op_2_0= '::' ) ) ( (lv_right_3_0= ruleIf ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getPairAccess().getIfParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_53);
            this_If_0=ruleIf();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_If_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMyDsl.g:5522:3: ( () ( (lv_op_2_0= '::' ) ) ( (lv_right_3_0= ruleIf ) ) )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==137) ) {
                alt103=1;
            }
            switch (alt103) {
                case 1 :
                    // InternalMyDsl.g:5523:4: () ( (lv_op_2_0= '::' ) ) ( (lv_right_3_0= ruleIf ) )
                    {
                    // InternalMyDsl.g:5523:4: ()
                    // InternalMyDsl.g:5524:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndSet(
                      						grammarAccess.getPairAccess().getBinaryOperatorLeftAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalMyDsl.g:5530:4: ( (lv_op_2_0= '::' ) )
                    // InternalMyDsl.g:5531:5: (lv_op_2_0= '::' )
                    {
                    // InternalMyDsl.g:5531:5: (lv_op_2_0= '::' )
                    // InternalMyDsl.g:5532:6: lv_op_2_0= '::'
                    {
                    lv_op_2_0=(Token)match(input,137,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_op_2_0, grammarAccess.getPairAccess().getOpColonColonKeyword_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPairRule());
                      						}
                      						setWithLastConsumed(current, "op", lv_op_2_0, "::");
                      					
                    }

                    }


                    }

                    // InternalMyDsl.g:5544:4: ( (lv_right_3_0= ruleIf ) )
                    // InternalMyDsl.g:5545:5: (lv_right_3_0= ruleIf )
                    {
                    // InternalMyDsl.g:5545:5: (lv_right_3_0= ruleIf )
                    // InternalMyDsl.g:5546:6: lv_right_3_0= ruleIf
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPairAccess().getRightIfParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_right_3_0=ruleIf();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPairRule());
                      						}
                      						set(
                      							current,
                      							"right",
                      							lv_right_3_0,
                      							"org.xtext.example.mydsl.MyDsl.If");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePair"


    // $ANTLR start "entryRuleIf"
    // InternalMyDsl.g:5568:1: entryRuleIf returns [EObject current=null] : iv_ruleIf= ruleIf EOF ;
    public final EObject entryRuleIf() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIf = null;


        try {
            // InternalMyDsl.g:5568:43: (iv_ruleIf= ruleIf EOF )
            // InternalMyDsl.g:5569:2: iv_ruleIf= ruleIf EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIfRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIf=ruleIf();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIf; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIf"


    // $ANTLR start "ruleIf"
    // InternalMyDsl.g:5575:1: ruleIf returns [EObject current=null] : (this_Or_0= ruleOr ( () ( (lv_op_2_0= '?' ) ) ( (lv_right_3_0= ruleOr ) ) (otherlv_4= ':' ( (lv_ifFalse_5_0= ruleOr ) ) ) )? ) ;
    public final EObject ruleIf() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        Token otherlv_4=null;
        EObject this_Or_0 = null;

        EObject lv_right_3_0 = null;

        EObject lv_ifFalse_5_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:5581:2: ( (this_Or_0= ruleOr ( () ( (lv_op_2_0= '?' ) ) ( (lv_right_3_0= ruleOr ) ) (otherlv_4= ':' ( (lv_ifFalse_5_0= ruleOr ) ) ) )? ) )
            // InternalMyDsl.g:5582:2: (this_Or_0= ruleOr ( () ( (lv_op_2_0= '?' ) ) ( (lv_right_3_0= ruleOr ) ) (otherlv_4= ':' ( (lv_ifFalse_5_0= ruleOr ) ) ) )? )
            {
            // InternalMyDsl.g:5582:2: (this_Or_0= ruleOr ( () ( (lv_op_2_0= '?' ) ) ( (lv_right_3_0= ruleOr ) ) (otherlv_4= ':' ( (lv_ifFalse_5_0= ruleOr ) ) ) )? )
            // InternalMyDsl.g:5583:3: this_Or_0= ruleOr ( () ( (lv_op_2_0= '?' ) ) ( (lv_right_3_0= ruleOr ) ) (otherlv_4= ':' ( (lv_ifFalse_5_0= ruleOr ) ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getIfAccess().getOrParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_54);
            this_Or_0=ruleOr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Or_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMyDsl.g:5591:3: ( () ( (lv_op_2_0= '?' ) ) ( (lv_right_3_0= ruleOr ) ) (otherlv_4= ':' ( (lv_ifFalse_5_0= ruleOr ) ) ) )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==138) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // InternalMyDsl.g:5592:4: () ( (lv_op_2_0= '?' ) ) ( (lv_right_3_0= ruleOr ) ) (otherlv_4= ':' ( (lv_ifFalse_5_0= ruleOr ) ) )
                    {
                    // InternalMyDsl.g:5592:4: ()
                    // InternalMyDsl.g:5593:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndSet(
                      						grammarAccess.getIfAccess().getIfLeftAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalMyDsl.g:5599:4: ( (lv_op_2_0= '?' ) )
                    // InternalMyDsl.g:5600:5: (lv_op_2_0= '?' )
                    {
                    // InternalMyDsl.g:5600:5: (lv_op_2_0= '?' )
                    // InternalMyDsl.g:5601:6: lv_op_2_0= '?'
                    {
                    lv_op_2_0=(Token)match(input,138,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_op_2_0, grammarAccess.getIfAccess().getOpQuestionMarkKeyword_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getIfRule());
                      						}
                      						setWithLastConsumed(current, "op", lv_op_2_0, "?");
                      					
                    }

                    }


                    }

                    // InternalMyDsl.g:5613:4: ( (lv_right_3_0= ruleOr ) )
                    // InternalMyDsl.g:5614:5: (lv_right_3_0= ruleOr )
                    {
                    // InternalMyDsl.g:5614:5: (lv_right_3_0= ruleOr )
                    // InternalMyDsl.g:5615:6: lv_right_3_0= ruleOr
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIfAccess().getRightOrParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_34);
                    lv_right_3_0=ruleOr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIfRule());
                      						}
                      						set(
                      							current,
                      							"right",
                      							lv_right_3_0,
                      							"org.xtext.example.mydsl.MyDsl.Or");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyDsl.g:5632:4: (otherlv_4= ':' ( (lv_ifFalse_5_0= ruleOr ) ) )
                    // InternalMyDsl.g:5633:5: otherlv_4= ':' ( (lv_ifFalse_5_0= ruleOr ) )
                    {
                    otherlv_4=(Token)match(input,40,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getIfAccess().getColonKeyword_1_3_0());
                      				
                    }
                    // InternalMyDsl.g:5637:5: ( (lv_ifFalse_5_0= ruleOr ) )
                    // InternalMyDsl.g:5638:6: (lv_ifFalse_5_0= ruleOr )
                    {
                    // InternalMyDsl.g:5638:6: (lv_ifFalse_5_0= ruleOr )
                    // InternalMyDsl.g:5639:7: lv_ifFalse_5_0= ruleOr
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getIfAccess().getIfFalseOrParserRuleCall_1_3_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_ifFalse_5_0=ruleOr();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getIfRule());
                      							}
                      							set(
                      								current,
                      								"ifFalse",
                      								lv_ifFalse_5_0,
                      								"org.xtext.example.mydsl.MyDsl.Or");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIf"


    // $ANTLR start "entryRuleOr"
    // InternalMyDsl.g:5662:1: entryRuleOr returns [EObject current=null] : iv_ruleOr= ruleOr EOF ;
    public final EObject entryRuleOr() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOr = null;


        try {
            // InternalMyDsl.g:5662:43: (iv_ruleOr= ruleOr EOF )
            // InternalMyDsl.g:5663:2: iv_ruleOr= ruleOr EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOrRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOr=ruleOr();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOr; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOr"


    // $ANTLR start "ruleOr"
    // InternalMyDsl.g:5669:1: ruleOr returns [EObject current=null] : (this_And_0= ruleAnd ( () ( (lv_op_2_0= 'or' ) ) ( (lv_right_3_0= ruleAnd ) ) )* ) ;
    public final EObject ruleOr() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        EObject this_And_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:5675:2: ( (this_And_0= ruleAnd ( () ( (lv_op_2_0= 'or' ) ) ( (lv_right_3_0= ruleAnd ) ) )* ) )
            // InternalMyDsl.g:5676:2: (this_And_0= ruleAnd ( () ( (lv_op_2_0= 'or' ) ) ( (lv_right_3_0= ruleAnd ) ) )* )
            {
            // InternalMyDsl.g:5676:2: (this_And_0= ruleAnd ( () ( (lv_op_2_0= 'or' ) ) ( (lv_right_3_0= ruleAnd ) ) )* )
            // InternalMyDsl.g:5677:3: this_And_0= ruleAnd ( () ( (lv_op_2_0= 'or' ) ) ( (lv_right_3_0= ruleAnd ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getOrAccess().getAndParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_55);
            this_And_0=ruleAnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_And_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMyDsl.g:5685:3: ( () ( (lv_op_2_0= 'or' ) ) ( (lv_right_3_0= ruleAnd ) ) )*
            loop105:
            do {
                int alt105=2;
                int LA105_0 = input.LA(1);

                if ( (LA105_0==139) ) {
                    alt105=1;
                }


                switch (alt105) {
            	case 1 :
            	    // InternalMyDsl.g:5686:4: () ( (lv_op_2_0= 'or' ) ) ( (lv_right_3_0= ruleAnd ) )
            	    {
            	    // InternalMyDsl.g:5686:4: ()
            	    // InternalMyDsl.g:5687:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getOrAccess().getBinaryOperatorLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalMyDsl.g:5693:4: ( (lv_op_2_0= 'or' ) )
            	    // InternalMyDsl.g:5694:5: (lv_op_2_0= 'or' )
            	    {
            	    // InternalMyDsl.g:5694:5: (lv_op_2_0= 'or' )
            	    // InternalMyDsl.g:5695:6: lv_op_2_0= 'or'
            	    {
            	    lv_op_2_0=(Token)match(input,139,FOLLOW_5); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_op_2_0, grammarAccess.getOrAccess().getOpOrKeyword_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getOrRule());
            	      						}
            	      						setWithLastConsumed(current, "op", lv_op_2_0, "or");
            	      					
            	    }

            	    }


            	    }

            	    // InternalMyDsl.g:5707:4: ( (lv_right_3_0= ruleAnd ) )
            	    // InternalMyDsl.g:5708:5: (lv_right_3_0= ruleAnd )
            	    {
            	    // InternalMyDsl.g:5708:5: (lv_right_3_0= ruleAnd )
            	    // InternalMyDsl.g:5709:6: lv_right_3_0= ruleAnd
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_55);
            	    lv_right_3_0=ruleAnd();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getOrRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"org.xtext.example.mydsl.MyDsl.And");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop105;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOr"


    // $ANTLR start "entryRuleAnd"
    // InternalMyDsl.g:5731:1: entryRuleAnd returns [EObject current=null] : iv_ruleAnd= ruleAnd EOF ;
    public final EObject entryRuleAnd() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnd = null;


        try {
            // InternalMyDsl.g:5731:44: (iv_ruleAnd= ruleAnd EOF )
            // InternalMyDsl.g:5732:2: iv_ruleAnd= ruleAnd EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAndRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnd=ruleAnd();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnd; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnd"


    // $ANTLR start "ruleAnd"
    // InternalMyDsl.g:5738:1: ruleAnd returns [EObject current=null] : (this_Cast_0= ruleCast ( () ( (lv_op_2_0= 'and' ) ) ( (lv_right_3_0= ruleCast ) ) )* ) ;
    public final EObject ruleAnd() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        EObject this_Cast_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:5744:2: ( (this_Cast_0= ruleCast ( () ( (lv_op_2_0= 'and' ) ) ( (lv_right_3_0= ruleCast ) ) )* ) )
            // InternalMyDsl.g:5745:2: (this_Cast_0= ruleCast ( () ( (lv_op_2_0= 'and' ) ) ( (lv_right_3_0= ruleCast ) ) )* )
            {
            // InternalMyDsl.g:5745:2: (this_Cast_0= ruleCast ( () ( (lv_op_2_0= 'and' ) ) ( (lv_right_3_0= ruleCast ) ) )* )
            // InternalMyDsl.g:5746:3: this_Cast_0= ruleCast ( () ( (lv_op_2_0= 'and' ) ) ( (lv_right_3_0= ruleCast ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAndAccess().getCastParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_56);
            this_Cast_0=ruleCast();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Cast_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMyDsl.g:5754:3: ( () ( (lv_op_2_0= 'and' ) ) ( (lv_right_3_0= ruleCast ) ) )*
            loop106:
            do {
                int alt106=2;
                int LA106_0 = input.LA(1);

                if ( (LA106_0==140) ) {
                    alt106=1;
                }


                switch (alt106) {
            	case 1 :
            	    // InternalMyDsl.g:5755:4: () ( (lv_op_2_0= 'and' ) ) ( (lv_right_3_0= ruleCast ) )
            	    {
            	    // InternalMyDsl.g:5755:4: ()
            	    // InternalMyDsl.g:5756:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAndAccess().getBinaryOperatorLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalMyDsl.g:5762:4: ( (lv_op_2_0= 'and' ) )
            	    // InternalMyDsl.g:5763:5: (lv_op_2_0= 'and' )
            	    {
            	    // InternalMyDsl.g:5763:5: (lv_op_2_0= 'and' )
            	    // InternalMyDsl.g:5764:6: lv_op_2_0= 'and'
            	    {
            	    lv_op_2_0=(Token)match(input,140,FOLLOW_5); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_op_2_0, grammarAccess.getAndAccess().getOpAndKeyword_1_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getAndRule());
            	      						}
            	      						setWithLastConsumed(current, "op", lv_op_2_0, "and");
            	      					
            	    }

            	    }


            	    }

            	    // InternalMyDsl.g:5776:4: ( (lv_right_3_0= ruleCast ) )
            	    // InternalMyDsl.g:5777:5: (lv_right_3_0= ruleCast )
            	    {
            	    // InternalMyDsl.g:5777:5: (lv_right_3_0= ruleCast )
            	    // InternalMyDsl.g:5778:6: lv_right_3_0= ruleCast
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAndAccess().getRightCastParserRuleCall_1_2_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_56);
            	    lv_right_3_0=ruleCast();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAndRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"org.xtext.example.mydsl.MyDsl.Cast");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop106;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnd"


    // $ANTLR start "entryRuleCast"
    // InternalMyDsl.g:5800:1: entryRuleCast returns [EObject current=null] : iv_ruleCast= ruleCast EOF ;
    public final EObject entryRuleCast() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCast = null;


        try {
            // InternalMyDsl.g:5800:45: (iv_ruleCast= ruleCast EOF )
            // InternalMyDsl.g:5801:2: iv_ruleCast= ruleCast EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCastRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCast=ruleCast();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCast; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCast"


    // $ANTLR start "ruleCast"
    // InternalMyDsl.g:5807:1: ruleCast returns [EObject current=null] : (this_Comparison_0= ruleComparison ( ( () ( (lv_op_2_0= 'as' ) ) ) ( ( (lv_right_3_0= ruleTypeRef ) ) | (otherlv_4= '(' ( (lv_right_5_0= ruleTypeRef ) ) otherlv_6= ')' ) ) )? ) ;
    public final EObject ruleCast() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject this_Comparison_0 = null;

        EObject lv_right_3_0 = null;

        EObject lv_right_5_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:5813:2: ( (this_Comparison_0= ruleComparison ( ( () ( (lv_op_2_0= 'as' ) ) ) ( ( (lv_right_3_0= ruleTypeRef ) ) | (otherlv_4= '(' ( (lv_right_5_0= ruleTypeRef ) ) otherlv_6= ')' ) ) )? ) )
            // InternalMyDsl.g:5814:2: (this_Comparison_0= ruleComparison ( ( () ( (lv_op_2_0= 'as' ) ) ) ( ( (lv_right_3_0= ruleTypeRef ) ) | (otherlv_4= '(' ( (lv_right_5_0= ruleTypeRef ) ) otherlv_6= ')' ) ) )? )
            {
            // InternalMyDsl.g:5814:2: (this_Comparison_0= ruleComparison ( ( () ( (lv_op_2_0= 'as' ) ) ) ( ( (lv_right_3_0= ruleTypeRef ) ) | (otherlv_4= '(' ( (lv_right_5_0= ruleTypeRef ) ) otherlv_6= ')' ) ) )? )
            // InternalMyDsl.g:5815:3: this_Comparison_0= ruleComparison ( ( () ( (lv_op_2_0= 'as' ) ) ) ( ( (lv_right_3_0= ruleTypeRef ) ) | (otherlv_4= '(' ( (lv_right_5_0= ruleTypeRef ) ) otherlv_6= ')' ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getCastAccess().getComparisonParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_14);
            this_Comparison_0=ruleComparison();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Comparison_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMyDsl.g:5823:3: ( ( () ( (lv_op_2_0= 'as' ) ) ) ( ( (lv_right_3_0= ruleTypeRef ) ) | (otherlv_4= '(' ( (lv_right_5_0= ruleTypeRef ) ) otherlv_6= ')' ) ) )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==22) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalMyDsl.g:5824:4: ( () ( (lv_op_2_0= 'as' ) ) ) ( ( (lv_right_3_0= ruleTypeRef ) ) | (otherlv_4= '(' ( (lv_right_5_0= ruleTypeRef ) ) otherlv_6= ')' ) )
                    {
                    // InternalMyDsl.g:5824:4: ( () ( (lv_op_2_0= 'as' ) ) )
                    // InternalMyDsl.g:5825:5: () ( (lv_op_2_0= 'as' ) )
                    {
                    // InternalMyDsl.g:5825:5: ()
                    // InternalMyDsl.g:5826:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElementAndSet(
                      							grammarAccess.getCastAccess().getBinaryOperatorLeftAction_1_0_0(),
                      							current);
                      					
                    }

                    }

                    // InternalMyDsl.g:5832:5: ( (lv_op_2_0= 'as' ) )
                    // InternalMyDsl.g:5833:6: (lv_op_2_0= 'as' )
                    {
                    // InternalMyDsl.g:5833:6: (lv_op_2_0= 'as' )
                    // InternalMyDsl.g:5834:7: lv_op_2_0= 'as'
                    {
                    lv_op_2_0=(Token)match(input,22,FOLLOW_57); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_op_2_0, grammarAccess.getCastAccess().getOpAsKeyword_1_0_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getCastRule());
                      							}
                      							setWithLastConsumed(current, "op", lv_op_2_0, "as");
                      						
                    }

                    }


                    }


                    }

                    // InternalMyDsl.g:5847:4: ( ( (lv_right_3_0= ruleTypeRef ) ) | (otherlv_4= '(' ( (lv_right_5_0= ruleTypeRef ) ) otherlv_6= ')' ) )
                    int alt107=2;
                    int LA107_0 = input.LA(1);

                    if ( (LA107_0==RULE_ID||LA107_0==52||LA107_0==54) ) {
                        alt107=1;
                    }
                    else if ( (LA107_0==41) ) {
                        alt107=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 107, 0, input);

                        throw nvae;
                    }
                    switch (alt107) {
                        case 1 :
                            // InternalMyDsl.g:5848:5: ( (lv_right_3_0= ruleTypeRef ) )
                            {
                            // InternalMyDsl.g:5848:5: ( (lv_right_3_0= ruleTypeRef ) )
                            // InternalMyDsl.g:5849:6: (lv_right_3_0= ruleTypeRef )
                            {
                            // InternalMyDsl.g:5849:6: (lv_right_3_0= ruleTypeRef )
                            // InternalMyDsl.g:5850:7: lv_right_3_0= ruleTypeRef
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getCastAccess().getRightTypeRefParserRuleCall_1_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_right_3_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getCastRule());
                              							}
                              							set(
                              								current,
                              								"right",
                              								lv_right_3_0,
                              								"org.xtext.example.mydsl.MyDsl.TypeRef");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalMyDsl.g:5868:5: (otherlv_4= '(' ( (lv_right_5_0= ruleTypeRef ) ) otherlv_6= ')' )
                            {
                            // InternalMyDsl.g:5868:5: (otherlv_4= '(' ( (lv_right_5_0= ruleTypeRef ) ) otherlv_6= ')' )
                            // InternalMyDsl.g:5869:6: otherlv_4= '(' ( (lv_right_5_0= ruleTypeRef ) ) otherlv_6= ')'
                            {
                            otherlv_4=(Token)match(input,41,FOLLOW_36); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_4, grammarAccess.getCastAccess().getLeftParenthesisKeyword_1_1_1_0());
                              					
                            }
                            // InternalMyDsl.g:5873:6: ( (lv_right_5_0= ruleTypeRef ) )
                            // InternalMyDsl.g:5874:7: (lv_right_5_0= ruleTypeRef )
                            {
                            // InternalMyDsl.g:5874:7: (lv_right_5_0= ruleTypeRef )
                            // InternalMyDsl.g:5875:8: lv_right_5_0= ruleTypeRef
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getCastAccess().getRightTypeRefParserRuleCall_1_1_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_37);
                            lv_right_5_0=ruleTypeRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getCastRule());
                              								}
                              								set(
                              									current,
                              									"right",
                              									lv_right_5_0,
                              									"org.xtext.example.mydsl.MyDsl.TypeRef");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_6=(Token)match(input,42,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_6, grammarAccess.getCastAccess().getRightParenthesisKeyword_1_1_1_2());
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCast"


    // $ANTLR start "entryRuleComparison"
    // InternalMyDsl.g:5903:1: entryRuleComparison returns [EObject current=null] : iv_ruleComparison= ruleComparison EOF ;
    public final EObject entryRuleComparison() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleComparison = null;


        try {
            // InternalMyDsl.g:5903:51: (iv_ruleComparison= ruleComparison EOF )
            // InternalMyDsl.g:5904:2: iv_ruleComparison= ruleComparison EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getComparisonRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleComparison=ruleComparison();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleComparison; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleComparison"


    // $ANTLR start "ruleComparison"
    // InternalMyDsl.g:5910:1: ruleComparison returns [EObject current=null] : (this_Addition_0= ruleAddition ( ( () ( ( (lv_op_2_1= '!=' | lv_op_2_2= '=' | lv_op_2_3= '>=' | lv_op_2_4= '<=' | lv_op_2_5= '<' | lv_op_2_6= '>' ) ) ) ) ( (lv_right_3_0= ruleAddition ) ) )? ) ;
    public final EObject ruleComparison() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        Token lv_op_2_3=null;
        Token lv_op_2_4=null;
        Token lv_op_2_5=null;
        Token lv_op_2_6=null;
        EObject this_Addition_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:5916:2: ( (this_Addition_0= ruleAddition ( ( () ( ( (lv_op_2_1= '!=' | lv_op_2_2= '=' | lv_op_2_3= '>=' | lv_op_2_4= '<=' | lv_op_2_5= '<' | lv_op_2_6= '>' ) ) ) ) ( (lv_right_3_0= ruleAddition ) ) )? ) )
            // InternalMyDsl.g:5917:2: (this_Addition_0= ruleAddition ( ( () ( ( (lv_op_2_1= '!=' | lv_op_2_2= '=' | lv_op_2_3= '>=' | lv_op_2_4= '<=' | lv_op_2_5= '<' | lv_op_2_6= '>' ) ) ) ) ( (lv_right_3_0= ruleAddition ) ) )? )
            {
            // InternalMyDsl.g:5917:2: (this_Addition_0= ruleAddition ( ( () ( ( (lv_op_2_1= '!=' | lv_op_2_2= '=' | lv_op_2_3= '>=' | lv_op_2_4= '<=' | lv_op_2_5= '<' | lv_op_2_6= '>' ) ) ) ) ( (lv_right_3_0= ruleAddition ) ) )? )
            // InternalMyDsl.g:5918:3: this_Addition_0= ruleAddition ( ( () ( ( (lv_op_2_1= '!=' | lv_op_2_2= '=' | lv_op_2_3= '>=' | lv_op_2_4= '<=' | lv_op_2_5= '<' | lv_op_2_6= '>' ) ) ) ) ( (lv_right_3_0= ruleAddition ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getComparisonAccess().getAdditionParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_58);
            this_Addition_0=ruleAddition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Addition_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMyDsl.g:5926:3: ( ( () ( ( (lv_op_2_1= '!=' | lv_op_2_2= '=' | lv_op_2_3= '>=' | lv_op_2_4= '<=' | lv_op_2_5= '<' | lv_op_2_6= '>' ) ) ) ) ( (lv_right_3_0= ruleAddition ) ) )?
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==47||(LA110_0>=141 && LA110_0<=144)) ) {
                alt110=1;
            }
            else if ( (LA110_0==106) ) {
                int LA110_2 = input.LA(2);

                if ( ((LA110_2>=RULE_ID && LA110_2<=RULE_KEYWORD)||LA110_2==20||LA110_2==24||LA110_2==41||LA110_2==45||LA110_2==50||(LA110_2>=52 && LA110_2<=104)||LA110_2==146||(LA110_2>=150 && LA110_2<=154)) ) {
                    alt110=1;
                }
            }
            switch (alt110) {
                case 1 :
                    // InternalMyDsl.g:5927:4: ( () ( ( (lv_op_2_1= '!=' | lv_op_2_2= '=' | lv_op_2_3= '>=' | lv_op_2_4= '<=' | lv_op_2_5= '<' | lv_op_2_6= '>' ) ) ) ) ( (lv_right_3_0= ruleAddition ) )
                    {
                    // InternalMyDsl.g:5927:4: ( () ( ( (lv_op_2_1= '!=' | lv_op_2_2= '=' | lv_op_2_3= '>=' | lv_op_2_4= '<=' | lv_op_2_5= '<' | lv_op_2_6= '>' ) ) ) )
                    // InternalMyDsl.g:5928:5: () ( ( (lv_op_2_1= '!=' | lv_op_2_2= '=' | lv_op_2_3= '>=' | lv_op_2_4= '<=' | lv_op_2_5= '<' | lv_op_2_6= '>' ) ) )
                    {
                    // InternalMyDsl.g:5928:5: ()
                    // InternalMyDsl.g:5929:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElementAndSet(
                      							grammarAccess.getComparisonAccess().getBinaryOperatorLeftAction_1_0_0(),
                      							current);
                      					
                    }

                    }

                    // InternalMyDsl.g:5935:5: ( ( (lv_op_2_1= '!=' | lv_op_2_2= '=' | lv_op_2_3= '>=' | lv_op_2_4= '<=' | lv_op_2_5= '<' | lv_op_2_6= '>' ) ) )
                    // InternalMyDsl.g:5936:6: ( (lv_op_2_1= '!=' | lv_op_2_2= '=' | lv_op_2_3= '>=' | lv_op_2_4= '<=' | lv_op_2_5= '<' | lv_op_2_6= '>' ) )
                    {
                    // InternalMyDsl.g:5936:6: ( (lv_op_2_1= '!=' | lv_op_2_2= '=' | lv_op_2_3= '>=' | lv_op_2_4= '<=' | lv_op_2_5= '<' | lv_op_2_6= '>' ) )
                    // InternalMyDsl.g:5937:7: (lv_op_2_1= '!=' | lv_op_2_2= '=' | lv_op_2_3= '>=' | lv_op_2_4= '<=' | lv_op_2_5= '<' | lv_op_2_6= '>' )
                    {
                    // InternalMyDsl.g:5937:7: (lv_op_2_1= '!=' | lv_op_2_2= '=' | lv_op_2_3= '>=' | lv_op_2_4= '<=' | lv_op_2_5= '<' | lv_op_2_6= '>' )
                    int alt109=6;
                    switch ( input.LA(1) ) {
                    case 141:
                        {
                        alt109=1;
                        }
                        break;
                    case 47:
                        {
                        alt109=2;
                        }
                        break;
                    case 142:
                        {
                        alt109=3;
                        }
                        break;
                    case 143:
                        {
                        alt109=4;
                        }
                        break;
                    case 144:
                        {
                        alt109=5;
                        }
                        break;
                    case 106:
                        {
                        alt109=6;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 109, 0, input);

                        throw nvae;
                    }

                    switch (alt109) {
                        case 1 :
                            // InternalMyDsl.g:5938:8: lv_op_2_1= '!='
                            {
                            lv_op_2_1=(Token)match(input,141,FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_op_2_1, grammarAccess.getComparisonAccess().getOpExclamationMarkEqualsSignKeyword_1_0_1_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getComparisonRule());
                              								}
                              								setWithLastConsumed(current, "op", lv_op_2_1, null);
                              							
                            }

                            }
                            break;
                        case 2 :
                            // InternalMyDsl.g:5949:8: lv_op_2_2= '='
                            {
                            lv_op_2_2=(Token)match(input,47,FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_op_2_2, grammarAccess.getComparisonAccess().getOpEqualsSignKeyword_1_0_1_0_1());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getComparisonRule());
                              								}
                              								setWithLastConsumed(current, "op", lv_op_2_2, null);
                              							
                            }

                            }
                            break;
                        case 3 :
                            // InternalMyDsl.g:5960:8: lv_op_2_3= '>='
                            {
                            lv_op_2_3=(Token)match(input,142,FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_op_2_3, grammarAccess.getComparisonAccess().getOpGreaterThanSignEqualsSignKeyword_1_0_1_0_2());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getComparisonRule());
                              								}
                              								setWithLastConsumed(current, "op", lv_op_2_3, null);
                              							
                            }

                            }
                            break;
                        case 4 :
                            // InternalMyDsl.g:5971:8: lv_op_2_4= '<='
                            {
                            lv_op_2_4=(Token)match(input,143,FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_op_2_4, grammarAccess.getComparisonAccess().getOpLessThanSignEqualsSignKeyword_1_0_1_0_3());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getComparisonRule());
                              								}
                              								setWithLastConsumed(current, "op", lv_op_2_4, null);
                              							
                            }

                            }
                            break;
                        case 5 :
                            // InternalMyDsl.g:5982:8: lv_op_2_5= '<'
                            {
                            lv_op_2_5=(Token)match(input,144,FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_op_2_5, grammarAccess.getComparisonAccess().getOpLessThanSignKeyword_1_0_1_0_4());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getComparisonRule());
                              								}
                              								setWithLastConsumed(current, "op", lv_op_2_5, null);
                              							
                            }

                            }
                            break;
                        case 6 :
                            // InternalMyDsl.g:5993:8: lv_op_2_6= '>'
                            {
                            lv_op_2_6=(Token)match(input,106,FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_op_2_6, grammarAccess.getComparisonAccess().getOpGreaterThanSignKeyword_1_0_1_0_5());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getComparisonRule());
                              								}
                              								setWithLastConsumed(current, "op", lv_op_2_6, null);
                              							
                            }

                            }
                            break;

                    }


                    }


                    }


                    }

                    // InternalMyDsl.g:6007:4: ( (lv_right_3_0= ruleAddition ) )
                    // InternalMyDsl.g:6008:5: (lv_right_3_0= ruleAddition )
                    {
                    // InternalMyDsl.g:6008:5: (lv_right_3_0= ruleAddition )
                    // InternalMyDsl.g:6009:6: lv_right_3_0= ruleAddition
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getComparisonAccess().getRightAdditionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_right_3_0=ruleAddition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getComparisonRule());
                      						}
                      						set(
                      							current,
                      							"right",
                      							lv_right_3_0,
                      							"org.xtext.example.mydsl.MyDsl.Addition");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleComparison"


    // $ANTLR start "entryRuleAddition"
    // InternalMyDsl.g:6031:1: entryRuleAddition returns [EObject current=null] : iv_ruleAddition= ruleAddition EOF ;
    public final EObject entryRuleAddition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAddition = null;


        try {
            // InternalMyDsl.g:6031:49: (iv_ruleAddition= ruleAddition EOF )
            // InternalMyDsl.g:6032:2: iv_ruleAddition= ruleAddition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAdditionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAddition=ruleAddition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAddition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAddition"


    // $ANTLR start "ruleAddition"
    // InternalMyDsl.g:6038:1: ruleAddition returns [EObject current=null] : (this_Multiplication_0= ruleMultiplication ( ( () ( ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) ) ) ) ( (lv_right_3_0= ruleMultiplication ) ) )* ) ;
    public final EObject ruleAddition() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        EObject this_Multiplication_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:6044:2: ( (this_Multiplication_0= ruleMultiplication ( ( () ( ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) ) ) ) ( (lv_right_3_0= ruleMultiplication ) ) )* ) )
            // InternalMyDsl.g:6045:2: (this_Multiplication_0= ruleMultiplication ( ( () ( ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) ) ) ) ( (lv_right_3_0= ruleMultiplication ) ) )* )
            {
            // InternalMyDsl.g:6045:2: (this_Multiplication_0= ruleMultiplication ( ( () ( ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) ) ) ) ( (lv_right_3_0= ruleMultiplication ) ) )* )
            // InternalMyDsl.g:6046:3: this_Multiplication_0= ruleMultiplication ( ( () ( ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) ) ) ) ( (lv_right_3_0= ruleMultiplication ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAdditionAccess().getMultiplicationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_59);
            this_Multiplication_0=ruleMultiplication();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Multiplication_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMyDsl.g:6054:3: ( ( () ( ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) ) ) ) ( (lv_right_3_0= ruleMultiplication ) ) )*
            loop112:
            do {
                int alt112=2;
                int LA112_0 = input.LA(1);

                if ( ((LA112_0>=145 && LA112_0<=146)) ) {
                    alt112=1;
                }


                switch (alt112) {
            	case 1 :
            	    // InternalMyDsl.g:6055:4: ( () ( ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) ) ) ) ( (lv_right_3_0= ruleMultiplication ) )
            	    {
            	    // InternalMyDsl.g:6055:4: ( () ( ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) ) ) )
            	    // InternalMyDsl.g:6056:5: () ( ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) ) )
            	    {
            	    // InternalMyDsl.g:6056:5: ()
            	    // InternalMyDsl.g:6057:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getAdditionAccess().getBinaryOperatorLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalMyDsl.g:6063:5: ( ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) ) )
            	    // InternalMyDsl.g:6064:6: ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) )
            	    {
            	    // InternalMyDsl.g:6064:6: ( (lv_op_2_1= '+' | lv_op_2_2= '-' ) )
            	    // InternalMyDsl.g:6065:7: (lv_op_2_1= '+' | lv_op_2_2= '-' )
            	    {
            	    // InternalMyDsl.g:6065:7: (lv_op_2_1= '+' | lv_op_2_2= '-' )
            	    int alt111=2;
            	    int LA111_0 = input.LA(1);

            	    if ( (LA111_0==145) ) {
            	        alt111=1;
            	    }
            	    else if ( (LA111_0==146) ) {
            	        alt111=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 111, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt111) {
            	        case 1 :
            	            // InternalMyDsl.g:6066:8: lv_op_2_1= '+'
            	            {
            	            lv_op_2_1=(Token)match(input,145,FOLLOW_5); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_op_2_1, grammarAccess.getAdditionAccess().getOpPlusSignKeyword_1_0_1_0_0());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getAdditionRule());
            	              								}
            	              								setWithLastConsumed(current, "op", lv_op_2_1, null);
            	              							
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMyDsl.g:6077:8: lv_op_2_2= '-'
            	            {
            	            lv_op_2_2=(Token)match(input,146,FOLLOW_5); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_op_2_2, grammarAccess.getAdditionAccess().getOpHyphenMinusKeyword_1_0_1_0_1());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getAdditionRule());
            	              								}
            	              								setWithLastConsumed(current, "op", lv_op_2_2, null);
            	              							
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }

            	    // InternalMyDsl.g:6091:4: ( (lv_right_3_0= ruleMultiplication ) )
            	    // InternalMyDsl.g:6092:5: (lv_right_3_0= ruleMultiplication )
            	    {
            	    // InternalMyDsl.g:6092:5: (lv_right_3_0= ruleMultiplication )
            	    // InternalMyDsl.g:6093:6: lv_right_3_0= ruleMultiplication
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getAdditionAccess().getRightMultiplicationParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_59);
            	    lv_right_3_0=ruleMultiplication();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getAdditionRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"org.xtext.example.mydsl.MyDsl.Multiplication");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop112;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAddition"


    // $ANTLR start "entryRuleMultiplication"
    // InternalMyDsl.g:6115:1: entryRuleMultiplication returns [EObject current=null] : iv_ruleMultiplication= ruleMultiplication EOF ;
    public final EObject entryRuleMultiplication() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMultiplication = null;


        try {
            // InternalMyDsl.g:6115:55: (iv_ruleMultiplication= ruleMultiplication EOF )
            // InternalMyDsl.g:6116:2: iv_ruleMultiplication= ruleMultiplication EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMultiplicationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMultiplication=ruleMultiplication();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMultiplication; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMultiplication"


    // $ANTLR start "ruleMultiplication"
    // InternalMyDsl.g:6122:1: ruleMultiplication returns [EObject current=null] : (this_Exponentiation_0= ruleExponentiation ( ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' ) ) ) ) ( (lv_right_3_0= ruleExponentiation ) ) )* ) ;
    public final EObject ruleMultiplication() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        EObject this_Exponentiation_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:6128:2: ( (this_Exponentiation_0= ruleExponentiation ( ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' ) ) ) ) ( (lv_right_3_0= ruleExponentiation ) ) )* ) )
            // InternalMyDsl.g:6129:2: (this_Exponentiation_0= ruleExponentiation ( ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' ) ) ) ) ( (lv_right_3_0= ruleExponentiation ) ) )* )
            {
            // InternalMyDsl.g:6129:2: (this_Exponentiation_0= ruleExponentiation ( ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' ) ) ) ) ( (lv_right_3_0= ruleExponentiation ) ) )* )
            // InternalMyDsl.g:6130:3: this_Exponentiation_0= ruleExponentiation ( ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' ) ) ) ) ( (lv_right_3_0= ruleExponentiation ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getMultiplicationAccess().getExponentiationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_60);
            this_Exponentiation_0=ruleExponentiation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Exponentiation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMyDsl.g:6138:3: ( ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' ) ) ) ) ( (lv_right_3_0= ruleExponentiation ) ) )*
            loop114:
            do {
                int alt114=2;
                int LA114_0 = input.LA(1);

                if ( ((LA114_0>=147 && LA114_0<=148)) ) {
                    alt114=1;
                }


                switch (alt114) {
            	case 1 :
            	    // InternalMyDsl.g:6139:4: ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' ) ) ) ) ( (lv_right_3_0= ruleExponentiation ) )
            	    {
            	    // InternalMyDsl.g:6139:4: ( () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' ) ) ) )
            	    // InternalMyDsl.g:6140:5: () ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' ) ) )
            	    {
            	    // InternalMyDsl.g:6140:5: ()
            	    // InternalMyDsl.g:6141:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getMultiplicationAccess().getBinaryOperatorLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalMyDsl.g:6147:5: ( ( (lv_op_2_1= '*' | lv_op_2_2= '/' ) ) )
            	    // InternalMyDsl.g:6148:6: ( (lv_op_2_1= '*' | lv_op_2_2= '/' ) )
            	    {
            	    // InternalMyDsl.g:6148:6: ( (lv_op_2_1= '*' | lv_op_2_2= '/' ) )
            	    // InternalMyDsl.g:6149:7: (lv_op_2_1= '*' | lv_op_2_2= '/' )
            	    {
            	    // InternalMyDsl.g:6149:7: (lv_op_2_1= '*' | lv_op_2_2= '/' )
            	    int alt113=2;
            	    int LA113_0 = input.LA(1);

            	    if ( (LA113_0==147) ) {
            	        alt113=1;
            	    }
            	    else if ( (LA113_0==148) ) {
            	        alt113=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 113, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt113) {
            	        case 1 :
            	            // InternalMyDsl.g:6150:8: lv_op_2_1= '*'
            	            {
            	            lv_op_2_1=(Token)match(input,147,FOLLOW_5); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_op_2_1, grammarAccess.getMultiplicationAccess().getOpAsteriskKeyword_1_0_1_0_0());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getMultiplicationRule());
            	              								}
            	              								setWithLastConsumed(current, "op", lv_op_2_1, null);
            	              							
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalMyDsl.g:6161:8: lv_op_2_2= '/'
            	            {
            	            lv_op_2_2=(Token)match(input,148,FOLLOW_5); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_op_2_2, grammarAccess.getMultiplicationAccess().getOpSolidusKeyword_1_0_1_0_1());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getMultiplicationRule());
            	              								}
            	              								setWithLastConsumed(current, "op", lv_op_2_2, null);
            	              							
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }

            	    // InternalMyDsl.g:6175:4: ( (lv_right_3_0= ruleExponentiation ) )
            	    // InternalMyDsl.g:6176:5: (lv_right_3_0= ruleExponentiation )
            	    {
            	    // InternalMyDsl.g:6176:5: (lv_right_3_0= ruleExponentiation )
            	    // InternalMyDsl.g:6177:6: lv_right_3_0= ruleExponentiation
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getMultiplicationAccess().getRightExponentiationParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_60);
            	    lv_right_3_0=ruleExponentiation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getMultiplicationRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"org.xtext.example.mydsl.MyDsl.Exponentiation");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop114;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultiplication"


    // $ANTLR start "entryRuleExponentiation"
    // InternalMyDsl.g:6199:1: entryRuleExponentiation returns [EObject current=null] : iv_ruleExponentiation= ruleExponentiation EOF ;
    public final EObject entryRuleExponentiation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExponentiation = null;


        try {
            // InternalMyDsl.g:6199:55: (iv_ruleExponentiation= ruleExponentiation EOF )
            // InternalMyDsl.g:6200:2: iv_ruleExponentiation= ruleExponentiation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExponentiationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExponentiation=ruleExponentiation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExponentiation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExponentiation"


    // $ANTLR start "ruleExponentiation"
    // InternalMyDsl.g:6206:1: ruleExponentiation returns [EObject current=null] : (this_Binary_0= ruleBinary ( ( () ( (lv_op_2_0= '^' ) ) ) ( (lv_right_3_0= ruleBinary ) ) )* ) ;
    public final EObject ruleExponentiation() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        EObject this_Binary_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:6212:2: ( (this_Binary_0= ruleBinary ( ( () ( (lv_op_2_0= '^' ) ) ) ( (lv_right_3_0= ruleBinary ) ) )* ) )
            // InternalMyDsl.g:6213:2: (this_Binary_0= ruleBinary ( ( () ( (lv_op_2_0= '^' ) ) ) ( (lv_right_3_0= ruleBinary ) ) )* )
            {
            // InternalMyDsl.g:6213:2: (this_Binary_0= ruleBinary ( ( () ( (lv_op_2_0= '^' ) ) ) ( (lv_right_3_0= ruleBinary ) ) )* )
            // InternalMyDsl.g:6214:3: this_Binary_0= ruleBinary ( ( () ( (lv_op_2_0= '^' ) ) ) ( (lv_right_3_0= ruleBinary ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getExponentiationAccess().getBinaryParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_61);
            this_Binary_0=ruleBinary();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Binary_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMyDsl.g:6222:3: ( ( () ( (lv_op_2_0= '^' ) ) ) ( (lv_right_3_0= ruleBinary ) ) )*
            loop115:
            do {
                int alt115=2;
                int LA115_0 = input.LA(1);

                if ( (LA115_0==149) ) {
                    alt115=1;
                }


                switch (alt115) {
            	case 1 :
            	    // InternalMyDsl.g:6223:4: ( () ( (lv_op_2_0= '^' ) ) ) ( (lv_right_3_0= ruleBinary ) )
            	    {
            	    // InternalMyDsl.g:6223:4: ( () ( (lv_op_2_0= '^' ) ) )
            	    // InternalMyDsl.g:6224:5: () ( (lv_op_2_0= '^' ) )
            	    {
            	    // InternalMyDsl.g:6224:5: ()
            	    // InternalMyDsl.g:6225:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getExponentiationAccess().getBinaryOperatorLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalMyDsl.g:6231:5: ( (lv_op_2_0= '^' ) )
            	    // InternalMyDsl.g:6232:6: (lv_op_2_0= '^' )
            	    {
            	    // InternalMyDsl.g:6232:6: (lv_op_2_0= '^' )
            	    // InternalMyDsl.g:6233:7: lv_op_2_0= '^'
            	    {
            	    lv_op_2_0=(Token)match(input,149,FOLLOW_5); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							newLeafNode(lv_op_2_0, grammarAccess.getExponentiationAccess().getOpCircumflexAccentKeyword_1_0_1_0());
            	      						
            	    }
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElement(grammarAccess.getExponentiationRule());
            	      							}
            	      							setWithLastConsumed(current, "op", lv_op_2_0, "^");
            	      						
            	    }

            	    }


            	    }


            	    }

            	    // InternalMyDsl.g:6246:4: ( (lv_right_3_0= ruleBinary ) )
            	    // InternalMyDsl.g:6247:5: (lv_right_3_0= ruleBinary )
            	    {
            	    // InternalMyDsl.g:6247:5: (lv_right_3_0= ruleBinary )
            	    // InternalMyDsl.g:6248:6: lv_right_3_0= ruleBinary
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getExponentiationAccess().getRightBinaryParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_61);
            	    lv_right_3_0=ruleBinary();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getExponentiationRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"org.xtext.example.mydsl.MyDsl.Binary");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop115;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExponentiation"


    // $ANTLR start "entryRuleBinary"
    // InternalMyDsl.g:6270:1: entryRuleBinary returns [EObject current=null] : iv_ruleBinary= ruleBinary EOF ;
    public final EObject entryRuleBinary() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBinary = null;


        try {
            // InternalMyDsl.g:6270:47: (iv_ruleBinary= ruleBinary EOF )
            // InternalMyDsl.g:6271:2: iv_ruleBinary= ruleBinary EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBinaryRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleBinary=ruleBinary();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBinary; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBinary"


    // $ANTLR start "ruleBinary"
    // InternalMyDsl.g:6277:1: ruleBinary returns [EObject current=null] : (this_Unit_0= ruleUnit ( ( () ( (lv_op_2_0= ruleValid_ID ) ) ) ( (lv_right_3_0= ruleUnit ) ) )* ) ;
    public final EObject ruleBinary() throws RecognitionException {
        EObject current = null;

        EObject this_Unit_0 = null;

        AntlrDatatypeRuleToken lv_op_2_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:6283:2: ( (this_Unit_0= ruleUnit ( ( () ( (lv_op_2_0= ruleValid_ID ) ) ) ( (lv_right_3_0= ruleUnit ) ) )* ) )
            // InternalMyDsl.g:6284:2: (this_Unit_0= ruleUnit ( ( () ( (lv_op_2_0= ruleValid_ID ) ) ) ( (lv_right_3_0= ruleUnit ) ) )* )
            {
            // InternalMyDsl.g:6284:2: (this_Unit_0= ruleUnit ( ( () ( (lv_op_2_0= ruleValid_ID ) ) ) ( (lv_right_3_0= ruleUnit ) ) )* )
            // InternalMyDsl.g:6285:3: this_Unit_0= ruleUnit ( ( () ( (lv_op_2_0= ruleValid_ID ) ) ) ( (lv_right_3_0= ruleUnit ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getBinaryAccess().getUnitParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_62);
            this_Unit_0=ruleUnit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Unit_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMyDsl.g:6293:3: ( ( () ( (lv_op_2_0= ruleValid_ID ) ) ) ( (lv_right_3_0= ruleUnit ) ) )*
            loop116:
            do {
                int alt116=2;
                int LA116_0 = input.LA(1);

                if ( (LA116_0==RULE_ID) ) {
                    int LA116_2 = input.LA(2);

                    if ( ((LA116_2>=RULE_ID && LA116_2<=RULE_KEYWORD)||LA116_2==20||LA116_2==24||LA116_2==41||LA116_2==45||LA116_2==50||(LA116_2>=52 && LA116_2<=104)||LA116_2==146||(LA116_2>=150 && LA116_2<=154)) ) {
                        alt116=1;
                    }


                }
                else if ( (LA116_0==50||(LA116_0>=52 && LA116_0<=104)) ) {
                    alt116=1;
                }


                switch (alt116) {
            	case 1 :
            	    // InternalMyDsl.g:6294:4: ( () ( (lv_op_2_0= ruleValid_ID ) ) ) ( (lv_right_3_0= ruleUnit ) )
            	    {
            	    // InternalMyDsl.g:6294:4: ( () ( (lv_op_2_0= ruleValid_ID ) ) )
            	    // InternalMyDsl.g:6295:5: () ( (lv_op_2_0= ruleValid_ID ) )
            	    {
            	    // InternalMyDsl.g:6295:5: ()
            	    // InternalMyDsl.g:6296:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndSet(
            	      							grammarAccess.getBinaryAccess().getBinaryOperatorLeftAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalMyDsl.g:6302:5: ( (lv_op_2_0= ruleValid_ID ) )
            	    // InternalMyDsl.g:6303:6: (lv_op_2_0= ruleValid_ID )
            	    {
            	    // InternalMyDsl.g:6303:6: (lv_op_2_0= ruleValid_ID )
            	    // InternalMyDsl.g:6304:7: lv_op_2_0= ruleValid_ID
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getBinaryAccess().getOpValid_IDParserRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_5);
            	    lv_op_2_0=ruleValid_ID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getBinaryRule());
            	      							}
            	      							set(
            	      								current,
            	      								"op",
            	      								lv_op_2_0,
            	      								"org.xtext.example.mydsl.MyDsl.Valid_ID");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }

            	    // InternalMyDsl.g:6322:4: ( (lv_right_3_0= ruleUnit ) )
            	    // InternalMyDsl.g:6323:5: (lv_right_3_0= ruleUnit )
            	    {
            	    // InternalMyDsl.g:6323:5: (lv_right_3_0= ruleUnit )
            	    // InternalMyDsl.g:6324:6: lv_right_3_0= ruleUnit
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getBinaryAccess().getRightUnitParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_62);
            	    lv_right_3_0=ruleUnit();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getBinaryRule());
            	      						}
            	      						set(
            	      							current,
            	      							"right",
            	      							lv_right_3_0,
            	      							"org.xtext.example.mydsl.MyDsl.Unit");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop116;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBinary"


    // $ANTLR start "entryRuleUnit"
    // InternalMyDsl.g:6346:1: entryRuleUnit returns [EObject current=null] : iv_ruleUnit= ruleUnit EOF ;
    public final EObject entryRuleUnit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnit = null;


        try {
            // InternalMyDsl.g:6346:45: (iv_ruleUnit= ruleUnit EOF )
            // InternalMyDsl.g:6347:2: iv_ruleUnit= ruleUnit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnit=ruleUnit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnit"


    // $ANTLR start "ruleUnit"
    // InternalMyDsl.g:6353:1: ruleUnit returns [EObject current=null] : (this_Unary_0= ruleUnary ( ( () ( ( (lv_op_2_1= '\\u00B0' | lv_op_2_2= '#' ) ) ) ) ( (lv_right_3_0= ruleUnitRef ) ) )? ) ;
    public final EObject ruleUnit() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        EObject this_Unary_0 = null;

        EObject lv_right_3_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:6359:2: ( (this_Unary_0= ruleUnary ( ( () ( ( (lv_op_2_1= '\\u00B0' | lv_op_2_2= '#' ) ) ) ) ( (lv_right_3_0= ruleUnitRef ) ) )? ) )
            // InternalMyDsl.g:6360:2: (this_Unary_0= ruleUnary ( ( () ( ( (lv_op_2_1= '\\u00B0' | lv_op_2_2= '#' ) ) ) ) ( (lv_right_3_0= ruleUnitRef ) ) )? )
            {
            // InternalMyDsl.g:6360:2: (this_Unary_0= ruleUnary ( ( () ( ( (lv_op_2_1= '\\u00B0' | lv_op_2_2= '#' ) ) ) ) ( (lv_right_3_0= ruleUnitRef ) ) )? )
            // InternalMyDsl.g:6361:3: this_Unary_0= ruleUnary ( ( () ( ( (lv_op_2_1= '\\u00B0' | lv_op_2_2= '#' ) ) ) ) ( (lv_right_3_0= ruleUnitRef ) ) )?
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUnitAccess().getUnaryParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_63);
            this_Unary_0=ruleUnary();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Unary_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMyDsl.g:6369:3: ( ( () ( ( (lv_op_2_1= '\\u00B0' | lv_op_2_2= '#' ) ) ) ) ( (lv_right_3_0= ruleUnitRef ) ) )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( ((LA118_0>=150 && LA118_0<=151)) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // InternalMyDsl.g:6370:4: ( () ( ( (lv_op_2_1= '\\u00B0' | lv_op_2_2= '#' ) ) ) ) ( (lv_right_3_0= ruleUnitRef ) )
                    {
                    // InternalMyDsl.g:6370:4: ( () ( ( (lv_op_2_1= '\\u00B0' | lv_op_2_2= '#' ) ) ) )
                    // InternalMyDsl.g:6371:5: () ( ( (lv_op_2_1= '\\u00B0' | lv_op_2_2= '#' ) ) )
                    {
                    // InternalMyDsl.g:6371:5: ()
                    // InternalMyDsl.g:6372:6: 
                    {
                    if ( state.backtracking==0 ) {

                      						current = forceCreateModelElementAndSet(
                      							grammarAccess.getUnitAccess().getUnitLeftAction_1_0_0(),
                      							current);
                      					
                    }

                    }

                    // InternalMyDsl.g:6378:5: ( ( (lv_op_2_1= '\\u00B0' | lv_op_2_2= '#' ) ) )
                    // InternalMyDsl.g:6379:6: ( (lv_op_2_1= '\\u00B0' | lv_op_2_2= '#' ) )
                    {
                    // InternalMyDsl.g:6379:6: ( (lv_op_2_1= '\\u00B0' | lv_op_2_2= '#' ) )
                    // InternalMyDsl.g:6380:7: (lv_op_2_1= '\\u00B0' | lv_op_2_2= '#' )
                    {
                    // InternalMyDsl.g:6380:7: (lv_op_2_1= '\\u00B0' | lv_op_2_2= '#' )
                    int alt117=2;
                    int LA117_0 = input.LA(1);

                    if ( (LA117_0==150) ) {
                        alt117=1;
                    }
                    else if ( (LA117_0==151) ) {
                        alt117=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 117, 0, input);

                        throw nvae;
                    }
                    switch (alt117) {
                        case 1 :
                            // InternalMyDsl.g:6381:8: lv_op_2_1= '\\u00B0'
                            {
                            lv_op_2_1=(Token)match(input,150,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_op_2_1, grammarAccess.getUnitAccess().getOpDegreeSignKeyword_1_0_1_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getUnitRule());
                              								}
                              								setWithLastConsumed(current, "op", lv_op_2_1, null);
                              							
                            }

                            }
                            break;
                        case 2 :
                            // InternalMyDsl.g:6392:8: lv_op_2_2= '#'
                            {
                            lv_op_2_2=(Token)match(input,151,FOLLOW_8); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_op_2_2, grammarAccess.getUnitAccess().getOpNumberSignKeyword_1_0_1_0_1());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getUnitRule());
                              								}
                              								setWithLastConsumed(current, "op", lv_op_2_2, null);
                              							
                            }

                            }
                            break;

                    }


                    }


                    }


                    }

                    // InternalMyDsl.g:6406:4: ( (lv_right_3_0= ruleUnitRef ) )
                    // InternalMyDsl.g:6407:5: (lv_right_3_0= ruleUnitRef )
                    {
                    // InternalMyDsl.g:6407:5: (lv_right_3_0= ruleUnitRef )
                    // InternalMyDsl.g:6408:6: lv_right_3_0= ruleUnitRef
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnitAccess().getRightUnitRefParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_right_3_0=ruleUnitRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnitRule());
                      						}
                      						set(
                      							current,
                      							"right",
                      							lv_right_3_0,
                      							"org.xtext.example.mydsl.MyDsl.UnitRef");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnit"


    // $ANTLR start "entryRuleUnary"
    // InternalMyDsl.g:6430:1: entryRuleUnary returns [EObject current=null] : iv_ruleUnary= ruleUnary EOF ;
    public final EObject entryRuleUnary() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnary = null;


        try {
            // InternalMyDsl.g:6430:46: (iv_ruleUnary= ruleUnary EOF )
            // InternalMyDsl.g:6431:2: iv_ruleUnary= ruleUnary EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnaryRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnary=ruleUnary();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnary; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnary"


    // $ANTLR start "ruleUnary"
    // InternalMyDsl.g:6437:1: ruleUnary returns [EObject current=null] : (this_Access_0= ruleAccess | ( () ( ( ( ( (lv_op_2_1= '\\u00B0' | lv_op_2_2= '#' ) ) ) ( (lv_right_3_0= ruleUnitRef ) ) ) | ( ( ( (lv_op_4_1= '-' | lv_op_4_2= '!' | lv_op_4_3= 'my' | lv_op_4_4= 'the' | lv_op_4_5= 'not' ) ) ) ( (lv_right_5_0= ruleUnary ) ) ) ) ) ) ;
    public final EObject ruleUnary() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_1=null;
        Token lv_op_2_2=null;
        Token lv_op_4_1=null;
        Token lv_op_4_2=null;
        Token lv_op_4_3=null;
        Token lv_op_4_4=null;
        Token lv_op_4_5=null;
        EObject this_Access_0 = null;

        EObject lv_right_3_0 = null;

        EObject lv_right_5_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:6443:2: ( (this_Access_0= ruleAccess | ( () ( ( ( ( (lv_op_2_1= '\\u00B0' | lv_op_2_2= '#' ) ) ) ( (lv_right_3_0= ruleUnitRef ) ) ) | ( ( ( (lv_op_4_1= '-' | lv_op_4_2= '!' | lv_op_4_3= 'my' | lv_op_4_4= 'the' | lv_op_4_5= 'not' ) ) ) ( (lv_right_5_0= ruleUnary ) ) ) ) ) ) )
            // InternalMyDsl.g:6444:2: (this_Access_0= ruleAccess | ( () ( ( ( ( (lv_op_2_1= '\\u00B0' | lv_op_2_2= '#' ) ) ) ( (lv_right_3_0= ruleUnitRef ) ) ) | ( ( ( (lv_op_4_1= '-' | lv_op_4_2= '!' | lv_op_4_3= 'my' | lv_op_4_4= 'the' | lv_op_4_5= 'not' ) ) ) ( (lv_right_5_0= ruleUnary ) ) ) ) ) )
            {
            // InternalMyDsl.g:6444:2: (this_Access_0= ruleAccess | ( () ( ( ( ( (lv_op_2_1= '\\u00B0' | lv_op_2_2= '#' ) ) ) ( (lv_right_3_0= ruleUnitRef ) ) ) | ( ( ( (lv_op_4_1= '-' | lv_op_4_2= '!' | lv_op_4_3= 'my' | lv_op_4_4= 'the' | lv_op_4_5= 'not' ) ) ) ( (lv_right_5_0= ruleUnary ) ) ) ) ) )
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( ((LA122_0>=RULE_ID && LA122_0<=RULE_KEYWORD)||LA122_0==24||LA122_0==41||LA122_0==45||LA122_0==50||(LA122_0>=52 && LA122_0<=104)) ) {
                alt122=1;
            }
            else if ( (LA122_0==20||LA122_0==146||(LA122_0>=150 && LA122_0<=154)) ) {
                alt122=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 122, 0, input);

                throw nvae;
            }
            switch (alt122) {
                case 1 :
                    // InternalMyDsl.g:6445:3: this_Access_0= ruleAccess
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getUnaryAccess().getAccessParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_Access_0=ruleAccess();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Access_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:6454:3: ( () ( ( ( ( (lv_op_2_1= '\\u00B0' | lv_op_2_2= '#' ) ) ) ( (lv_right_3_0= ruleUnitRef ) ) ) | ( ( ( (lv_op_4_1= '-' | lv_op_4_2= '!' | lv_op_4_3= 'my' | lv_op_4_4= 'the' | lv_op_4_5= 'not' ) ) ) ( (lv_right_5_0= ruleUnary ) ) ) ) )
                    {
                    // InternalMyDsl.g:6454:3: ( () ( ( ( ( (lv_op_2_1= '\\u00B0' | lv_op_2_2= '#' ) ) ) ( (lv_right_3_0= ruleUnitRef ) ) ) | ( ( ( (lv_op_4_1= '-' | lv_op_4_2= '!' | lv_op_4_3= 'my' | lv_op_4_4= 'the' | lv_op_4_5= 'not' ) ) ) ( (lv_right_5_0= ruleUnary ) ) ) ) )
                    // InternalMyDsl.g:6455:4: () ( ( ( ( (lv_op_2_1= '\\u00B0' | lv_op_2_2= '#' ) ) ) ( (lv_right_3_0= ruleUnitRef ) ) ) | ( ( ( (lv_op_4_1= '-' | lv_op_4_2= '!' | lv_op_4_3= 'my' | lv_op_4_4= 'the' | lv_op_4_5= 'not' ) ) ) ( (lv_right_5_0= ruleUnary ) ) ) )
                    {
                    // InternalMyDsl.g:6455:4: ()
                    // InternalMyDsl.g:6456:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getUnaryAccess().getUnaryAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalMyDsl.g:6462:4: ( ( ( ( (lv_op_2_1= '\\u00B0' | lv_op_2_2= '#' ) ) ) ( (lv_right_3_0= ruleUnitRef ) ) ) | ( ( ( (lv_op_4_1= '-' | lv_op_4_2= '!' | lv_op_4_3= 'my' | lv_op_4_4= 'the' | lv_op_4_5= 'not' ) ) ) ( (lv_right_5_0= ruleUnary ) ) ) )
                    int alt121=2;
                    int LA121_0 = input.LA(1);

                    if ( ((LA121_0>=150 && LA121_0<=151)) ) {
                        alt121=1;
                    }
                    else if ( (LA121_0==20||LA121_0==146||(LA121_0>=152 && LA121_0<=154)) ) {
                        alt121=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 121, 0, input);

                        throw nvae;
                    }
                    switch (alt121) {
                        case 1 :
                            // InternalMyDsl.g:6463:5: ( ( ( (lv_op_2_1= '\\u00B0' | lv_op_2_2= '#' ) ) ) ( (lv_right_3_0= ruleUnitRef ) ) )
                            {
                            // InternalMyDsl.g:6463:5: ( ( ( (lv_op_2_1= '\\u00B0' | lv_op_2_2= '#' ) ) ) ( (lv_right_3_0= ruleUnitRef ) ) )
                            // InternalMyDsl.g:6464:6: ( ( (lv_op_2_1= '\\u00B0' | lv_op_2_2= '#' ) ) ) ( (lv_right_3_0= ruleUnitRef ) )
                            {
                            // InternalMyDsl.g:6464:6: ( ( (lv_op_2_1= '\\u00B0' | lv_op_2_2= '#' ) ) )
                            // InternalMyDsl.g:6465:7: ( (lv_op_2_1= '\\u00B0' | lv_op_2_2= '#' ) )
                            {
                            // InternalMyDsl.g:6465:7: ( (lv_op_2_1= '\\u00B0' | lv_op_2_2= '#' ) )
                            // InternalMyDsl.g:6466:8: (lv_op_2_1= '\\u00B0' | lv_op_2_2= '#' )
                            {
                            // InternalMyDsl.g:6466:8: (lv_op_2_1= '\\u00B0' | lv_op_2_2= '#' )
                            int alt119=2;
                            int LA119_0 = input.LA(1);

                            if ( (LA119_0==150) ) {
                                alt119=1;
                            }
                            else if ( (LA119_0==151) ) {
                                alt119=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 119, 0, input);

                                throw nvae;
                            }
                            switch (alt119) {
                                case 1 :
                                    // InternalMyDsl.g:6467:9: lv_op_2_1= '\\u00B0'
                                    {
                                    lv_op_2_1=(Token)match(input,150,FOLLOW_8); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_op_2_1, grammarAccess.getUnaryAccess().getOpDegreeSignKeyword_1_1_0_0_0_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getUnaryRule());
                                      									}
                                      									setWithLastConsumed(current, "op", lv_op_2_1, null);
                                      								
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalMyDsl.g:6478:9: lv_op_2_2= '#'
                                    {
                                    lv_op_2_2=(Token)match(input,151,FOLLOW_8); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_op_2_2, grammarAccess.getUnaryAccess().getOpNumberSignKeyword_1_1_0_0_0_1());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getUnaryRule());
                                      									}
                                      									setWithLastConsumed(current, "op", lv_op_2_2, null);
                                      								
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            // InternalMyDsl.g:6491:6: ( (lv_right_3_0= ruleUnitRef ) )
                            // InternalMyDsl.g:6492:7: (lv_right_3_0= ruleUnitRef )
                            {
                            // InternalMyDsl.g:6492:7: (lv_right_3_0= ruleUnitRef )
                            // InternalMyDsl.g:6493:8: lv_right_3_0= ruleUnitRef
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getUnaryAccess().getRightUnitRefParserRuleCall_1_1_0_1_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_right_3_0=ruleUnitRef();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getUnaryRule());
                              								}
                              								set(
                              									current,
                              									"right",
                              									lv_right_3_0,
                              									"org.xtext.example.mydsl.MyDsl.UnitRef");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalMyDsl.g:6512:5: ( ( ( (lv_op_4_1= '-' | lv_op_4_2= '!' | lv_op_4_3= 'my' | lv_op_4_4= 'the' | lv_op_4_5= 'not' ) ) ) ( (lv_right_5_0= ruleUnary ) ) )
                            {
                            // InternalMyDsl.g:6512:5: ( ( ( (lv_op_4_1= '-' | lv_op_4_2= '!' | lv_op_4_3= 'my' | lv_op_4_4= 'the' | lv_op_4_5= 'not' ) ) ) ( (lv_right_5_0= ruleUnary ) ) )
                            // InternalMyDsl.g:6513:6: ( ( (lv_op_4_1= '-' | lv_op_4_2= '!' | lv_op_4_3= 'my' | lv_op_4_4= 'the' | lv_op_4_5= 'not' ) ) ) ( (lv_right_5_0= ruleUnary ) )
                            {
                            // InternalMyDsl.g:6513:6: ( ( (lv_op_4_1= '-' | lv_op_4_2= '!' | lv_op_4_3= 'my' | lv_op_4_4= 'the' | lv_op_4_5= 'not' ) ) )
                            // InternalMyDsl.g:6514:7: ( (lv_op_4_1= '-' | lv_op_4_2= '!' | lv_op_4_3= 'my' | lv_op_4_4= 'the' | lv_op_4_5= 'not' ) )
                            {
                            // InternalMyDsl.g:6514:7: ( (lv_op_4_1= '-' | lv_op_4_2= '!' | lv_op_4_3= 'my' | lv_op_4_4= 'the' | lv_op_4_5= 'not' ) )
                            // InternalMyDsl.g:6515:8: (lv_op_4_1= '-' | lv_op_4_2= '!' | lv_op_4_3= 'my' | lv_op_4_4= 'the' | lv_op_4_5= 'not' )
                            {
                            // InternalMyDsl.g:6515:8: (lv_op_4_1= '-' | lv_op_4_2= '!' | lv_op_4_3= 'my' | lv_op_4_4= 'the' | lv_op_4_5= 'not' )
                            int alt120=5;
                            switch ( input.LA(1) ) {
                            case 146:
                                {
                                alt120=1;
                                }
                                break;
                            case 20:
                                {
                                alt120=2;
                                }
                                break;
                            case 152:
                                {
                                alt120=3;
                                }
                                break;
                            case 153:
                                {
                                alt120=4;
                                }
                                break;
                            case 154:
                                {
                                alt120=5;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 120, 0, input);

                                throw nvae;
                            }

                            switch (alt120) {
                                case 1 :
                                    // InternalMyDsl.g:6516:9: lv_op_4_1= '-'
                                    {
                                    lv_op_4_1=(Token)match(input,146,FOLLOW_5); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_op_4_1, grammarAccess.getUnaryAccess().getOpHyphenMinusKeyword_1_1_1_0_0_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getUnaryRule());
                                      									}
                                      									setWithLastConsumed(current, "op", lv_op_4_1, null);
                                      								
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalMyDsl.g:6527:9: lv_op_4_2= '!'
                                    {
                                    lv_op_4_2=(Token)match(input,20,FOLLOW_5); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_op_4_2, grammarAccess.getUnaryAccess().getOpExclamationMarkKeyword_1_1_1_0_0_1());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getUnaryRule());
                                      									}
                                      									setWithLastConsumed(current, "op", lv_op_4_2, null);
                                      								
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalMyDsl.g:6538:9: lv_op_4_3= 'my'
                                    {
                                    lv_op_4_3=(Token)match(input,152,FOLLOW_5); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_op_4_3, grammarAccess.getUnaryAccess().getOpMyKeyword_1_1_1_0_0_2());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getUnaryRule());
                                      									}
                                      									setWithLastConsumed(current, "op", lv_op_4_3, null);
                                      								
                                    }

                                    }
                                    break;
                                case 4 :
                                    // InternalMyDsl.g:6549:9: lv_op_4_4= 'the'
                                    {
                                    lv_op_4_4=(Token)match(input,153,FOLLOW_5); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_op_4_4, grammarAccess.getUnaryAccess().getOpTheKeyword_1_1_1_0_0_3());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getUnaryRule());
                                      									}
                                      									setWithLastConsumed(current, "op", lv_op_4_4, null);
                                      								
                                    }

                                    }
                                    break;
                                case 5 :
                                    // InternalMyDsl.g:6560:9: lv_op_4_5= 'not'
                                    {
                                    lv_op_4_5=(Token)match(input,154,FOLLOW_5); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_op_4_5, grammarAccess.getUnaryAccess().getOpNotKeyword_1_1_1_0_0_4());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getUnaryRule());
                                      									}
                                      									setWithLastConsumed(current, "op", lv_op_4_5, null);
                                      								
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            // InternalMyDsl.g:6573:6: ( (lv_right_5_0= ruleUnary ) )
                            // InternalMyDsl.g:6574:7: (lv_right_5_0= ruleUnary )
                            {
                            // InternalMyDsl.g:6574:7: (lv_right_5_0= ruleUnary )
                            // InternalMyDsl.g:6575:8: lv_right_5_0= ruleUnary
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getUnaryAccess().getRightUnaryParserRuleCall_1_1_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_right_5_0=ruleUnary();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getUnaryRule());
                              								}
                              								set(
                              									current,
                              									"right",
                              									lv_right_5_0,
                              									"org.xtext.example.mydsl.MyDsl.Unary");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnary"


    // $ANTLR start "entryRuleAccess"
    // InternalMyDsl.g:6599:1: entryRuleAccess returns [EObject current=null] : iv_ruleAccess= ruleAccess EOF ;
    public final EObject entryRuleAccess() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAccess = null;


        try {
            // InternalMyDsl.g:6599:47: (iv_ruleAccess= ruleAccess EOF )
            // InternalMyDsl.g:6600:2: iv_ruleAccess= ruleAccess EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAccessRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAccess=ruleAccess();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAccess; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAccess"


    // $ANTLR start "ruleAccess"
    // InternalMyDsl.g:6606:1: ruleAccess returns [EObject current=null] : (this_Primary_0= rulePrimary ( () ( ( ( (lv_op_2_0= '[' ) ) ( (lv_right_3_0= ruleExpressionList ) )? otherlv_4= ']' ) | ( ( (lv_op_5_0= '.' ) ) ( ( (lv_right_6_1= ruleAbstractRef | lv_right_6_2= ruleStringLiteral ) ) ) ) ) )* ) ;
    public final EObject ruleAccess() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        Token otherlv_4=null;
        Token lv_op_5_0=null;
        EObject this_Primary_0 = null;

        EObject lv_right_3_0 = null;

        EObject lv_right_6_1 = null;

        EObject lv_right_6_2 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:6612:2: ( (this_Primary_0= rulePrimary ( () ( ( ( (lv_op_2_0= '[' ) ) ( (lv_right_3_0= ruleExpressionList ) )? otherlv_4= ']' ) | ( ( (lv_op_5_0= '.' ) ) ( ( (lv_right_6_1= ruleAbstractRef | lv_right_6_2= ruleStringLiteral ) ) ) ) ) )* ) )
            // InternalMyDsl.g:6613:2: (this_Primary_0= rulePrimary ( () ( ( ( (lv_op_2_0= '[' ) ) ( (lv_right_3_0= ruleExpressionList ) )? otherlv_4= ']' ) | ( ( (lv_op_5_0= '.' ) ) ( ( (lv_right_6_1= ruleAbstractRef | lv_right_6_2= ruleStringLiteral ) ) ) ) ) )* )
            {
            // InternalMyDsl.g:6613:2: (this_Primary_0= rulePrimary ( () ( ( ( (lv_op_2_0= '[' ) ) ( (lv_right_3_0= ruleExpressionList ) )? otherlv_4= ']' ) | ( ( (lv_op_5_0= '.' ) ) ( ( (lv_right_6_1= ruleAbstractRef | lv_right_6_2= ruleStringLiteral ) ) ) ) ) )* )
            // InternalMyDsl.g:6614:3: this_Primary_0= rulePrimary ( () ( ( ( (lv_op_2_0= '[' ) ) ( (lv_right_3_0= ruleExpressionList ) )? otherlv_4= ']' ) | ( ( (lv_op_5_0= '.' ) ) ( ( (lv_right_6_1= ruleAbstractRef | lv_right_6_2= ruleStringLiteral ) ) ) ) ) )*
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getAccessAccess().getPrimaryParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_64);
            this_Primary_0=rulePrimary();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Primary_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalMyDsl.g:6622:3: ( () ( ( ( (lv_op_2_0= '[' ) ) ( (lv_right_3_0= ruleExpressionList ) )? otherlv_4= ']' ) | ( ( (lv_op_5_0= '.' ) ) ( ( (lv_right_6_1= ruleAbstractRef | lv_right_6_2= ruleStringLiteral ) ) ) ) ) )*
            loop126:
            do {
                int alt126=2;
                int LA126_0 = input.LA(1);

                if ( (LA126_0==24||LA126_0==155) ) {
                    alt126=1;
                }


                switch (alt126) {
            	case 1 :
            	    // InternalMyDsl.g:6623:4: () ( ( ( (lv_op_2_0= '[' ) ) ( (lv_right_3_0= ruleExpressionList ) )? otherlv_4= ']' ) | ( ( (lv_op_5_0= '.' ) ) ( ( (lv_right_6_1= ruleAbstractRef | lv_right_6_2= ruleStringLiteral ) ) ) ) )
            	    {
            	    // InternalMyDsl.g:6623:4: ()
            	    // InternalMyDsl.g:6624:5: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      					current = forceCreateModelElementAndSet(
            	      						grammarAccess.getAccessAccess().getAccessLeftAction_1_0(),
            	      						current);
            	      				
            	    }

            	    }

            	    // InternalMyDsl.g:6630:4: ( ( ( (lv_op_2_0= '[' ) ) ( (lv_right_3_0= ruleExpressionList ) )? otherlv_4= ']' ) | ( ( (lv_op_5_0= '.' ) ) ( ( (lv_right_6_1= ruleAbstractRef | lv_right_6_2= ruleStringLiteral ) ) ) ) )
            	    int alt125=2;
            	    int LA125_0 = input.LA(1);

            	    if ( (LA125_0==24) ) {
            	        alt125=1;
            	    }
            	    else if ( (LA125_0==155) ) {
            	        alt125=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 125, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt125) {
            	        case 1 :
            	            // InternalMyDsl.g:6631:5: ( ( (lv_op_2_0= '[' ) ) ( (lv_right_3_0= ruleExpressionList ) )? otherlv_4= ']' )
            	            {
            	            // InternalMyDsl.g:6631:5: ( ( (lv_op_2_0= '[' ) ) ( (lv_right_3_0= ruleExpressionList ) )? otherlv_4= ']' )
            	            // InternalMyDsl.g:6632:6: ( (lv_op_2_0= '[' ) ) ( (lv_right_3_0= ruleExpressionList ) )? otherlv_4= ']'
            	            {
            	            // InternalMyDsl.g:6632:6: ( (lv_op_2_0= '[' ) )
            	            // InternalMyDsl.g:6633:7: (lv_op_2_0= '[' )
            	            {
            	            // InternalMyDsl.g:6633:7: (lv_op_2_0= '[' )
            	            // InternalMyDsl.g:6634:8: lv_op_2_0= '['
            	            {
            	            lv_op_2_0=(Token)match(input,24,FOLLOW_17); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_op_2_0, grammarAccess.getAccessAccess().getOpLeftSquareBracketKeyword_1_1_0_0_0());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getAccessRule());
            	              								}
            	              								setWithLastConsumed(current, "op", lv_op_2_0, "[");
            	              							
            	            }

            	            }


            	            }

            	            // InternalMyDsl.g:6646:6: ( (lv_right_3_0= ruleExpressionList ) )?
            	            int alt123=2;
            	            int LA123_0 = input.LA(1);

            	            if ( ((LA123_0>=RULE_ID && LA123_0<=RULE_KEYWORD)||LA123_0==20||LA123_0==24||LA123_0==26||LA123_0==30||(LA123_0>=38 && LA123_0<=39)||LA123_0==41||LA123_0==45||LA123_0==50||(LA123_0>=52 && LA123_0<=104)||(LA123_0>=112 && LA123_0<=135)||LA123_0==146||(LA123_0>=150 && LA123_0<=154)) ) {
            	                alt123=1;
            	            }
            	            switch (alt123) {
            	                case 1 :
            	                    // InternalMyDsl.g:6647:7: (lv_right_3_0= ruleExpressionList )
            	                    {
            	                    // InternalMyDsl.g:6647:7: (lv_right_3_0= ruleExpressionList )
            	                    // InternalMyDsl.g:6648:8: lv_right_3_0= ruleExpressionList
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      								newCompositeNode(grammarAccess.getAccessAccess().getRightExpressionListParserRuleCall_1_1_0_1_0());
            	                      							
            	                    }
            	                    pushFollow(FOLLOW_18);
            	                    lv_right_3_0=ruleExpressionList();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      								if (current==null) {
            	                      									current = createModelElementForParent(grammarAccess.getAccessRule());
            	                      								}
            	                      								set(
            	                      									current,
            	                      									"right",
            	                      									lv_right_3_0,
            	                      									"org.xtext.example.mydsl.MyDsl.ExpressionList");
            	                      								afterParserOrEnumRuleCall();
            	                      							
            	                    }

            	                    }


            	                    }
            	                    break;

            	            }

            	            otherlv_4=(Token)match(input,25,FOLLOW_64); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              						newLeafNode(otherlv_4, grammarAccess.getAccessAccess().getRightSquareBracketKeyword_1_1_0_2());
            	              					
            	            }

            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalMyDsl.g:6671:5: ( ( (lv_op_5_0= '.' ) ) ( ( (lv_right_6_1= ruleAbstractRef | lv_right_6_2= ruleStringLiteral ) ) ) )
            	            {
            	            // InternalMyDsl.g:6671:5: ( ( (lv_op_5_0= '.' ) ) ( ( (lv_right_6_1= ruleAbstractRef | lv_right_6_2= ruleStringLiteral ) ) ) )
            	            // InternalMyDsl.g:6672:6: ( (lv_op_5_0= '.' ) ) ( ( (lv_right_6_1= ruleAbstractRef | lv_right_6_2= ruleStringLiteral ) ) )
            	            {
            	            // InternalMyDsl.g:6672:6: ( (lv_op_5_0= '.' ) )
            	            // InternalMyDsl.g:6673:7: (lv_op_5_0= '.' )
            	            {
            	            // InternalMyDsl.g:6673:7: (lv_op_5_0= '.' )
            	            // InternalMyDsl.g:6674:8: lv_op_5_0= '.'
            	            {
            	            lv_op_5_0=(Token)match(input,155,FOLLOW_20); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								newLeafNode(lv_op_5_0, grammarAccess.getAccessAccess().getOpFullStopKeyword_1_1_1_0_0());
            	              							
            	            }
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElement(grammarAccess.getAccessRule());
            	              								}
            	              								setWithLastConsumed(current, "op", lv_op_5_0, ".");
            	              							
            	            }

            	            }


            	            }

            	            // InternalMyDsl.g:6686:6: ( ( (lv_right_6_1= ruleAbstractRef | lv_right_6_2= ruleStringLiteral ) ) )
            	            // InternalMyDsl.g:6687:7: ( (lv_right_6_1= ruleAbstractRef | lv_right_6_2= ruleStringLiteral ) )
            	            {
            	            // InternalMyDsl.g:6687:7: ( (lv_right_6_1= ruleAbstractRef | lv_right_6_2= ruleStringLiteral ) )
            	            // InternalMyDsl.g:6688:8: (lv_right_6_1= ruleAbstractRef | lv_right_6_2= ruleStringLiteral )
            	            {
            	            // InternalMyDsl.g:6688:8: (lv_right_6_1= ruleAbstractRef | lv_right_6_2= ruleStringLiteral )
            	            int alt124=2;
            	            int LA124_0 = input.LA(1);

            	            if ( (LA124_0==RULE_ID||LA124_0==50||(LA124_0>=52 && LA124_0<=104)) ) {
            	                alt124=1;
            	            }
            	            else if ( (LA124_0==RULE_STRING) ) {
            	                alt124=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 124, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt124) {
            	                case 1 :
            	                    // InternalMyDsl.g:6689:9: lv_right_6_1= ruleAbstractRef
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      									newCompositeNode(grammarAccess.getAccessAccess().getRightAbstractRefParserRuleCall_1_1_1_1_0_0());
            	                      								
            	                    }
            	                    pushFollow(FOLLOW_64);
            	                    lv_right_6_1=ruleAbstractRef();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      									if (current==null) {
            	                      										current = createModelElementForParent(grammarAccess.getAccessRule());
            	                      									}
            	                      									set(
            	                      										current,
            	                      										"right",
            	                      										lv_right_6_1,
            	                      										"org.xtext.example.mydsl.MyDsl.AbstractRef");
            	                      									afterParserOrEnumRuleCall();
            	                      								
            	                    }

            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalMyDsl.g:6705:9: lv_right_6_2= ruleStringLiteral
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      									newCompositeNode(grammarAccess.getAccessAccess().getRightStringLiteralParserRuleCall_1_1_1_1_0_1());
            	                      								
            	                    }
            	                    pushFollow(FOLLOW_64);
            	                    lv_right_6_2=ruleStringLiteral();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      									if (current==null) {
            	                      										current = createModelElementForParent(grammarAccess.getAccessRule());
            	                      									}
            	                      									set(
            	                      										current,
            	                      										"right",
            	                      										lv_right_6_2,
            	                      										"org.xtext.example.mydsl.MyDsl.StringLiteral");
            	                      									afterParserOrEnumRuleCall();
            	                      								
            	                    }

            	                    }
            	                    break;

            	            }


            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop126;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAccess"


    // $ANTLR start "entryRulePrimary"
    // InternalMyDsl.g:6730:1: entryRulePrimary returns [EObject current=null] : iv_rulePrimary= rulePrimary EOF ;
    public final EObject entryRulePrimary() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrimary = null;


        try {
            // InternalMyDsl.g:6730:48: (iv_rulePrimary= rulePrimary EOF )
            // InternalMyDsl.g:6731:2: iv_rulePrimary= rulePrimary EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimaryRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePrimary=rulePrimary();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimary; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimary"


    // $ANTLR start "rulePrimary"
    // InternalMyDsl.g:6737:1: rulePrimary returns [EObject current=null] : (this_TerminalExpression_0= ruleTerminalExpression | this_AbstractRef_1= ruleAbstractRef | (otherlv_2= '(' this_ExpressionList_3= ruleExpressionList otherlv_4= ')' ) | (otherlv_5= '[' () ( (lv_exprs_7_0= ruleExpressionList ) )? otherlv_8= ']' ) | (otherlv_9= '{' () ( (lv_left_11_0= ruleExpression ) ) ( (lv_op_12_0= ',' ) ) ( (lv_right_13_0= ruleExpression ) ) (otherlv_14= ',' ( (lv_z_15_0= ruleExpression ) ) )? otherlv_16= '}' ) ) ;
    public final EObject rulePrimary() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_8=null;
        Token otherlv_9=null;
        Token lv_op_12_0=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        EObject this_TerminalExpression_0 = null;

        EObject this_AbstractRef_1 = null;

        EObject this_ExpressionList_3 = null;

        EObject lv_exprs_7_0 = null;

        EObject lv_left_11_0 = null;

        EObject lv_right_13_0 = null;

        EObject lv_z_15_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:6743:2: ( (this_TerminalExpression_0= ruleTerminalExpression | this_AbstractRef_1= ruleAbstractRef | (otherlv_2= '(' this_ExpressionList_3= ruleExpressionList otherlv_4= ')' ) | (otherlv_5= '[' () ( (lv_exprs_7_0= ruleExpressionList ) )? otherlv_8= ']' ) | (otherlv_9= '{' () ( (lv_left_11_0= ruleExpression ) ) ( (lv_op_12_0= ',' ) ) ( (lv_right_13_0= ruleExpression ) ) (otherlv_14= ',' ( (lv_z_15_0= ruleExpression ) ) )? otherlv_16= '}' ) ) )
            // InternalMyDsl.g:6744:2: (this_TerminalExpression_0= ruleTerminalExpression | this_AbstractRef_1= ruleAbstractRef | (otherlv_2= '(' this_ExpressionList_3= ruleExpressionList otherlv_4= ')' ) | (otherlv_5= '[' () ( (lv_exprs_7_0= ruleExpressionList ) )? otherlv_8= ']' ) | (otherlv_9= '{' () ( (lv_left_11_0= ruleExpression ) ) ( (lv_op_12_0= ',' ) ) ( (lv_right_13_0= ruleExpression ) ) (otherlv_14= ',' ( (lv_z_15_0= ruleExpression ) ) )? otherlv_16= '}' ) )
            {
            // InternalMyDsl.g:6744:2: (this_TerminalExpression_0= ruleTerminalExpression | this_AbstractRef_1= ruleAbstractRef | (otherlv_2= '(' this_ExpressionList_3= ruleExpressionList otherlv_4= ')' ) | (otherlv_5= '[' () ( (lv_exprs_7_0= ruleExpressionList ) )? otherlv_8= ']' ) | (otherlv_9= '{' () ( (lv_left_11_0= ruleExpression ) ) ( (lv_op_12_0= ',' ) ) ( (lv_right_13_0= ruleExpression ) ) (otherlv_14= ',' ( (lv_z_15_0= ruleExpression ) ) )? otherlv_16= '}' ) )
            int alt129=5;
            switch ( input.LA(1) ) {
            case RULE_STRING:
            case RULE_INTEGER:
            case RULE_DOUBLE:
            case RULE_BOOLEAN:
            case RULE_KEYWORD:
                {
                alt129=1;
                }
                break;
            case RULE_ID:
            case 50:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
            case 63:
            case 64:
            case 65:
            case 66:
            case 67:
            case 68:
            case 69:
            case 70:
            case 71:
            case 72:
            case 73:
            case 74:
            case 75:
            case 76:
            case 77:
            case 78:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 91:
            case 92:
            case 93:
            case 94:
            case 95:
            case 96:
            case 97:
            case 98:
            case 99:
            case 100:
            case 101:
            case 102:
            case 103:
            case 104:
                {
                alt129=2;
                }
                break;
            case 41:
                {
                alt129=3;
                }
                break;
            case 24:
                {
                alt129=4;
                }
                break;
            case 45:
                {
                alt129=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 129, 0, input);

                throw nvae;
            }

            switch (alt129) {
                case 1 :
                    // InternalMyDsl.g:6745:3: this_TerminalExpression_0= ruleTerminalExpression
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPrimaryAccess().getTerminalExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TerminalExpression_0=ruleTerminalExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TerminalExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:6754:3: this_AbstractRef_1= ruleAbstractRef
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPrimaryAccess().getAbstractRefParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AbstractRef_1=ruleAbstractRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AbstractRef_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMyDsl.g:6763:3: (otherlv_2= '(' this_ExpressionList_3= ruleExpressionList otherlv_4= ')' )
                    {
                    // InternalMyDsl.g:6763:3: (otherlv_2= '(' this_ExpressionList_3= ruleExpressionList otherlv_4= ')' )
                    // InternalMyDsl.g:6764:4: otherlv_2= '(' this_ExpressionList_3= ruleExpressionList otherlv_4= ')'
                    {
                    otherlv_2=(Token)match(input,41,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPrimaryAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPrimaryAccess().getExpressionListParserRuleCall_2_1());
                      			
                    }
                    pushFollow(FOLLOW_37);
                    this_ExpressionList_3=ruleExpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ExpressionList_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_4=(Token)match(input,42,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getPrimaryAccess().getRightParenthesisKeyword_2_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalMyDsl.g:6782:3: (otherlv_5= '[' () ( (lv_exprs_7_0= ruleExpressionList ) )? otherlv_8= ']' )
                    {
                    // InternalMyDsl.g:6782:3: (otherlv_5= '[' () ( (lv_exprs_7_0= ruleExpressionList ) )? otherlv_8= ']' )
                    // InternalMyDsl.g:6783:4: otherlv_5= '[' () ( (lv_exprs_7_0= ruleExpressionList ) )? otherlv_8= ']'
                    {
                    otherlv_5=(Token)match(input,24,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getPrimaryAccess().getLeftSquareBracketKeyword_3_0());
                      			
                    }
                    // InternalMyDsl.g:6787:4: ()
                    // InternalMyDsl.g:6788:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryAccess().getArrayAction_3_1(),
                      						current);
                      				
                    }

                    }

                    // InternalMyDsl.g:6794:4: ( (lv_exprs_7_0= ruleExpressionList ) )?
                    int alt127=2;
                    int LA127_0 = input.LA(1);

                    if ( ((LA127_0>=RULE_ID && LA127_0<=RULE_KEYWORD)||LA127_0==20||LA127_0==24||LA127_0==26||LA127_0==30||(LA127_0>=38 && LA127_0<=39)||LA127_0==41||LA127_0==45||LA127_0==50||(LA127_0>=52 && LA127_0<=104)||(LA127_0>=112 && LA127_0<=135)||LA127_0==146||(LA127_0>=150 && LA127_0<=154)) ) {
                        alt127=1;
                    }
                    switch (alt127) {
                        case 1 :
                            // InternalMyDsl.g:6795:5: (lv_exprs_7_0= ruleExpressionList )
                            {
                            // InternalMyDsl.g:6795:5: (lv_exprs_7_0= ruleExpressionList )
                            // InternalMyDsl.g:6796:6: lv_exprs_7_0= ruleExpressionList
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getPrimaryAccess().getExprsExpressionListParserRuleCall_3_2_0());
                              					
                            }
                            pushFollow(FOLLOW_18);
                            lv_exprs_7_0=ruleExpressionList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getPrimaryRule());
                              						}
                              						set(
                              							current,
                              							"exprs",
                              							lv_exprs_7_0,
                              							"org.xtext.example.mydsl.MyDsl.ExpressionList");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_8=(Token)match(input,25,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getPrimaryAccess().getRightSquareBracketKeyword_3_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalMyDsl.g:6819:3: (otherlv_9= '{' () ( (lv_left_11_0= ruleExpression ) ) ( (lv_op_12_0= ',' ) ) ( (lv_right_13_0= ruleExpression ) ) (otherlv_14= ',' ( (lv_z_15_0= ruleExpression ) ) )? otherlv_16= '}' )
                    {
                    // InternalMyDsl.g:6819:3: (otherlv_9= '{' () ( (lv_left_11_0= ruleExpression ) ) ( (lv_op_12_0= ',' ) ) ( (lv_right_13_0= ruleExpression ) ) (otherlv_14= ',' ( (lv_z_15_0= ruleExpression ) ) )? otherlv_16= '}' )
                    // InternalMyDsl.g:6820:4: otherlv_9= '{' () ( (lv_left_11_0= ruleExpression ) ) ( (lv_op_12_0= ',' ) ) ( (lv_right_13_0= ruleExpression ) ) (otherlv_14= ',' ( (lv_z_15_0= ruleExpression ) ) )? otherlv_16= '}'
                    {
                    otherlv_9=(Token)match(input,45,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getPrimaryAccess().getLeftCurlyBracketKeyword_4_0());
                      			
                    }
                    // InternalMyDsl.g:6824:4: ()
                    // InternalMyDsl.g:6825:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPrimaryAccess().getPointAction_4_1(),
                      						current);
                      				
                    }

                    }

                    // InternalMyDsl.g:6831:4: ( (lv_left_11_0= ruleExpression ) )
                    // InternalMyDsl.g:6832:5: (lv_left_11_0= ruleExpression )
                    {
                    // InternalMyDsl.g:6832:5: (lv_left_11_0= ruleExpression )
                    // InternalMyDsl.g:6833:6: lv_left_11_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryAccess().getLeftExpressionParserRuleCall_4_2_0());
                      					
                    }
                    pushFollow(FOLLOW_65);
                    lv_left_11_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryRule());
                      						}
                      						set(
                      							current,
                      							"left",
                      							lv_left_11_0,
                      							"org.xtext.example.mydsl.MyDsl.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyDsl.g:6850:4: ( (lv_op_12_0= ',' ) )
                    // InternalMyDsl.g:6851:5: (lv_op_12_0= ',' )
                    {
                    // InternalMyDsl.g:6851:5: (lv_op_12_0= ',' )
                    // InternalMyDsl.g:6852:6: lv_op_12_0= ','
                    {
                    lv_op_12_0=(Token)match(input,111,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_op_12_0, grammarAccess.getPrimaryAccess().getOpCommaKeyword_4_3_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPrimaryRule());
                      						}
                      						setWithLastConsumed(current, "op", lv_op_12_0, ",");
                      					
                    }

                    }


                    }

                    // InternalMyDsl.g:6864:4: ( (lv_right_13_0= ruleExpression ) )
                    // InternalMyDsl.g:6865:5: (lv_right_13_0= ruleExpression )
                    {
                    // InternalMyDsl.g:6865:5: (lv_right_13_0= ruleExpression )
                    // InternalMyDsl.g:6866:6: lv_right_13_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPrimaryAccess().getRightExpressionParserRuleCall_4_4_0());
                      					
                    }
                    pushFollow(FOLLOW_66);
                    lv_right_13_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPrimaryRule());
                      						}
                      						set(
                      							current,
                      							"right",
                      							lv_right_13_0,
                      							"org.xtext.example.mydsl.MyDsl.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyDsl.g:6883:4: (otherlv_14= ',' ( (lv_z_15_0= ruleExpression ) ) )?
                    int alt128=2;
                    int LA128_0 = input.LA(1);

                    if ( (LA128_0==111) ) {
                        alt128=1;
                    }
                    switch (alt128) {
                        case 1 :
                            // InternalMyDsl.g:6884:5: otherlv_14= ',' ( (lv_z_15_0= ruleExpression ) )
                            {
                            otherlv_14=(Token)match(input,111,FOLLOW_5); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_14, grammarAccess.getPrimaryAccess().getCommaKeyword_4_5_0());
                              				
                            }
                            // InternalMyDsl.g:6888:5: ( (lv_z_15_0= ruleExpression ) )
                            // InternalMyDsl.g:6889:6: (lv_z_15_0= ruleExpression )
                            {
                            // InternalMyDsl.g:6889:6: (lv_z_15_0= ruleExpression )
                            // InternalMyDsl.g:6890:7: lv_z_15_0= ruleExpression
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getPrimaryAccess().getZExpressionParserRuleCall_4_5_1_0());
                              						
                            }
                            pushFollow(FOLLOW_50);
                            lv_z_15_0=ruleExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getPrimaryRule());
                              							}
                              							set(
                              								current,
                              								"z",
                              								lv_z_15_0,
                              								"org.xtext.example.mydsl.MyDsl.Expression");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_16=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_16, grammarAccess.getPrimaryAccess().getRightCurlyBracketKeyword_4_6());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimary"


    // $ANTLR start "entryRuleAbstractRef"
    // InternalMyDsl.g:6917:1: entryRuleAbstractRef returns [EObject current=null] : iv_ruleAbstractRef= ruleAbstractRef EOF ;
    public final EObject entryRuleAbstractRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAbstractRef = null;


        try {
            // InternalMyDsl.g:6917:52: (iv_ruleAbstractRef= ruleAbstractRef EOF )
            // InternalMyDsl.g:6918:2: iv_ruleAbstractRef= ruleAbstractRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAbstractRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAbstractRef=ruleAbstractRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAbstractRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAbstractRef"


    // $ANTLR start "ruleAbstractRef"
    // InternalMyDsl.g:6924:1: ruleAbstractRef returns [EObject current=null] : ( ( ( ruleFunction )=>this_Function_0= ruleFunction ) | this_VariableRef_1= ruleVariableRef ) ;
    public final EObject ruleAbstractRef() throws RecognitionException {
        EObject current = null;

        EObject this_Function_0 = null;

        EObject this_VariableRef_1 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:6930:2: ( ( ( ( ruleFunction )=>this_Function_0= ruleFunction ) | this_VariableRef_1= ruleVariableRef ) )
            // InternalMyDsl.g:6931:2: ( ( ( ruleFunction )=>this_Function_0= ruleFunction ) | this_VariableRef_1= ruleVariableRef )
            {
            // InternalMyDsl.g:6931:2: ( ( ( ruleFunction )=>this_Function_0= ruleFunction ) | this_VariableRef_1= ruleVariableRef )
            int alt130=2;
            alt130 = dfa130.predict(input);
            switch (alt130) {
                case 1 :
                    // InternalMyDsl.g:6932:3: ( ( ruleFunction )=>this_Function_0= ruleFunction )
                    {
                    // InternalMyDsl.g:6932:3: ( ( ruleFunction )=>this_Function_0= ruleFunction )
                    // InternalMyDsl.g:6933:4: ( ruleFunction )=>this_Function_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAbstractRefAccess().getFunctionParserRuleCall_0());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_Function_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_Function_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:6944:3: this_VariableRef_1= ruleVariableRef
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAbstractRefAccess().getVariableRefParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_VariableRef_1=ruleVariableRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_VariableRef_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAbstractRef"


    // $ANTLR start "entryRuleFunction"
    // InternalMyDsl.g:6956:1: entryRuleFunction returns [EObject current=null] : iv_ruleFunction= ruleFunction EOF ;
    public final EObject entryRuleFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunction = null;


        try {
            // InternalMyDsl.g:6956:49: (iv_ruleFunction= ruleFunction EOF )
            // InternalMyDsl.g:6957:2: iv_ruleFunction= ruleFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunction=ruleFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunction"


    // $ANTLR start "ruleFunction"
    // InternalMyDsl.g:6963:1: ruleFunction returns [EObject current=null] : ( () ( (lv_left_1_0= ruleActionRef ) ) ( (lv_type_2_0= ruleTypeInfo ) )? otherlv_3= '(' ( (lv_right_4_0= ruleExpressionList ) )? otherlv_5= ')' ) ;
    public final EObject ruleFunction() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_left_1_0 = null;

        EObject lv_type_2_0 = null;

        EObject lv_right_4_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:6969:2: ( ( () ( (lv_left_1_0= ruleActionRef ) ) ( (lv_type_2_0= ruleTypeInfo ) )? otherlv_3= '(' ( (lv_right_4_0= ruleExpressionList ) )? otherlv_5= ')' ) )
            // InternalMyDsl.g:6970:2: ( () ( (lv_left_1_0= ruleActionRef ) ) ( (lv_type_2_0= ruleTypeInfo ) )? otherlv_3= '(' ( (lv_right_4_0= ruleExpressionList ) )? otherlv_5= ')' )
            {
            // InternalMyDsl.g:6970:2: ( () ( (lv_left_1_0= ruleActionRef ) ) ( (lv_type_2_0= ruleTypeInfo ) )? otherlv_3= '(' ( (lv_right_4_0= ruleExpressionList ) )? otherlv_5= ')' )
            // InternalMyDsl.g:6971:3: () ( (lv_left_1_0= ruleActionRef ) ) ( (lv_type_2_0= ruleTypeInfo ) )? otherlv_3= '(' ( (lv_right_4_0= ruleExpressionList ) )? otherlv_5= ')'
            {
            // InternalMyDsl.g:6971:3: ()
            // InternalMyDsl.g:6972:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getFunctionAccess().getFunctionAction_0(),
              					current);
              			
            }

            }

            // InternalMyDsl.g:6978:3: ( (lv_left_1_0= ruleActionRef ) )
            // InternalMyDsl.g:6979:4: (lv_left_1_0= ruleActionRef )
            {
            // InternalMyDsl.g:6979:4: (lv_left_1_0= ruleActionRef )
            // InternalMyDsl.g:6980:5: lv_left_1_0= ruleActionRef
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionAccess().getLeftActionRefParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_67);
            lv_left_1_0=ruleActionRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionRule());
              					}
              					set(
              						current,
              						"left",
              						lv_left_1_0,
              						"org.xtext.example.mydsl.MyDsl.ActionRef");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyDsl.g:6997:3: ( (lv_type_2_0= ruleTypeInfo ) )?
            int alt131=2;
            int LA131_0 = input.LA(1);

            if ( (LA131_0==144) ) {
                alt131=1;
            }
            switch (alt131) {
                case 1 :
                    // InternalMyDsl.g:6998:4: (lv_type_2_0= ruleTypeInfo )
                    {
                    // InternalMyDsl.g:6998:4: (lv_type_2_0= ruleTypeInfo )
                    // InternalMyDsl.g:6999:5: lv_type_2_0= ruleTypeInfo
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFunctionAccess().getTypeTypeInfoParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_68);
                    lv_type_2_0=ruleTypeInfo();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFunctionRule());
                      					}
                      					set(
                      						current,
                      						"type",
                      						lv_type_2_0,
                      						"org.xtext.example.mydsl.MyDsl.TypeInfo");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,41,FOLLOW_69); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_3());
              		
            }
            // InternalMyDsl.g:7020:3: ( (lv_right_4_0= ruleExpressionList ) )?
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( ((LA132_0>=RULE_ID && LA132_0<=RULE_KEYWORD)||LA132_0==20||LA132_0==24||LA132_0==26||LA132_0==30||(LA132_0>=38 && LA132_0<=39)||LA132_0==41||LA132_0==45||LA132_0==50||(LA132_0>=52 && LA132_0<=104)||(LA132_0>=112 && LA132_0<=135)||LA132_0==146||(LA132_0>=150 && LA132_0<=154)) ) {
                alt132=1;
            }
            switch (alt132) {
                case 1 :
                    // InternalMyDsl.g:7021:4: (lv_right_4_0= ruleExpressionList )
                    {
                    // InternalMyDsl.g:7021:4: (lv_right_4_0= ruleExpressionList )
                    // InternalMyDsl.g:7022:5: lv_right_4_0= ruleExpressionList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFunctionAccess().getRightExpressionListParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_37);
                    lv_right_4_0=ruleExpressionList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFunctionRule());
                      					}
                      					set(
                      						current,
                      						"right",
                      						lv_right_4_0,
                      						"org.xtext.example.mydsl.MyDsl.ExpressionList");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_5=(Token)match(input,42,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunction"


    // $ANTLR start "entryRuleExpressionList"
    // InternalMyDsl.g:7047:1: entryRuleExpressionList returns [EObject current=null] : iv_ruleExpressionList= ruleExpressionList EOF ;
    public final EObject entryRuleExpressionList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpressionList = null;


        try {
            // InternalMyDsl.g:7047:55: (iv_ruleExpressionList= ruleExpressionList EOF )
            // InternalMyDsl.g:7048:2: iv_ruleExpressionList= ruleExpressionList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpressionList=ruleExpressionList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpressionList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpressionList"


    // $ANTLR start "ruleExpressionList"
    // InternalMyDsl.g:7054:1: ruleExpressionList returns [EObject current=null] : ( ( ( (lv_exprs_0_0= ruleExpression ) ) (otherlv_1= ',' ( (lv_exprs_2_0= ruleExpression ) ) )* ) | ( ( (lv_exprs_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_exprs_5_0= ruleParameter ) ) )* ) ) ;
    public final EObject ruleExpressionList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        EObject lv_exprs_0_0 = null;

        EObject lv_exprs_2_0 = null;

        EObject lv_exprs_3_0 = null;

        EObject lv_exprs_5_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:7060:2: ( ( ( ( (lv_exprs_0_0= ruleExpression ) ) (otherlv_1= ',' ( (lv_exprs_2_0= ruleExpression ) ) )* ) | ( ( (lv_exprs_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_exprs_5_0= ruleParameter ) ) )* ) ) )
            // InternalMyDsl.g:7061:2: ( ( ( (lv_exprs_0_0= ruleExpression ) ) (otherlv_1= ',' ( (lv_exprs_2_0= ruleExpression ) ) )* ) | ( ( (lv_exprs_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_exprs_5_0= ruleParameter ) ) )* ) )
            {
            // InternalMyDsl.g:7061:2: ( ( ( (lv_exprs_0_0= ruleExpression ) ) (otherlv_1= ',' ( (lv_exprs_2_0= ruleExpression ) ) )* ) | ( ( (lv_exprs_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_exprs_5_0= ruleParameter ) ) )* ) )
            int alt135=2;
            alt135 = dfa135.predict(input);
            switch (alt135) {
                case 1 :
                    // InternalMyDsl.g:7062:3: ( ( (lv_exprs_0_0= ruleExpression ) ) (otherlv_1= ',' ( (lv_exprs_2_0= ruleExpression ) ) )* )
                    {
                    // InternalMyDsl.g:7062:3: ( ( (lv_exprs_0_0= ruleExpression ) ) (otherlv_1= ',' ( (lv_exprs_2_0= ruleExpression ) ) )* )
                    // InternalMyDsl.g:7063:4: ( (lv_exprs_0_0= ruleExpression ) ) (otherlv_1= ',' ( (lv_exprs_2_0= ruleExpression ) ) )*
                    {
                    // InternalMyDsl.g:7063:4: ( (lv_exprs_0_0= ruleExpression ) )
                    // InternalMyDsl.g:7064:5: (lv_exprs_0_0= ruleExpression )
                    {
                    // InternalMyDsl.g:7064:5: (lv_exprs_0_0= ruleExpression )
                    // InternalMyDsl.g:7065:6: lv_exprs_0_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpressionListAccess().getExprsExpressionParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_48);
                    lv_exprs_0_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpressionListRule());
                      						}
                      						add(
                      							current,
                      							"exprs",
                      							lv_exprs_0_0,
                      							"org.xtext.example.mydsl.MyDsl.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyDsl.g:7082:4: (otherlv_1= ',' ( (lv_exprs_2_0= ruleExpression ) ) )*
                    loop133:
                    do {
                        int alt133=2;
                        int LA133_0 = input.LA(1);

                        if ( (LA133_0==111) ) {
                            alt133=1;
                        }


                        switch (alt133) {
                    	case 1 :
                    	    // InternalMyDsl.g:7083:5: otherlv_1= ',' ( (lv_exprs_2_0= ruleExpression ) )
                    	    {
                    	    otherlv_1=(Token)match(input,111,FOLLOW_5); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_1, grammarAccess.getExpressionListAccess().getCommaKeyword_0_1_0());
                    	      				
                    	    }
                    	    // InternalMyDsl.g:7087:5: ( (lv_exprs_2_0= ruleExpression ) )
                    	    // InternalMyDsl.g:7088:6: (lv_exprs_2_0= ruleExpression )
                    	    {
                    	    // InternalMyDsl.g:7088:6: (lv_exprs_2_0= ruleExpression )
                    	    // InternalMyDsl.g:7089:7: lv_exprs_2_0= ruleExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getExpressionListAccess().getExprsExpressionParserRuleCall_0_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_48);
                    	    lv_exprs_2_0=ruleExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getExpressionListRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"exprs",
                    	      								lv_exprs_2_0,
                    	      								"org.xtext.example.mydsl.MyDsl.Expression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop133;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:7109:3: ( ( (lv_exprs_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_exprs_5_0= ruleParameter ) ) )* )
                    {
                    // InternalMyDsl.g:7109:3: ( ( (lv_exprs_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_exprs_5_0= ruleParameter ) ) )* )
                    // InternalMyDsl.g:7110:4: ( (lv_exprs_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_exprs_5_0= ruleParameter ) ) )*
                    {
                    // InternalMyDsl.g:7110:4: ( (lv_exprs_3_0= ruleParameter ) )
                    // InternalMyDsl.g:7111:5: (lv_exprs_3_0= ruleParameter )
                    {
                    // InternalMyDsl.g:7111:5: (lv_exprs_3_0= ruleParameter )
                    // InternalMyDsl.g:7112:6: lv_exprs_3_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExpressionListAccess().getExprsParameterParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_48);
                    lv_exprs_3_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExpressionListRule());
                      						}
                      						add(
                      							current,
                      							"exprs",
                      							lv_exprs_3_0,
                      							"org.xtext.example.mydsl.MyDsl.Parameter");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalMyDsl.g:7129:4: (otherlv_4= ',' ( (lv_exprs_5_0= ruleParameter ) ) )*
                    loop134:
                    do {
                        int alt134=2;
                        int LA134_0 = input.LA(1);

                        if ( (LA134_0==111) ) {
                            alt134=1;
                        }


                        switch (alt134) {
                    	case 1 :
                    	    // InternalMyDsl.g:7130:5: otherlv_4= ',' ( (lv_exprs_5_0= ruleParameter ) )
                    	    {
                    	    otherlv_4=(Token)match(input,111,FOLLOW_5); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getExpressionListAccess().getCommaKeyword_1_1_0());
                    	      				
                    	    }
                    	    // InternalMyDsl.g:7134:5: ( (lv_exprs_5_0= ruleParameter ) )
                    	    // InternalMyDsl.g:7135:6: (lv_exprs_5_0= ruleParameter )
                    	    {
                    	    // InternalMyDsl.g:7135:6: (lv_exprs_5_0= ruleParameter )
                    	    // InternalMyDsl.g:7136:7: lv_exprs_5_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getExpressionListAccess().getExprsParameterParserRuleCall_1_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_48);
                    	    lv_exprs_5_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getExpressionListRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"exprs",
                    	      								lv_exprs_5_0,
                    	      								"org.xtext.example.mydsl.MyDsl.Parameter");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop134;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpressionList"


    // $ANTLR start "entryRuleParameter"
    // InternalMyDsl.g:7159:1: entryRuleParameter returns [EObject current=null] : iv_ruleParameter= ruleParameter EOF ;
    public final EObject entryRuleParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameter = null;


        try {
            // InternalMyDsl.g:7159:50: (iv_ruleParameter= ruleParameter EOF )
            // InternalMyDsl.g:7160:2: iv_ruleParameter= ruleParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameter=ruleParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameter; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameter"


    // $ANTLR start "ruleParameter"
    // InternalMyDsl.g:7166:1: ruleParameter returns [EObject current=null] : ( () ( ( ( (lv_builtInFacetKey_1_1= ruleDefinitionFacetKey | lv_builtInFacetKey_1_2= ruleTypeFacetKey | lv_builtInFacetKey_1_3= ruleSpecialFacetKey | lv_builtInFacetKey_1_4= ruleActionFacetKey | lv_builtInFacetKey_1_5= ruleVarFacetKey ) ) ) | ( ( (lv_left_2_0= ruleVariableRef ) ) otherlv_3= ':' ) ) ( (lv_right_4_0= ruleExpression ) ) ) ;
    public final EObject ruleParameter() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_builtInFacetKey_1_1 = null;

        AntlrDatatypeRuleToken lv_builtInFacetKey_1_2 = null;

        AntlrDatatypeRuleToken lv_builtInFacetKey_1_3 = null;

        AntlrDatatypeRuleToken lv_builtInFacetKey_1_4 = null;

        AntlrDatatypeRuleToken lv_builtInFacetKey_1_5 = null;

        EObject lv_left_2_0 = null;

        EObject lv_right_4_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:7172:2: ( ( () ( ( ( (lv_builtInFacetKey_1_1= ruleDefinitionFacetKey | lv_builtInFacetKey_1_2= ruleTypeFacetKey | lv_builtInFacetKey_1_3= ruleSpecialFacetKey | lv_builtInFacetKey_1_4= ruleActionFacetKey | lv_builtInFacetKey_1_5= ruleVarFacetKey ) ) ) | ( ( (lv_left_2_0= ruleVariableRef ) ) otherlv_3= ':' ) ) ( (lv_right_4_0= ruleExpression ) ) ) )
            // InternalMyDsl.g:7173:2: ( () ( ( ( (lv_builtInFacetKey_1_1= ruleDefinitionFacetKey | lv_builtInFacetKey_1_2= ruleTypeFacetKey | lv_builtInFacetKey_1_3= ruleSpecialFacetKey | lv_builtInFacetKey_1_4= ruleActionFacetKey | lv_builtInFacetKey_1_5= ruleVarFacetKey ) ) ) | ( ( (lv_left_2_0= ruleVariableRef ) ) otherlv_3= ':' ) ) ( (lv_right_4_0= ruleExpression ) ) )
            {
            // InternalMyDsl.g:7173:2: ( () ( ( ( (lv_builtInFacetKey_1_1= ruleDefinitionFacetKey | lv_builtInFacetKey_1_2= ruleTypeFacetKey | lv_builtInFacetKey_1_3= ruleSpecialFacetKey | lv_builtInFacetKey_1_4= ruleActionFacetKey | lv_builtInFacetKey_1_5= ruleVarFacetKey ) ) ) | ( ( (lv_left_2_0= ruleVariableRef ) ) otherlv_3= ':' ) ) ( (lv_right_4_0= ruleExpression ) ) )
            // InternalMyDsl.g:7174:3: () ( ( ( (lv_builtInFacetKey_1_1= ruleDefinitionFacetKey | lv_builtInFacetKey_1_2= ruleTypeFacetKey | lv_builtInFacetKey_1_3= ruleSpecialFacetKey | lv_builtInFacetKey_1_4= ruleActionFacetKey | lv_builtInFacetKey_1_5= ruleVarFacetKey ) ) ) | ( ( (lv_left_2_0= ruleVariableRef ) ) otherlv_3= ':' ) ) ( (lv_right_4_0= ruleExpression ) )
            {
            // InternalMyDsl.g:7174:3: ()
            // InternalMyDsl.g:7175:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getParameterAccess().getParameterAction_0(),
              					current);
              			
            }

            }

            // InternalMyDsl.g:7181:3: ( ( ( (lv_builtInFacetKey_1_1= ruleDefinitionFacetKey | lv_builtInFacetKey_1_2= ruleTypeFacetKey | lv_builtInFacetKey_1_3= ruleSpecialFacetKey | lv_builtInFacetKey_1_4= ruleActionFacetKey | lv_builtInFacetKey_1_5= ruleVarFacetKey ) ) ) | ( ( (lv_left_2_0= ruleVariableRef ) ) otherlv_3= ':' ) )
            int alt137=2;
            int LA137_0 = input.LA(1);

            if ( (LA137_0==26||LA137_0==30||(LA137_0>=38 && LA137_0<=39)||(LA137_0>=112 && LA137_0<=135)) ) {
                alt137=1;
            }
            else if ( (LA137_0==RULE_ID||LA137_0==50||(LA137_0>=52 && LA137_0<=104)) ) {
                alt137=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 137, 0, input);

                throw nvae;
            }
            switch (alt137) {
                case 1 :
                    // InternalMyDsl.g:7182:4: ( ( (lv_builtInFacetKey_1_1= ruleDefinitionFacetKey | lv_builtInFacetKey_1_2= ruleTypeFacetKey | lv_builtInFacetKey_1_3= ruleSpecialFacetKey | lv_builtInFacetKey_1_4= ruleActionFacetKey | lv_builtInFacetKey_1_5= ruleVarFacetKey ) ) )
                    {
                    // InternalMyDsl.g:7182:4: ( ( (lv_builtInFacetKey_1_1= ruleDefinitionFacetKey | lv_builtInFacetKey_1_2= ruleTypeFacetKey | lv_builtInFacetKey_1_3= ruleSpecialFacetKey | lv_builtInFacetKey_1_4= ruleActionFacetKey | lv_builtInFacetKey_1_5= ruleVarFacetKey ) ) )
                    // InternalMyDsl.g:7183:5: ( (lv_builtInFacetKey_1_1= ruleDefinitionFacetKey | lv_builtInFacetKey_1_2= ruleTypeFacetKey | lv_builtInFacetKey_1_3= ruleSpecialFacetKey | lv_builtInFacetKey_1_4= ruleActionFacetKey | lv_builtInFacetKey_1_5= ruleVarFacetKey ) )
                    {
                    // InternalMyDsl.g:7183:5: ( (lv_builtInFacetKey_1_1= ruleDefinitionFacetKey | lv_builtInFacetKey_1_2= ruleTypeFacetKey | lv_builtInFacetKey_1_3= ruleSpecialFacetKey | lv_builtInFacetKey_1_4= ruleActionFacetKey | lv_builtInFacetKey_1_5= ruleVarFacetKey ) )
                    // InternalMyDsl.g:7184:6: (lv_builtInFacetKey_1_1= ruleDefinitionFacetKey | lv_builtInFacetKey_1_2= ruleTypeFacetKey | lv_builtInFacetKey_1_3= ruleSpecialFacetKey | lv_builtInFacetKey_1_4= ruleActionFacetKey | lv_builtInFacetKey_1_5= ruleVarFacetKey )
                    {
                    // InternalMyDsl.g:7184:6: (lv_builtInFacetKey_1_1= ruleDefinitionFacetKey | lv_builtInFacetKey_1_2= ruleTypeFacetKey | lv_builtInFacetKey_1_3= ruleSpecialFacetKey | lv_builtInFacetKey_1_4= ruleActionFacetKey | lv_builtInFacetKey_1_5= ruleVarFacetKey )
                    int alt136=5;
                    switch ( input.LA(1) ) {
                    case 26:
                    case 112:
                        {
                        alt136=1;
                        }
                        break;
                    case 113:
                    case 114:
                    case 115:
                    case 116:
                    case 117:
                        {
                        alt136=2;
                        }
                        break;
                    case 38:
                    case 39:
                    case 118:
                    case 119:
                    case 120:
                    case 121:
                    case 122:
                    case 123:
                    case 124:
                    case 125:
                    case 126:
                    case 127:
                    case 128:
                    case 129:
                    case 130:
                    case 131:
                    case 132:
                    case 133:
                        {
                        alt136=3;
                        }
                        break;
                    case 30:
                    case 134:
                        {
                        alt136=4;
                        }
                        break;
                    case 135:
                        {
                        alt136=5;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 136, 0, input);

                        throw nvae;
                    }

                    switch (alt136) {
                        case 1 :
                            // InternalMyDsl.g:7185:7: lv_builtInFacetKey_1_1= ruleDefinitionFacetKey
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getParameterAccess().getBuiltInFacetKeyDefinitionFacetKeyParserRuleCall_1_0_0_0());
                              						
                            }
                            pushFollow(FOLLOW_5);
                            lv_builtInFacetKey_1_1=ruleDefinitionFacetKey();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getParameterRule());
                              							}
                              							set(
                              								current,
                              								"builtInFacetKey",
                              								lv_builtInFacetKey_1_1,
                              								"org.xtext.example.mydsl.MyDsl.DefinitionFacetKey");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalMyDsl.g:7201:7: lv_builtInFacetKey_1_2= ruleTypeFacetKey
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getParameterAccess().getBuiltInFacetKeyTypeFacetKeyParserRuleCall_1_0_0_1());
                              						
                            }
                            pushFollow(FOLLOW_5);
                            lv_builtInFacetKey_1_2=ruleTypeFacetKey();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getParameterRule());
                              							}
                              							set(
                              								current,
                              								"builtInFacetKey",
                              								lv_builtInFacetKey_1_2,
                              								"org.xtext.example.mydsl.MyDsl.TypeFacetKey");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalMyDsl.g:7217:7: lv_builtInFacetKey_1_3= ruleSpecialFacetKey
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getParameterAccess().getBuiltInFacetKeySpecialFacetKeyParserRuleCall_1_0_0_2());
                              						
                            }
                            pushFollow(FOLLOW_5);
                            lv_builtInFacetKey_1_3=ruleSpecialFacetKey();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getParameterRule());
                              							}
                              							set(
                              								current,
                              								"builtInFacetKey",
                              								lv_builtInFacetKey_1_3,
                              								"org.xtext.example.mydsl.MyDsl.SpecialFacetKey");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;
                        case 4 :
                            // InternalMyDsl.g:7233:7: lv_builtInFacetKey_1_4= ruleActionFacetKey
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getParameterAccess().getBuiltInFacetKeyActionFacetKeyParserRuleCall_1_0_0_3());
                              						
                            }
                            pushFollow(FOLLOW_5);
                            lv_builtInFacetKey_1_4=ruleActionFacetKey();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getParameterRule());
                              							}
                              							set(
                              								current,
                              								"builtInFacetKey",
                              								lv_builtInFacetKey_1_4,
                              								"org.xtext.example.mydsl.MyDsl.ActionFacetKey");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;
                        case 5 :
                            // InternalMyDsl.g:7249:7: lv_builtInFacetKey_1_5= ruleVarFacetKey
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getParameterAccess().getBuiltInFacetKeyVarFacetKeyParserRuleCall_1_0_0_4());
                              						
                            }
                            pushFollow(FOLLOW_5);
                            lv_builtInFacetKey_1_5=ruleVarFacetKey();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getParameterRule());
                              							}
                              							set(
                              								current,
                              								"builtInFacetKey",
                              								lv_builtInFacetKey_1_5,
                              								"org.xtext.example.mydsl.MyDsl.VarFacetKey");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:7268:4: ( ( (lv_left_2_0= ruleVariableRef ) ) otherlv_3= ':' )
                    {
                    // InternalMyDsl.g:7268:4: ( ( (lv_left_2_0= ruleVariableRef ) ) otherlv_3= ':' )
                    // InternalMyDsl.g:7269:5: ( (lv_left_2_0= ruleVariableRef ) ) otherlv_3= ':'
                    {
                    // InternalMyDsl.g:7269:5: ( (lv_left_2_0= ruleVariableRef ) )
                    // InternalMyDsl.g:7270:6: (lv_left_2_0= ruleVariableRef )
                    {
                    // InternalMyDsl.g:7270:6: (lv_left_2_0= ruleVariableRef )
                    // InternalMyDsl.g:7271:7: lv_left_2_0= ruleVariableRef
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getParameterAccess().getLeftVariableRefParserRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_34);
                    lv_left_2_0=ruleVariableRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getParameterRule());
                      							}
                      							set(
                      								current,
                      								"left",
                      								lv_left_2_0,
                      								"org.xtext.example.mydsl.MyDsl.VariableRef");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,40,FOLLOW_5); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getParameterAccess().getColonKeyword_1_1_1());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalMyDsl.g:7294:3: ( (lv_right_4_0= ruleExpression ) )
            // InternalMyDsl.g:7295:4: (lv_right_4_0= ruleExpression )
            {
            // InternalMyDsl.g:7295:4: (lv_right_4_0= ruleExpression )
            // InternalMyDsl.g:7296:5: lv_right_4_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getParameterAccess().getRightExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_right_4_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getParameterRule());
              					}
              					set(
              						current,
              						"right",
              						lv_right_4_0,
              						"org.xtext.example.mydsl.MyDsl.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameter"


    // $ANTLR start "entryRuleUnitRef"
    // InternalMyDsl.g:7317:1: entryRuleUnitRef returns [EObject current=null] : iv_ruleUnitRef= ruleUnitRef EOF ;
    public final EObject entryRuleUnitRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnitRef = null;


        try {
            // InternalMyDsl.g:7317:48: (iv_ruleUnitRef= ruleUnitRef EOF )
            // InternalMyDsl.g:7318:2: iv_ruleUnitRef= ruleUnitRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnitRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnitRef=ruleUnitRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnitRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnitRef"


    // $ANTLR start "ruleUnitRef"
    // InternalMyDsl.g:7324:1: ruleUnitRef returns [EObject current=null] : ( () ( (otherlv_1= RULE_ID ) ) ) ;
    public final EObject ruleUnitRef() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalMyDsl.g:7330:2: ( ( () ( (otherlv_1= RULE_ID ) ) ) )
            // InternalMyDsl.g:7331:2: ( () ( (otherlv_1= RULE_ID ) ) )
            {
            // InternalMyDsl.g:7331:2: ( () ( (otherlv_1= RULE_ID ) ) )
            // InternalMyDsl.g:7332:3: () ( (otherlv_1= RULE_ID ) )
            {
            // InternalMyDsl.g:7332:3: ()
            // InternalMyDsl.g:7333:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getUnitRefAccess().getUnitNameAction_0(),
              					current);
              			
            }

            }

            // InternalMyDsl.g:7339:3: ( (otherlv_1= RULE_ID ) )
            // InternalMyDsl.g:7340:4: (otherlv_1= RULE_ID )
            {
            // InternalMyDsl.g:7340:4: (otherlv_1= RULE_ID )
            // InternalMyDsl.g:7341:5: otherlv_1= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getUnitRefRule());
              					}
              				
            }
            otherlv_1=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_1, grammarAccess.getUnitRefAccess().getRefUnitFakeDefinitionCrossReference_1_0());
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnitRef"


    // $ANTLR start "entryRuleVariableRef"
    // InternalMyDsl.g:7356:1: entryRuleVariableRef returns [EObject current=null] : iv_ruleVariableRef= ruleVariableRef EOF ;
    public final EObject entryRuleVariableRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableRef = null;


        try {
            // InternalMyDsl.g:7356:52: (iv_ruleVariableRef= ruleVariableRef EOF )
            // InternalMyDsl.g:7357:2: iv_ruleVariableRef= ruleVariableRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVariableRef=ruleVariableRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariableRef"


    // $ANTLR start "ruleVariableRef"
    // InternalMyDsl.g:7363:1: ruleVariableRef returns [EObject current=null] : ( () ( ( ruleValid_ID ) ) ) ;
    public final EObject ruleVariableRef() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalMyDsl.g:7369:2: ( ( () ( ( ruleValid_ID ) ) ) )
            // InternalMyDsl.g:7370:2: ( () ( ( ruleValid_ID ) ) )
            {
            // InternalMyDsl.g:7370:2: ( () ( ( ruleValid_ID ) ) )
            // InternalMyDsl.g:7371:3: () ( ( ruleValid_ID ) )
            {
            // InternalMyDsl.g:7371:3: ()
            // InternalMyDsl.g:7372:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getVariableRefAccess().getVariableRefAction_0(),
              					current);
              			
            }

            }

            // InternalMyDsl.g:7378:3: ( ( ruleValid_ID ) )
            // InternalMyDsl.g:7379:4: ( ruleValid_ID )
            {
            // InternalMyDsl.g:7379:4: ( ruleValid_ID )
            // InternalMyDsl.g:7380:5: ruleValid_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getVariableRefRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVariableRefAccess().getRefVarDefinitionCrossReference_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            ruleValid_ID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariableRef"


    // $ANTLR start "entryRuleTypeRef"
    // InternalMyDsl.g:7398:1: entryRuleTypeRef returns [EObject current=null] : iv_ruleTypeRef= ruleTypeRef EOF ;
    public final EObject entryRuleTypeRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeRef = null;


        try {
            // InternalMyDsl.g:7398:48: (iv_ruleTypeRef= ruleTypeRef EOF )
            // InternalMyDsl.g:7399:2: iv_ruleTypeRef= ruleTypeRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeRef=ruleTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeRef"


    // $ANTLR start "ruleTypeRef"
    // InternalMyDsl.g:7405:1: ruleTypeRef returns [EObject current=null] : ( ( () ( ( (otherlv_1= RULE_ID ) ) ( (lv_parameter_2_0= ruleTypeInfo ) )? ) ) | ( () (otherlv_4= 'species' ( (lv_parameter_5_0= ruleTypeInfo ) ) ) ) | ( () otherlv_7= 'image' ) ) ;
    public final EObject ruleTypeRef() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        Token otherlv_7=null;
        EObject lv_parameter_2_0 = null;

        EObject lv_parameter_5_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:7411:2: ( ( ( () ( ( (otherlv_1= RULE_ID ) ) ( (lv_parameter_2_0= ruleTypeInfo ) )? ) ) | ( () (otherlv_4= 'species' ( (lv_parameter_5_0= ruleTypeInfo ) ) ) ) | ( () otherlv_7= 'image' ) ) )
            // InternalMyDsl.g:7412:2: ( ( () ( ( (otherlv_1= RULE_ID ) ) ( (lv_parameter_2_0= ruleTypeInfo ) )? ) ) | ( () (otherlv_4= 'species' ( (lv_parameter_5_0= ruleTypeInfo ) ) ) ) | ( () otherlv_7= 'image' ) )
            {
            // InternalMyDsl.g:7412:2: ( ( () ( ( (otherlv_1= RULE_ID ) ) ( (lv_parameter_2_0= ruleTypeInfo ) )? ) ) | ( () (otherlv_4= 'species' ( (lv_parameter_5_0= ruleTypeInfo ) ) ) ) | ( () otherlv_7= 'image' ) )
            int alt139=3;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt139=1;
                }
                break;
            case 52:
                {
                alt139=2;
                }
                break;
            case 54:
                {
                alt139=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 139, 0, input);

                throw nvae;
            }

            switch (alt139) {
                case 1 :
                    // InternalMyDsl.g:7413:3: ( () ( ( (otherlv_1= RULE_ID ) ) ( (lv_parameter_2_0= ruleTypeInfo ) )? ) )
                    {
                    // InternalMyDsl.g:7413:3: ( () ( ( (otherlv_1= RULE_ID ) ) ( (lv_parameter_2_0= ruleTypeInfo ) )? ) )
                    // InternalMyDsl.g:7414:4: () ( ( (otherlv_1= RULE_ID ) ) ( (lv_parameter_2_0= ruleTypeInfo ) )? )
                    {
                    // InternalMyDsl.g:7414:4: ()
                    // InternalMyDsl.g:7415:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getTypeRefAccess().getTypeRefAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalMyDsl.g:7421:4: ( ( (otherlv_1= RULE_ID ) ) ( (lv_parameter_2_0= ruleTypeInfo ) )? )
                    // InternalMyDsl.g:7422:5: ( (otherlv_1= RULE_ID ) ) ( (lv_parameter_2_0= ruleTypeInfo ) )?
                    {
                    // InternalMyDsl.g:7422:5: ( (otherlv_1= RULE_ID ) )
                    // InternalMyDsl.g:7423:6: (otherlv_1= RULE_ID )
                    {
                    // InternalMyDsl.g:7423:6: (otherlv_1= RULE_ID )
                    // InternalMyDsl.g:7424:7: otherlv_1= RULE_ID
                    {
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getTypeRefRule());
                      							}
                      						
                    }
                    otherlv_1=(Token)match(input,RULE_ID,FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(otherlv_1, grammarAccess.getTypeRefAccess().getRefTypeDefinitionCrossReference_0_1_0_0());
                      						
                    }

                    }


                    }

                    // InternalMyDsl.g:7435:5: ( (lv_parameter_2_0= ruleTypeInfo ) )?
                    int alt138=2;
                    int LA138_0 = input.LA(1);

                    if ( (LA138_0==144) ) {
                        alt138=1;
                    }
                    switch (alt138) {
                        case 1 :
                            // InternalMyDsl.g:7436:6: (lv_parameter_2_0= ruleTypeInfo )
                            {
                            // InternalMyDsl.g:7436:6: (lv_parameter_2_0= ruleTypeInfo )
                            // InternalMyDsl.g:7437:7: lv_parameter_2_0= ruleTypeInfo
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getTypeRefAccess().getParameterTypeInfoParserRuleCall_0_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_parameter_2_0=ruleTypeInfo();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getTypeRefRule());
                              							}
                              							set(
                              								current,
                              								"parameter",
                              								lv_parameter_2_0,
                              								"org.xtext.example.mydsl.MyDsl.TypeInfo");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:7457:3: ( () (otherlv_4= 'species' ( (lv_parameter_5_0= ruleTypeInfo ) ) ) )
                    {
                    // InternalMyDsl.g:7457:3: ( () (otherlv_4= 'species' ( (lv_parameter_5_0= ruleTypeInfo ) ) ) )
                    // InternalMyDsl.g:7458:4: () (otherlv_4= 'species' ( (lv_parameter_5_0= ruleTypeInfo ) ) )
                    {
                    // InternalMyDsl.g:7458:4: ()
                    // InternalMyDsl.g:7459:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getTypeRefAccess().getTypeRefAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalMyDsl.g:7465:4: (otherlv_4= 'species' ( (lv_parameter_5_0= ruleTypeInfo ) ) )
                    // InternalMyDsl.g:7466:5: otherlv_4= 'species' ( (lv_parameter_5_0= ruleTypeInfo ) )
                    {
                    otherlv_4=(Token)match(input,52,FOLLOW_71); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_4, grammarAccess.getTypeRefAccess().getSpeciesKeyword_1_1_0());
                      				
                    }
                    // InternalMyDsl.g:7470:5: ( (lv_parameter_5_0= ruleTypeInfo ) )
                    // InternalMyDsl.g:7471:6: (lv_parameter_5_0= ruleTypeInfo )
                    {
                    // InternalMyDsl.g:7471:6: (lv_parameter_5_0= ruleTypeInfo )
                    // InternalMyDsl.g:7472:7: lv_parameter_5_0= ruleTypeInfo
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getTypeRefAccess().getParameterTypeInfoParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_parameter_5_0=ruleTypeInfo();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getTypeRefRule());
                      							}
                      							set(
                      								current,
                      								"parameter",
                      								lv_parameter_5_0,
                      								"org.xtext.example.mydsl.MyDsl.TypeInfo");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalMyDsl.g:7492:3: ( () otherlv_7= 'image' )
                    {
                    // InternalMyDsl.g:7492:3: ( () otherlv_7= 'image' )
                    // InternalMyDsl.g:7493:4: () otherlv_7= 'image'
                    {
                    // InternalMyDsl.g:7493:4: ()
                    // InternalMyDsl.g:7494:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getTypeRefAccess().getTypeRefAction_2_0(),
                      						current);
                      				
                    }

                    }

                    otherlv_7=(Token)match(input,54,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getTypeRefAccess().getImageKeyword_2_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeRef"


    // $ANTLR start "entryRuleTypeInfo"
    // InternalMyDsl.g:7509:1: entryRuleTypeInfo returns [EObject current=null] : iv_ruleTypeInfo= ruleTypeInfo EOF ;
    public final EObject entryRuleTypeInfo() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeInfo = null;


        try {
            // InternalMyDsl.g:7509:49: (iv_ruleTypeInfo= ruleTypeInfo EOF )
            // InternalMyDsl.g:7510:2: iv_ruleTypeInfo= ruleTypeInfo EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeInfoRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeInfo=ruleTypeInfo();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeInfo; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeInfo"


    // $ANTLR start "ruleTypeInfo"
    // InternalMyDsl.g:7516:1: ruleTypeInfo returns [EObject current=null] : (otherlv_0= '<' ( (lv_first_1_0= ruleTypeRef ) ) (otherlv_2= ',' ( (lv_second_3_0= ruleTypeRef ) ) )? ( ( '>' )=>otherlv_4= '>' ) ) ;
    public final EObject ruleTypeInfo() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_first_1_0 = null;

        EObject lv_second_3_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:7522:2: ( (otherlv_0= '<' ( (lv_first_1_0= ruleTypeRef ) ) (otherlv_2= ',' ( (lv_second_3_0= ruleTypeRef ) ) )? ( ( '>' )=>otherlv_4= '>' ) ) )
            // InternalMyDsl.g:7523:2: (otherlv_0= '<' ( (lv_first_1_0= ruleTypeRef ) ) (otherlv_2= ',' ( (lv_second_3_0= ruleTypeRef ) ) )? ( ( '>' )=>otherlv_4= '>' ) )
            {
            // InternalMyDsl.g:7523:2: (otherlv_0= '<' ( (lv_first_1_0= ruleTypeRef ) ) (otherlv_2= ',' ( (lv_second_3_0= ruleTypeRef ) ) )? ( ( '>' )=>otherlv_4= '>' ) )
            // InternalMyDsl.g:7524:3: otherlv_0= '<' ( (lv_first_1_0= ruleTypeRef ) ) (otherlv_2= ',' ( (lv_second_3_0= ruleTypeRef ) ) )? ( ( '>' )=>otherlv_4= '>' )
            {
            otherlv_0=(Token)match(input,144,FOLLOW_36); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTypeInfoAccess().getLessThanSignKeyword_0());
              		
            }
            // InternalMyDsl.g:7528:3: ( (lv_first_1_0= ruleTypeRef ) )
            // InternalMyDsl.g:7529:4: (lv_first_1_0= ruleTypeRef )
            {
            // InternalMyDsl.g:7529:4: (lv_first_1_0= ruleTypeRef )
            // InternalMyDsl.g:7530:5: lv_first_1_0= ruleTypeRef
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypeInfoAccess().getFirstTypeRefParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_72);
            lv_first_1_0=ruleTypeRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypeInfoRule());
              					}
              					set(
              						current,
              						"first",
              						lv_first_1_0,
              						"org.xtext.example.mydsl.MyDsl.TypeRef");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalMyDsl.g:7547:3: (otherlv_2= ',' ( (lv_second_3_0= ruleTypeRef ) ) )?
            int alt140=2;
            int LA140_0 = input.LA(1);

            if ( (LA140_0==111) ) {
                alt140=1;
            }
            switch (alt140) {
                case 1 :
                    // InternalMyDsl.g:7548:4: otherlv_2= ',' ( (lv_second_3_0= ruleTypeRef ) )
                    {
                    otherlv_2=(Token)match(input,111,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getTypeInfoAccess().getCommaKeyword_2_0());
                      			
                    }
                    // InternalMyDsl.g:7552:4: ( (lv_second_3_0= ruleTypeRef ) )
                    // InternalMyDsl.g:7553:5: (lv_second_3_0= ruleTypeRef )
                    {
                    // InternalMyDsl.g:7553:5: (lv_second_3_0= ruleTypeRef )
                    // InternalMyDsl.g:7554:6: lv_second_3_0= ruleTypeRef
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTypeInfoAccess().getSecondTypeRefParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_46);
                    lv_second_3_0=ruleTypeRef();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTypeInfoRule());
                      						}
                      						set(
                      							current,
                      							"second",
                      							lv_second_3_0,
                      							"org.xtext.example.mydsl.MyDsl.TypeRef");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalMyDsl.g:7572:3: ( ( '>' )=>otherlv_4= '>' )
            // InternalMyDsl.g:7573:4: ( '>' )=>otherlv_4= '>'
            {
            otherlv_4=(Token)match(input,106,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_4, grammarAccess.getTypeInfoAccess().getGreaterThanSignKeyword_3());
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeInfo"


    // $ANTLR start "entryRuleActionRef"
    // InternalMyDsl.g:7583:1: entryRuleActionRef returns [EObject current=null] : iv_ruleActionRef= ruleActionRef EOF ;
    public final EObject entryRuleActionRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleActionRef = null;


        try {
            // InternalMyDsl.g:7583:50: (iv_ruleActionRef= ruleActionRef EOF )
            // InternalMyDsl.g:7584:2: iv_ruleActionRef= ruleActionRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getActionRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleActionRef=ruleActionRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleActionRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleActionRef"


    // $ANTLR start "ruleActionRef"
    // InternalMyDsl.g:7590:1: ruleActionRef returns [EObject current=null] : ( () ( ( ruleValid_ID ) ) ) ;
    public final EObject ruleActionRef() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalMyDsl.g:7596:2: ( ( () ( ( ruleValid_ID ) ) ) )
            // InternalMyDsl.g:7597:2: ( () ( ( ruleValid_ID ) ) )
            {
            // InternalMyDsl.g:7597:2: ( () ( ( ruleValid_ID ) ) )
            // InternalMyDsl.g:7598:3: () ( ( ruleValid_ID ) )
            {
            // InternalMyDsl.g:7598:3: ()
            // InternalMyDsl.g:7599:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getActionRefAccess().getActionRefAction_0(),
              					current);
              			
            }

            }

            // InternalMyDsl.g:7605:3: ( ( ruleValid_ID ) )
            // InternalMyDsl.g:7606:4: ( ruleValid_ID )
            {
            // InternalMyDsl.g:7606:4: ( ruleValid_ID )
            // InternalMyDsl.g:7607:5: ruleValid_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getActionRefRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getActionRefAccess().getRefActionDefinitionCrossReference_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            ruleValid_ID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleActionRef"


    // $ANTLR start "entryRuleEquationRef"
    // InternalMyDsl.g:7625:1: entryRuleEquationRef returns [EObject current=null] : iv_ruleEquationRef= ruleEquationRef EOF ;
    public final EObject entryRuleEquationRef() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEquationRef = null;


        try {
            // InternalMyDsl.g:7625:52: (iv_ruleEquationRef= ruleEquationRef EOF )
            // InternalMyDsl.g:7626:2: iv_ruleEquationRef= ruleEquationRef EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEquationRefRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEquationRef=ruleEquationRef();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEquationRef; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEquationRef"


    // $ANTLR start "ruleEquationRef"
    // InternalMyDsl.g:7632:1: ruleEquationRef returns [EObject current=null] : ( () ( ( ruleValid_ID ) ) ) ;
    public final EObject ruleEquationRef() throws RecognitionException {
        EObject current = null;


        	enterRule();

        try {
            // InternalMyDsl.g:7638:2: ( ( () ( ( ruleValid_ID ) ) ) )
            // InternalMyDsl.g:7639:2: ( () ( ( ruleValid_ID ) ) )
            {
            // InternalMyDsl.g:7639:2: ( () ( ( ruleValid_ID ) ) )
            // InternalMyDsl.g:7640:3: () ( ( ruleValid_ID ) )
            {
            // InternalMyDsl.g:7640:3: ()
            // InternalMyDsl.g:7641:4: 
            {
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getEquationRefAccess().getEquationRefAction_0(),
              					current);
              			
            }

            }

            // InternalMyDsl.g:7647:3: ( ( ruleValid_ID ) )
            // InternalMyDsl.g:7648:4: ( ruleValid_ID )
            {
            // InternalMyDsl.g:7648:4: ( ruleValid_ID )
            // InternalMyDsl.g:7649:5: ruleValid_ID
            {
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getEquationRefRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEquationRefAccess().getRefEquationDefinitionCrossReference_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            ruleValid_ID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEquationRef"


    // $ANTLR start "entryRuleEquationDefinition"
    // InternalMyDsl.g:7667:1: entryRuleEquationDefinition returns [EObject current=null] : iv_ruleEquationDefinition= ruleEquationDefinition EOF ;
    public final EObject entryRuleEquationDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEquationDefinition = null;


        try {
            // InternalMyDsl.g:7667:59: (iv_ruleEquationDefinition= ruleEquationDefinition EOF )
            // InternalMyDsl.g:7668:2: iv_ruleEquationDefinition= ruleEquationDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEquationDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEquationDefinition=ruleEquationDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEquationDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEquationDefinition"


    // $ANTLR start "ruleEquationDefinition"
    // InternalMyDsl.g:7674:1: ruleEquationDefinition returns [EObject current=null] : (this_S_Equations_0= ruleS_Equations | this_EquationFakeDefinition_1= ruleEquationFakeDefinition ) ;
    public final EObject ruleEquationDefinition() throws RecognitionException {
        EObject current = null;

        EObject this_S_Equations_0 = null;

        EObject this_EquationFakeDefinition_1 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:7680:2: ( (this_S_Equations_0= ruleS_Equations | this_EquationFakeDefinition_1= ruleEquationFakeDefinition ) )
            // InternalMyDsl.g:7681:2: (this_S_Equations_0= ruleS_Equations | this_EquationFakeDefinition_1= ruleEquationFakeDefinition )
            {
            // InternalMyDsl.g:7681:2: (this_S_Equations_0= ruleS_Equations | this_EquationFakeDefinition_1= ruleEquationFakeDefinition )
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( (LA141_0==50) ) {
                alt141=1;
            }
            else if ( (LA141_0==161) ) {
                alt141=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 141, 0, input);

                throw nvae;
            }
            switch (alt141) {
                case 1 :
                    // InternalMyDsl.g:7682:3: this_S_Equations_0= ruleS_Equations
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEquationDefinitionAccess().getS_EquationsParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_S_Equations_0=ruleS_Equations();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_S_Equations_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:7691:3: this_EquationFakeDefinition_1= ruleEquationFakeDefinition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEquationDefinitionAccess().getEquationFakeDefinitionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EquationFakeDefinition_1=ruleEquationFakeDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EquationFakeDefinition_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEquationDefinition"


    // $ANTLR start "entryRuleTypeDefinition"
    // InternalMyDsl.g:7703:1: entryRuleTypeDefinition returns [EObject current=null] : iv_ruleTypeDefinition= ruleTypeDefinition EOF ;
    public final EObject entryRuleTypeDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeDefinition = null;


        try {
            // InternalMyDsl.g:7703:55: (iv_ruleTypeDefinition= ruleTypeDefinition EOF )
            // InternalMyDsl.g:7704:2: iv_ruleTypeDefinition= ruleTypeDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeDefinition=ruleTypeDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeDefinition"


    // $ANTLR start "ruleTypeDefinition"
    // InternalMyDsl.g:7710:1: ruleTypeDefinition returns [EObject current=null] : (this_S_Species_0= ruleS_Species | this_TypeFakeDefinition_1= ruleTypeFakeDefinition ) ;
    public final EObject ruleTypeDefinition() throws RecognitionException {
        EObject current = null;

        EObject this_S_Species_0 = null;

        EObject this_TypeFakeDefinition_1 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:7716:2: ( (this_S_Species_0= ruleS_Species | this_TypeFakeDefinition_1= ruleTypeFakeDefinition ) )
            // InternalMyDsl.g:7717:2: (this_S_Species_0= ruleS_Species | this_TypeFakeDefinition_1= ruleTypeFakeDefinition )
            {
            // InternalMyDsl.g:7717:2: (this_S_Species_0= ruleS_Species | this_TypeFakeDefinition_1= ruleTypeFakeDefinition )
            int alt142=2;
            int LA142_0 = input.LA(1);

            if ( ((LA142_0>=52 && LA142_0<=53)) ) {
                alt142=1;
            }
            else if ( (LA142_0==157) ) {
                alt142=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 142, 0, input);

                throw nvae;
            }
            switch (alt142) {
                case 1 :
                    // InternalMyDsl.g:7718:3: this_S_Species_0= ruleS_Species
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeDefinitionAccess().getS_SpeciesParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_S_Species_0=ruleS_Species();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_S_Species_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:7727:3: this_TypeFakeDefinition_1= ruleTypeFakeDefinition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTypeDefinitionAccess().getTypeFakeDefinitionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeFakeDefinition_1=ruleTypeFakeDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypeFakeDefinition_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeDefinition"


    // $ANTLR start "entryRuleVarDefinition"
    // InternalMyDsl.g:7739:1: entryRuleVarDefinition returns [EObject current=null] : iv_ruleVarDefinition= ruleVarDefinition EOF ;
    public final EObject entryRuleVarDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVarDefinition = null;


        try {
            // InternalMyDsl.g:7739:54: (iv_ruleVarDefinition= ruleVarDefinition EOF )
            // InternalMyDsl.g:7740:2: iv_ruleVarDefinition= ruleVarDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVarDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVarDefinition=ruleVarDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVarDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVarDefinition"


    // $ANTLR start "ruleVarDefinition"
    // InternalMyDsl.g:7746:1: ruleVarDefinition returns [EObject current=null] : ( ( ( ruleS_Declaration )=>this_S_Declaration_0= ruleS_Declaration ) | (this_Model_1= ruleModel | this_ArgumentDefinition_2= ruleArgumentDefinition | this_DefinitionFacet_3= ruleDefinitionFacet | this_VarFakeDefinition_4= ruleVarFakeDefinition | this_Import_5= ruleImport | this_S_Experiment_6= ruleS_Experiment ) ) ;
    public final EObject ruleVarDefinition() throws RecognitionException {
        EObject current = null;

        EObject this_S_Declaration_0 = null;

        EObject this_Model_1 = null;

        EObject this_ArgumentDefinition_2 = null;

        EObject this_DefinitionFacet_3 = null;

        EObject this_VarFakeDefinition_4 = null;

        EObject this_Import_5 = null;

        EObject this_S_Experiment_6 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:7752:2: ( ( ( ( ruleS_Declaration )=>this_S_Declaration_0= ruleS_Declaration ) | (this_Model_1= ruleModel | this_ArgumentDefinition_2= ruleArgumentDefinition | this_DefinitionFacet_3= ruleDefinitionFacet | this_VarFakeDefinition_4= ruleVarFakeDefinition | this_Import_5= ruleImport | this_S_Experiment_6= ruleS_Experiment ) ) )
            // InternalMyDsl.g:7753:2: ( ( ( ruleS_Declaration )=>this_S_Declaration_0= ruleS_Declaration ) | (this_Model_1= ruleModel | this_ArgumentDefinition_2= ruleArgumentDefinition | this_DefinitionFacet_3= ruleDefinitionFacet | this_VarFakeDefinition_4= ruleVarFakeDefinition | this_Import_5= ruleImport | this_S_Experiment_6= ruleS_Experiment ) )
            {
            // InternalMyDsl.g:7753:2: ( ( ( ruleS_Declaration )=>this_S_Declaration_0= ruleS_Declaration ) | (this_Model_1= ruleModel | this_ArgumentDefinition_2= ruleArgumentDefinition | this_DefinitionFacet_3= ruleDefinitionFacet | this_VarFakeDefinition_4= ruleVarFakeDefinition | this_Import_5= ruleImport | this_S_Experiment_6= ruleS_Experiment ) )
            int alt144=2;
            alt144 = dfa144.predict(input);
            switch (alt144) {
                case 1 :
                    // InternalMyDsl.g:7754:3: ( ( ruleS_Declaration )=>this_S_Declaration_0= ruleS_Declaration )
                    {
                    // InternalMyDsl.g:7754:3: ( ( ruleS_Declaration )=>this_S_Declaration_0= ruleS_Declaration )
                    // InternalMyDsl.g:7755:4: ( ruleS_Declaration )=>this_S_Declaration_0= ruleS_Declaration
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getVarDefinitionAccess().getS_DeclarationParserRuleCall_0());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_S_Declaration_0=ruleS_Declaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_S_Declaration_0;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:7766:3: (this_Model_1= ruleModel | this_ArgumentDefinition_2= ruleArgumentDefinition | this_DefinitionFacet_3= ruleDefinitionFacet | this_VarFakeDefinition_4= ruleVarFakeDefinition | this_Import_5= ruleImport | this_S_Experiment_6= ruleS_Experiment )
                    {
                    // InternalMyDsl.g:7766:3: (this_Model_1= ruleModel | this_ArgumentDefinition_2= ruleArgumentDefinition | this_DefinitionFacet_3= ruleDefinitionFacet | this_VarFakeDefinition_4= ruleVarFakeDefinition | this_Import_5= ruleImport | this_S_Experiment_6= ruleS_Experiment )
                    int alt143=6;
                    switch ( input.LA(1) ) {
                    case 17:
                    case 18:
                    case 23:
                        {
                        alt143=1;
                        }
                        break;
                    case RULE_ID:
                    case 52:
                    case 54:
                        {
                        alt143=2;
                        }
                        break;
                    case 26:
                    case 112:
                        {
                        alt143=3;
                        }
                        break;
                    case 160:
                        {
                        alt143=4;
                        }
                        break;
                    case 21:
                        {
                        alt143=5;
                        }
                        break;
                    case 55:
                        {
                        alt143=6;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 143, 0, input);

                        throw nvae;
                    }

                    switch (alt143) {
                        case 1 :
                            // InternalMyDsl.g:7767:4: this_Model_1= ruleModel
                            {
                            if ( state.backtracking==0 ) {

                              				newCompositeNode(grammarAccess.getVarDefinitionAccess().getModelParserRuleCall_1_0());
                              			
                            }
                            pushFollow(FOLLOW_2);
                            this_Model_1=ruleModel();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              				current = this_Model_1;
                              				afterParserOrEnumRuleCall();
                              			
                            }

                            }
                            break;
                        case 2 :
                            // InternalMyDsl.g:7776:4: this_ArgumentDefinition_2= ruleArgumentDefinition
                            {
                            if ( state.backtracking==0 ) {

                              				newCompositeNode(grammarAccess.getVarDefinitionAccess().getArgumentDefinitionParserRuleCall_1_1());
                              			
                            }
                            pushFollow(FOLLOW_2);
                            this_ArgumentDefinition_2=ruleArgumentDefinition();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              				current = this_ArgumentDefinition_2;
                              				afterParserOrEnumRuleCall();
                              			
                            }

                            }
                            break;
                        case 3 :
                            // InternalMyDsl.g:7785:4: this_DefinitionFacet_3= ruleDefinitionFacet
                            {
                            if ( state.backtracking==0 ) {

                              				newCompositeNode(grammarAccess.getVarDefinitionAccess().getDefinitionFacetParserRuleCall_1_2());
                              			
                            }
                            pushFollow(FOLLOW_2);
                            this_DefinitionFacet_3=ruleDefinitionFacet();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              				current = this_DefinitionFacet_3;
                              				afterParserOrEnumRuleCall();
                              			
                            }

                            }
                            break;
                        case 4 :
                            // InternalMyDsl.g:7794:4: this_VarFakeDefinition_4= ruleVarFakeDefinition
                            {
                            if ( state.backtracking==0 ) {

                              				newCompositeNode(grammarAccess.getVarDefinitionAccess().getVarFakeDefinitionParserRuleCall_1_3());
                              			
                            }
                            pushFollow(FOLLOW_2);
                            this_VarFakeDefinition_4=ruleVarFakeDefinition();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              				current = this_VarFakeDefinition_4;
                              				afterParserOrEnumRuleCall();
                              			
                            }

                            }
                            break;
                        case 5 :
                            // InternalMyDsl.g:7803:4: this_Import_5= ruleImport
                            {
                            if ( state.backtracking==0 ) {

                              				newCompositeNode(grammarAccess.getVarDefinitionAccess().getImportParserRuleCall_1_4());
                              			
                            }
                            pushFollow(FOLLOW_2);
                            this_Import_5=ruleImport();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              				current = this_Import_5;
                              				afterParserOrEnumRuleCall();
                              			
                            }

                            }
                            break;
                        case 6 :
                            // InternalMyDsl.g:7812:4: this_S_Experiment_6= ruleS_Experiment
                            {
                            if ( state.backtracking==0 ) {

                              				newCompositeNode(grammarAccess.getVarDefinitionAccess().getS_ExperimentParserRuleCall_1_5());
                              			
                            }
                            pushFollow(FOLLOW_2);
                            this_S_Experiment_6=ruleS_Experiment();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              				current = this_S_Experiment_6;
                              				afterParserOrEnumRuleCall();
                              			
                            }

                            }
                            break;

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVarDefinition"


    // $ANTLR start "entryRuleActionDefinition"
    // InternalMyDsl.g:7825:1: entryRuleActionDefinition returns [EObject current=null] : iv_ruleActionDefinition= ruleActionDefinition EOF ;
    public final EObject entryRuleActionDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleActionDefinition = null;


        try {
            // InternalMyDsl.g:7825:57: (iv_ruleActionDefinition= ruleActionDefinition EOF )
            // InternalMyDsl.g:7826:2: iv_ruleActionDefinition= ruleActionDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getActionDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleActionDefinition=ruleActionDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleActionDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleActionDefinition"


    // $ANTLR start "ruleActionDefinition"
    // InternalMyDsl.g:7832:1: ruleActionDefinition returns [EObject current=null] : (this_S_Action_0= ruleS_Action | this_ActionFakeDefinition_1= ruleActionFakeDefinition | this_S_Definition_2= ruleS_Definition | this_TypeDefinition_3= ruleTypeDefinition ) ;
    public final EObject ruleActionDefinition() throws RecognitionException {
        EObject current = null;

        EObject this_S_Action_0 = null;

        EObject this_ActionFakeDefinition_1 = null;

        EObject this_S_Definition_2 = null;

        EObject this_TypeDefinition_3 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:7838:2: ( (this_S_Action_0= ruleS_Action | this_ActionFakeDefinition_1= ruleActionFakeDefinition | this_S_Definition_2= ruleS_Definition | this_TypeDefinition_3= ruleTypeDefinition ) )
            // InternalMyDsl.g:7839:2: (this_S_Action_0= ruleS_Action | this_ActionFakeDefinition_1= ruleActionFakeDefinition | this_S_Definition_2= ruleS_Definition | this_TypeDefinition_3= ruleTypeDefinition )
            {
            // InternalMyDsl.g:7839:2: (this_S_Action_0= ruleS_Action | this_ActionFakeDefinition_1= ruleActionFakeDefinition | this_S_Definition_2= ruleS_Definition | this_TypeDefinition_3= ruleTypeDefinition )
            int alt145=4;
            switch ( input.LA(1) ) {
            case 43:
                {
                alt145=1;
                }
                break;
            case 158:
                {
                alt145=2;
                }
                break;
            case RULE_ID:
            case 54:
                {
                alt145=3;
                }
                break;
            case 52:
                {
                int LA145_4 = input.LA(2);

                if ( (LA145_4==144) ) {
                    alt145=3;
                }
                else if ( (LA145_4==RULE_ID||LA145_4==26) ) {
                    alt145=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 145, 4, input);

                    throw nvae;
                }
                }
                break;
            case 53:
            case 157:
                {
                alt145=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 145, 0, input);

                throw nvae;
            }

            switch (alt145) {
                case 1 :
                    // InternalMyDsl.g:7840:3: this_S_Action_0= ruleS_Action
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getActionDefinitionAccess().getS_ActionParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_S_Action_0=ruleS_Action();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_S_Action_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:7849:3: this_ActionFakeDefinition_1= ruleActionFakeDefinition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getActionDefinitionAccess().getActionFakeDefinitionParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_ActionFakeDefinition_1=ruleActionFakeDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ActionFakeDefinition_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMyDsl.g:7858:3: this_S_Definition_2= ruleS_Definition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getActionDefinitionAccess().getS_DefinitionParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_S_Definition_2=ruleS_Definition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_S_Definition_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalMyDsl.g:7867:3: this_TypeDefinition_3= ruleTypeDefinition
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getActionDefinitionAccess().getTypeDefinitionParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TypeDefinition_3=ruleTypeDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypeDefinition_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleActionDefinition"


    // $ANTLR start "entryRuleUnitFakeDefinition"
    // InternalMyDsl.g:7879:1: entryRuleUnitFakeDefinition returns [EObject current=null] : iv_ruleUnitFakeDefinition= ruleUnitFakeDefinition EOF ;
    public final EObject entryRuleUnitFakeDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnitFakeDefinition = null;


        try {
            // InternalMyDsl.g:7879:59: (iv_ruleUnitFakeDefinition= ruleUnitFakeDefinition EOF )
            // InternalMyDsl.g:7880:2: iv_ruleUnitFakeDefinition= ruleUnitFakeDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnitFakeDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnitFakeDefinition=ruleUnitFakeDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnitFakeDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnitFakeDefinition"


    // $ANTLR start "ruleUnitFakeDefinition"
    // InternalMyDsl.g:7886:1: ruleUnitFakeDefinition returns [EObject current=null] : (otherlv_0= '**unit*' ( (lv_name_1_0= RULE_ID ) ) ) ;
    public final EObject ruleUnitFakeDefinition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;


        	enterRule();

        try {
            // InternalMyDsl.g:7892:2: ( (otherlv_0= '**unit*' ( (lv_name_1_0= RULE_ID ) ) ) )
            // InternalMyDsl.g:7893:2: (otherlv_0= '**unit*' ( (lv_name_1_0= RULE_ID ) ) )
            {
            // InternalMyDsl.g:7893:2: (otherlv_0= '**unit*' ( (lv_name_1_0= RULE_ID ) ) )
            // InternalMyDsl.g:7894:3: otherlv_0= '**unit*' ( (lv_name_1_0= RULE_ID ) )
            {
            otherlv_0=(Token)match(input,156,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getUnitFakeDefinitionAccess().getUnitKeyword_0());
              		
            }
            // InternalMyDsl.g:7898:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalMyDsl.g:7899:4: (lv_name_1_0= RULE_ID )
            {
            // InternalMyDsl.g:7899:4: (lv_name_1_0= RULE_ID )
            // InternalMyDsl.g:7900:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getUnitFakeDefinitionAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getUnitFakeDefinitionRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.xtext.example.mydsl.MyDsl.ID");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnitFakeDefinition"


    // $ANTLR start "entryRuleTypeFakeDefinition"
    // InternalMyDsl.g:7920:1: entryRuleTypeFakeDefinition returns [EObject current=null] : iv_ruleTypeFakeDefinition= ruleTypeFakeDefinition EOF ;
    public final EObject entryRuleTypeFakeDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeFakeDefinition = null;


        try {
            // InternalMyDsl.g:7920:59: (iv_ruleTypeFakeDefinition= ruleTypeFakeDefinition EOF )
            // InternalMyDsl.g:7921:2: iv_ruleTypeFakeDefinition= ruleTypeFakeDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeFakeDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTypeFakeDefinition=ruleTypeFakeDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeFakeDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeFakeDefinition"


    // $ANTLR start "ruleTypeFakeDefinition"
    // InternalMyDsl.g:7927:1: ruleTypeFakeDefinition returns [EObject current=null] : (otherlv_0= '**type*' ( (lv_name_1_0= RULE_ID ) ) ) ;
    public final EObject ruleTypeFakeDefinition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;


        	enterRule();

        try {
            // InternalMyDsl.g:7933:2: ( (otherlv_0= '**type*' ( (lv_name_1_0= RULE_ID ) ) ) )
            // InternalMyDsl.g:7934:2: (otherlv_0= '**type*' ( (lv_name_1_0= RULE_ID ) ) )
            {
            // InternalMyDsl.g:7934:2: (otherlv_0= '**type*' ( (lv_name_1_0= RULE_ID ) ) )
            // InternalMyDsl.g:7935:3: otherlv_0= '**type*' ( (lv_name_1_0= RULE_ID ) )
            {
            otherlv_0=(Token)match(input,157,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTypeFakeDefinitionAccess().getTypeKeyword_0());
              		
            }
            // InternalMyDsl.g:7939:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalMyDsl.g:7940:4: (lv_name_1_0= RULE_ID )
            {
            // InternalMyDsl.g:7940:4: (lv_name_1_0= RULE_ID )
            // InternalMyDsl.g:7941:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getTypeFakeDefinitionAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTypeFakeDefinitionRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.xtext.example.mydsl.MyDsl.ID");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeFakeDefinition"


    // $ANTLR start "entryRuleActionFakeDefinition"
    // InternalMyDsl.g:7961:1: entryRuleActionFakeDefinition returns [EObject current=null] : iv_ruleActionFakeDefinition= ruleActionFakeDefinition EOF ;
    public final EObject entryRuleActionFakeDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleActionFakeDefinition = null;


        try {
            // InternalMyDsl.g:7961:61: (iv_ruleActionFakeDefinition= ruleActionFakeDefinition EOF )
            // InternalMyDsl.g:7962:2: iv_ruleActionFakeDefinition= ruleActionFakeDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getActionFakeDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleActionFakeDefinition=ruleActionFakeDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleActionFakeDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleActionFakeDefinition"


    // $ANTLR start "ruleActionFakeDefinition"
    // InternalMyDsl.g:7968:1: ruleActionFakeDefinition returns [EObject current=null] : (otherlv_0= '**action*' ( (lv_name_1_0= ruleValid_ID ) ) ) ;
    public final EObject ruleActionFakeDefinition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:7974:2: ( (otherlv_0= '**action*' ( (lv_name_1_0= ruleValid_ID ) ) ) )
            // InternalMyDsl.g:7975:2: (otherlv_0= '**action*' ( (lv_name_1_0= ruleValid_ID ) ) )
            {
            // InternalMyDsl.g:7975:2: (otherlv_0= '**action*' ( (lv_name_1_0= ruleValid_ID ) ) )
            // InternalMyDsl.g:7976:3: otherlv_0= '**action*' ( (lv_name_1_0= ruleValid_ID ) )
            {
            otherlv_0=(Token)match(input,158,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getActionFakeDefinitionAccess().getActionKeyword_0());
              		
            }
            // InternalMyDsl.g:7980:3: ( (lv_name_1_0= ruleValid_ID ) )
            // InternalMyDsl.g:7981:4: (lv_name_1_0= ruleValid_ID )
            {
            // InternalMyDsl.g:7981:4: (lv_name_1_0= ruleValid_ID )
            // InternalMyDsl.g:7982:5: lv_name_1_0= ruleValid_ID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getActionFakeDefinitionAccess().getNameValid_IDParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_1_0=ruleValid_ID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getActionFakeDefinitionRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.xtext.example.mydsl.MyDsl.Valid_ID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleActionFakeDefinition"


    // $ANTLR start "entryRuleSkillFakeDefinition"
    // InternalMyDsl.g:8003:1: entryRuleSkillFakeDefinition returns [EObject current=null] : iv_ruleSkillFakeDefinition= ruleSkillFakeDefinition EOF ;
    public final EObject entryRuleSkillFakeDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSkillFakeDefinition = null;


        try {
            // InternalMyDsl.g:8003:60: (iv_ruleSkillFakeDefinition= ruleSkillFakeDefinition EOF )
            // InternalMyDsl.g:8004:2: iv_ruleSkillFakeDefinition= ruleSkillFakeDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSkillFakeDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSkillFakeDefinition=ruleSkillFakeDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSkillFakeDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSkillFakeDefinition"


    // $ANTLR start "ruleSkillFakeDefinition"
    // InternalMyDsl.g:8010:1: ruleSkillFakeDefinition returns [EObject current=null] : (otherlv_0= '**skill*' ( (lv_name_1_0= RULE_ID ) ) ) ;
    public final EObject ruleSkillFakeDefinition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;


        	enterRule();

        try {
            // InternalMyDsl.g:8016:2: ( (otherlv_0= '**skill*' ( (lv_name_1_0= RULE_ID ) ) ) )
            // InternalMyDsl.g:8017:2: (otherlv_0= '**skill*' ( (lv_name_1_0= RULE_ID ) ) )
            {
            // InternalMyDsl.g:8017:2: (otherlv_0= '**skill*' ( (lv_name_1_0= RULE_ID ) ) )
            // InternalMyDsl.g:8018:3: otherlv_0= '**skill*' ( (lv_name_1_0= RULE_ID ) )
            {
            otherlv_0=(Token)match(input,159,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getSkillFakeDefinitionAccess().getSkillKeyword_0());
              		
            }
            // InternalMyDsl.g:8022:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalMyDsl.g:8023:4: (lv_name_1_0= RULE_ID )
            {
            // InternalMyDsl.g:8023:4: (lv_name_1_0= RULE_ID )
            // InternalMyDsl.g:8024:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getSkillFakeDefinitionAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getSkillFakeDefinitionRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.xtext.example.mydsl.MyDsl.ID");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSkillFakeDefinition"


    // $ANTLR start "entryRuleVarFakeDefinition"
    // InternalMyDsl.g:8044:1: entryRuleVarFakeDefinition returns [EObject current=null] : iv_ruleVarFakeDefinition= ruleVarFakeDefinition EOF ;
    public final EObject entryRuleVarFakeDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVarFakeDefinition = null;


        try {
            // InternalMyDsl.g:8044:58: (iv_ruleVarFakeDefinition= ruleVarFakeDefinition EOF )
            // InternalMyDsl.g:8045:2: iv_ruleVarFakeDefinition= ruleVarFakeDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVarFakeDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVarFakeDefinition=ruleVarFakeDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVarFakeDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVarFakeDefinition"


    // $ANTLR start "ruleVarFakeDefinition"
    // InternalMyDsl.g:8051:1: ruleVarFakeDefinition returns [EObject current=null] : (otherlv_0= '**var*' ( (lv_name_1_0= ruleValid_ID ) ) ) ;
    public final EObject ruleVarFakeDefinition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:8057:2: ( (otherlv_0= '**var*' ( (lv_name_1_0= ruleValid_ID ) ) ) )
            // InternalMyDsl.g:8058:2: (otherlv_0= '**var*' ( (lv_name_1_0= ruleValid_ID ) ) )
            {
            // InternalMyDsl.g:8058:2: (otherlv_0= '**var*' ( (lv_name_1_0= ruleValid_ID ) ) )
            // InternalMyDsl.g:8059:3: otherlv_0= '**var*' ( (lv_name_1_0= ruleValid_ID ) )
            {
            otherlv_0=(Token)match(input,160,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getVarFakeDefinitionAccess().getVarKeyword_0());
              		
            }
            // InternalMyDsl.g:8063:3: ( (lv_name_1_0= ruleValid_ID ) )
            // InternalMyDsl.g:8064:4: (lv_name_1_0= ruleValid_ID )
            {
            // InternalMyDsl.g:8064:4: (lv_name_1_0= ruleValid_ID )
            // InternalMyDsl.g:8065:5: lv_name_1_0= ruleValid_ID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVarFakeDefinitionAccess().getNameValid_IDParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_1_0=ruleValid_ID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVarFakeDefinitionRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.xtext.example.mydsl.MyDsl.Valid_ID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVarFakeDefinition"


    // $ANTLR start "entryRuleEquationFakeDefinition"
    // InternalMyDsl.g:8086:1: entryRuleEquationFakeDefinition returns [EObject current=null] : iv_ruleEquationFakeDefinition= ruleEquationFakeDefinition EOF ;
    public final EObject entryRuleEquationFakeDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEquationFakeDefinition = null;


        try {
            // InternalMyDsl.g:8086:63: (iv_ruleEquationFakeDefinition= ruleEquationFakeDefinition EOF )
            // InternalMyDsl.g:8087:2: iv_ruleEquationFakeDefinition= ruleEquationFakeDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEquationFakeDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEquationFakeDefinition=ruleEquationFakeDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEquationFakeDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEquationFakeDefinition"


    // $ANTLR start "ruleEquationFakeDefinition"
    // InternalMyDsl.g:8093:1: ruleEquationFakeDefinition returns [EObject current=null] : (otherlv_0= '**equation*' ( (lv_name_1_0= ruleValid_ID ) ) ) ;
    public final EObject ruleEquationFakeDefinition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:8099:2: ( (otherlv_0= '**equation*' ( (lv_name_1_0= ruleValid_ID ) ) ) )
            // InternalMyDsl.g:8100:2: (otherlv_0= '**equation*' ( (lv_name_1_0= ruleValid_ID ) ) )
            {
            // InternalMyDsl.g:8100:2: (otherlv_0= '**equation*' ( (lv_name_1_0= ruleValid_ID ) ) )
            // InternalMyDsl.g:8101:3: otherlv_0= '**equation*' ( (lv_name_1_0= ruleValid_ID ) )
            {
            otherlv_0=(Token)match(input,161,FOLLOW_15); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEquationFakeDefinitionAccess().getEquationKeyword_0());
              		
            }
            // InternalMyDsl.g:8105:3: ( (lv_name_1_0= ruleValid_ID ) )
            // InternalMyDsl.g:8106:4: (lv_name_1_0= ruleValid_ID )
            {
            // InternalMyDsl.g:8106:4: (lv_name_1_0= ruleValid_ID )
            // InternalMyDsl.g:8107:5: lv_name_1_0= ruleValid_ID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEquationFakeDefinitionAccess().getNameValid_IDParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_1_0=ruleValid_ID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEquationFakeDefinitionRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"org.xtext.example.mydsl.MyDsl.Valid_ID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEquationFakeDefinition"


    // $ANTLR start "entryRuleValid_ID"
    // InternalMyDsl.g:8128:1: entryRuleValid_ID returns [String current=null] : iv_ruleValid_ID= ruleValid_ID EOF ;
    public final String entryRuleValid_ID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleValid_ID = null;


        try {
            // InternalMyDsl.g:8128:48: (iv_ruleValid_ID= ruleValid_ID EOF )
            // InternalMyDsl.g:8129:2: iv_ruleValid_ID= ruleValid_ID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValid_IDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValid_ID=ruleValid_ID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValid_ID.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValid_ID"


    // $ANTLR start "ruleValid_ID"
    // InternalMyDsl.g:8135:1: ruleValid_ID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this__SpeciesKey_0= rule_SpeciesKey | this__ImageLayerKey_1= rule_ImageLayerKey | this__DoKey_2= rule_DoKey | this__ReflexKey_3= rule_ReflexKey | this__VarOrConstKey_4= rule_VarOrConstKey | this__1Expr_Facets_BlockOrEnd_Key_5= rule_1Expr_Facets_BlockOrEnd_Key | this__EquationsKey_6= rule_EquationsKey | this_ID_7= RULE_ID | this__ExperimentKey_8= rule_ExperimentKey ) ;
    public final AntlrDatatypeRuleToken ruleValid_ID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_7=null;
        AntlrDatatypeRuleToken this__SpeciesKey_0 = null;

        AntlrDatatypeRuleToken this__ImageLayerKey_1 = null;

        AntlrDatatypeRuleToken this__DoKey_2 = null;

        AntlrDatatypeRuleToken this__ReflexKey_3 = null;

        AntlrDatatypeRuleToken this__VarOrConstKey_4 = null;

        AntlrDatatypeRuleToken this__1Expr_Facets_BlockOrEnd_Key_5 = null;

        AntlrDatatypeRuleToken this__EquationsKey_6 = null;

        AntlrDatatypeRuleToken this__ExperimentKey_8 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:8141:2: ( (this__SpeciesKey_0= rule_SpeciesKey | this__ImageLayerKey_1= rule_ImageLayerKey | this__DoKey_2= rule_DoKey | this__ReflexKey_3= rule_ReflexKey | this__VarOrConstKey_4= rule_VarOrConstKey | this__1Expr_Facets_BlockOrEnd_Key_5= rule_1Expr_Facets_BlockOrEnd_Key | this__EquationsKey_6= rule_EquationsKey | this_ID_7= RULE_ID | this__ExperimentKey_8= rule_ExperimentKey ) )
            // InternalMyDsl.g:8142:2: (this__SpeciesKey_0= rule_SpeciesKey | this__ImageLayerKey_1= rule_ImageLayerKey | this__DoKey_2= rule_DoKey | this__ReflexKey_3= rule_ReflexKey | this__VarOrConstKey_4= rule_VarOrConstKey | this__1Expr_Facets_BlockOrEnd_Key_5= rule_1Expr_Facets_BlockOrEnd_Key | this__EquationsKey_6= rule_EquationsKey | this_ID_7= RULE_ID | this__ExperimentKey_8= rule_ExperimentKey )
            {
            // InternalMyDsl.g:8142:2: (this__SpeciesKey_0= rule_SpeciesKey | this__ImageLayerKey_1= rule_ImageLayerKey | this__DoKey_2= rule_DoKey | this__ReflexKey_3= rule_ReflexKey | this__VarOrConstKey_4= rule_VarOrConstKey | this__1Expr_Facets_BlockOrEnd_Key_5= rule_1Expr_Facets_BlockOrEnd_Key | this__EquationsKey_6= rule_EquationsKey | this_ID_7= RULE_ID | this__ExperimentKey_8= rule_ExperimentKey )
            int alt146=9;
            switch ( input.LA(1) ) {
            case 52:
            case 53:
                {
                alt146=1;
                }
                break;
            case 54:
                {
                alt146=2;
                }
                break;
            case 96:
            case 97:
                {
                alt146=3;
                }
                break;
            case 102:
            case 103:
            case 104:
                {
                alt146=4;
                }
                break;
            case 98:
            case 99:
            case 100:
            case 101:
                {
                alt146=5;
                }
                break;
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
            case 63:
            case 64:
            case 65:
            case 66:
            case 67:
            case 68:
            case 69:
            case 70:
            case 71:
            case 72:
            case 73:
            case 74:
            case 75:
            case 76:
            case 77:
            case 78:
            case 79:
            case 80:
            case 81:
            case 82:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 91:
            case 92:
            case 93:
            case 94:
            case 95:
                {
                alt146=6;
                }
                break;
            case 50:
                {
                alt146=7;
                }
                break;
            case RULE_ID:
                {
                alt146=8;
                }
                break;
            case 55:
                {
                alt146=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 146, 0, input);

                throw nvae;
            }

            switch (alt146) {
                case 1 :
                    // InternalMyDsl.g:8143:3: this__SpeciesKey_0= rule_SpeciesKey
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getValid_IDAccess().get_SpeciesKeyParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this__SpeciesKey_0=rule_SpeciesKey();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this__SpeciesKey_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:8154:3: this__ImageLayerKey_1= rule_ImageLayerKey
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getValid_IDAccess().get_ImageLayerKeyParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this__ImageLayerKey_1=rule_ImageLayerKey();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this__ImageLayerKey_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalMyDsl.g:8165:3: this__DoKey_2= rule_DoKey
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getValid_IDAccess().get_DoKeyParserRuleCall_2());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this__DoKey_2=rule_DoKey();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this__DoKey_2);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalMyDsl.g:8176:3: this__ReflexKey_3= rule_ReflexKey
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getValid_IDAccess().get_ReflexKeyParserRuleCall_3());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this__ReflexKey_3=rule_ReflexKey();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this__ReflexKey_3);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalMyDsl.g:8187:3: this__VarOrConstKey_4= rule_VarOrConstKey
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getValid_IDAccess().get_VarOrConstKeyParserRuleCall_4());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this__VarOrConstKey_4=rule_VarOrConstKey();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this__VarOrConstKey_4);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalMyDsl.g:8198:3: this__1Expr_Facets_BlockOrEnd_Key_5= rule_1Expr_Facets_BlockOrEnd_Key
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getValid_IDAccess().get_1Expr_Facets_BlockOrEnd_KeyParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this__1Expr_Facets_BlockOrEnd_Key_5=rule_1Expr_Facets_BlockOrEnd_Key();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this__1Expr_Facets_BlockOrEnd_Key_5);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalMyDsl.g:8209:3: this__EquationsKey_6= rule_EquationsKey
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getValid_IDAccess().get_EquationsKeyParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this__EquationsKey_6=rule_EquationsKey();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this__EquationsKey_6);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalMyDsl.g:8220:3: this_ID_7= RULE_ID
                    {
                    this_ID_7=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ID_7);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_ID_7, grammarAccess.getValid_IDAccess().getIDTerminalRuleCall_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalMyDsl.g:8228:3: this__ExperimentKey_8= rule_ExperimentKey
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getValid_IDAccess().get_ExperimentKeyParserRuleCall_8());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this__ExperimentKey_8=rule_ExperimentKey();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this__ExperimentKey_8);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValid_ID"


    // $ANTLR start "entryRuleTerminalExpression"
    // InternalMyDsl.g:8242:1: entryRuleTerminalExpression returns [EObject current=null] : iv_ruleTerminalExpression= ruleTerminalExpression EOF ;
    public final EObject entryRuleTerminalExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTerminalExpression = null;


        try {
            // InternalMyDsl.g:8242:59: (iv_ruleTerminalExpression= ruleTerminalExpression EOF )
            // InternalMyDsl.g:8243:2: iv_ruleTerminalExpression= ruleTerminalExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTerminalExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTerminalExpression=ruleTerminalExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTerminalExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTerminalExpression"


    // $ANTLR start "ruleTerminalExpression"
    // InternalMyDsl.g:8249:1: ruleTerminalExpression returns [EObject current=null] : (this_StringLiteral_0= ruleStringLiteral | ( () ( (lv_op_2_0= RULE_INTEGER ) ) ) | ( () ( (lv_op_4_0= RULE_DOUBLE ) ) ) | ( () ( (lv_op_6_0= RULE_BOOLEAN ) ) ) | ( () ( (lv_op_8_0= RULE_KEYWORD ) ) ) ) ;
    public final EObject ruleTerminalExpression() throws RecognitionException {
        EObject current = null;

        Token lv_op_2_0=null;
        Token lv_op_4_0=null;
        Token lv_op_6_0=null;
        Token lv_op_8_0=null;
        EObject this_StringLiteral_0 = null;



        	enterRule();

        try {
            // InternalMyDsl.g:8255:2: ( (this_StringLiteral_0= ruleStringLiteral | ( () ( (lv_op_2_0= RULE_INTEGER ) ) ) | ( () ( (lv_op_4_0= RULE_DOUBLE ) ) ) | ( () ( (lv_op_6_0= RULE_BOOLEAN ) ) ) | ( () ( (lv_op_8_0= RULE_KEYWORD ) ) ) ) )
            // InternalMyDsl.g:8256:2: (this_StringLiteral_0= ruleStringLiteral | ( () ( (lv_op_2_0= RULE_INTEGER ) ) ) | ( () ( (lv_op_4_0= RULE_DOUBLE ) ) ) | ( () ( (lv_op_6_0= RULE_BOOLEAN ) ) ) | ( () ( (lv_op_8_0= RULE_KEYWORD ) ) ) )
            {
            // InternalMyDsl.g:8256:2: (this_StringLiteral_0= ruleStringLiteral | ( () ( (lv_op_2_0= RULE_INTEGER ) ) ) | ( () ( (lv_op_4_0= RULE_DOUBLE ) ) ) | ( () ( (lv_op_6_0= RULE_BOOLEAN ) ) ) | ( () ( (lv_op_8_0= RULE_KEYWORD ) ) ) )
            int alt147=5;
            switch ( input.LA(1) ) {
            case RULE_STRING:
                {
                alt147=1;
                }
                break;
            case RULE_INTEGER:
                {
                alt147=2;
                }
                break;
            case RULE_DOUBLE:
                {
                alt147=3;
                }
                break;
            case RULE_BOOLEAN:
                {
                alt147=4;
                }
                break;
            case RULE_KEYWORD:
                {
                alt147=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 147, 0, input);

                throw nvae;
            }

            switch (alt147) {
                case 1 :
                    // InternalMyDsl.g:8257:3: this_StringLiteral_0= ruleStringLiteral
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTerminalExpressionAccess().getStringLiteralParserRuleCall_0());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_StringLiteral_0=ruleStringLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StringLiteral_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalMyDsl.g:8266:3: ( () ( (lv_op_2_0= RULE_INTEGER ) ) )
                    {
                    // InternalMyDsl.g:8266:3: ( () ( (lv_op_2_0= RULE_INTEGER ) ) )
                    // InternalMyDsl.g:8267:4: () ( (lv_op_2_0= RULE_INTEGER ) )
                    {
                    // InternalMyDsl.g:8267:4: ()
                    // InternalMyDsl.g:8268:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getTerminalExpressionAccess().getIntLiteralAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalMyDsl.g:8274:4: ( (lv_op_2_0= RULE_INTEGER ) )
                    // InternalMyDsl.g:8275:5: (lv_op_2_0= RULE_INTEGER )
                    {
                    // InternalMyDsl.g:8275:5: (lv_op_2_0= RULE_INTEGER )
                    // InternalMyDsl.g:8276:6: lv_op_2_0= RULE_INTEGER
                    {
                    lv_op_2_0=(Token)match(input,RULE_INTEGER,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_op_2_0, grammarAccess.getTerminalExpressionAccess().getOpINTEGERTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getTerminalExpressionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"op",
                      							lv_op_2_0,
                      							"org.xtext.example.mydsl.MyDsl.INTEGER");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalMyDsl.g:8294:3: ( () ( (lv_op_4_0= RULE_DOUBLE ) ) )
                    {
                    // InternalMyDsl.g:8294:3: ( () ( (lv_op_4_0= RULE_DOUBLE ) ) )
                    // InternalMyDsl.g:8295:4: () ( (lv_op_4_0= RULE_DOUBLE ) )
                    {
                    // InternalMyDsl.g:8295:4: ()
                    // InternalMyDsl.g:8296:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getTerminalExpressionAccess().getDoubleLiteralAction_2_0(),
                      						current);
                      				
                    }

                    }

                    // InternalMyDsl.g:8302:4: ( (lv_op_4_0= RULE_DOUBLE ) )
                    // InternalMyDsl.g:8303:5: (lv_op_4_0= RULE_DOUBLE )
                    {
                    // InternalMyDsl.g:8303:5: (lv_op_4_0= RULE_DOUBLE )
                    // InternalMyDsl.g:8304:6: lv_op_4_0= RULE_DOUBLE
                    {
                    lv_op_4_0=(Token)match(input,RULE_DOUBLE,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_op_4_0, grammarAccess.getTerminalExpressionAccess().getOpDOUBLETerminalRuleCall_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getTerminalExpressionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"op",
                      							lv_op_4_0,
                      							"org.xtext.example.mydsl.MyDsl.DOUBLE");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalMyDsl.g:8322:3: ( () ( (lv_op_6_0= RULE_BOOLEAN ) ) )
                    {
                    // InternalMyDsl.g:8322:3: ( () ( (lv_op_6_0= RULE_BOOLEAN ) ) )
                    // InternalMyDsl.g:8323:4: () ( (lv_op_6_0= RULE_BOOLEAN ) )
                    {
                    // InternalMyDsl.g:8323:4: ()
                    // InternalMyDsl.g:8324:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getTerminalExpressionAccess().getBooleanLiteralAction_3_0(),
                      						current);
                      				
                    }

                    }

                    // InternalMyDsl.g:8330:4: ( (lv_op_6_0= RULE_BOOLEAN ) )
                    // InternalMyDsl.g:8331:5: (lv_op_6_0= RULE_BOOLEAN )
                    {
                    // InternalMyDsl.g:8331:5: (lv_op_6_0= RULE_BOOLEAN )
                    // InternalMyDsl.g:8332:6: lv_op_6_0= RULE_BOOLEAN
                    {
                    lv_op_6_0=(Token)match(input,RULE_BOOLEAN,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_op_6_0, grammarAccess.getTerminalExpressionAccess().getOpBOOLEANTerminalRuleCall_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getTerminalExpressionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"op",
                      							lv_op_6_0,
                      							"org.xtext.example.mydsl.MyDsl.BOOLEAN");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalMyDsl.g:8350:3: ( () ( (lv_op_8_0= RULE_KEYWORD ) ) )
                    {
                    // InternalMyDsl.g:8350:3: ( () ( (lv_op_8_0= RULE_KEYWORD ) ) )
                    // InternalMyDsl.g:8351:4: () ( (lv_op_8_0= RULE_KEYWORD ) )
                    {
                    // InternalMyDsl.g:8351:4: ()
                    // InternalMyDsl.g:8352:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getTerminalExpressionAccess().getReservedLiteralAction_4_0(),
                      						current);
                      				
                    }

                    }

                    // InternalMyDsl.g:8358:4: ( (lv_op_8_0= RULE_KEYWORD ) )
                    // InternalMyDsl.g:8359:5: (lv_op_8_0= RULE_KEYWORD )
                    {
                    // InternalMyDsl.g:8359:5: (lv_op_8_0= RULE_KEYWORD )
                    // InternalMyDsl.g:8360:6: lv_op_8_0= RULE_KEYWORD
                    {
                    lv_op_8_0=(Token)match(input,RULE_KEYWORD,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_op_8_0, grammarAccess.getTerminalExpressionAccess().getOpKEYWORDTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getTerminalExpressionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"op",
                      							lv_op_8_0,
                      							"org.xtext.example.mydsl.MyDsl.KEYWORD");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTerminalExpression"


    // $ANTLR start "entryRuleStringLiteral"
    // InternalMyDsl.g:8381:1: entryRuleStringLiteral returns [EObject current=null] : iv_ruleStringLiteral= ruleStringLiteral EOF ;
    public final EObject entryRuleStringLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringLiteral = null;


        try {
            // InternalMyDsl.g:8381:54: (iv_ruleStringLiteral= ruleStringLiteral EOF )
            // InternalMyDsl.g:8382:2: iv_ruleStringLiteral= ruleStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStringLiteral=ruleStringLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringLiteral"


    // $ANTLR start "ruleStringLiteral"
    // InternalMyDsl.g:8388:1: ruleStringLiteral returns [EObject current=null] : ( (lv_op_0_0= RULE_STRING ) ) ;
    public final EObject ruleStringLiteral() throws RecognitionException {
        EObject current = null;

        Token lv_op_0_0=null;


        	enterRule();

        try {
            // InternalMyDsl.g:8394:2: ( ( (lv_op_0_0= RULE_STRING ) ) )
            // InternalMyDsl.g:8395:2: ( (lv_op_0_0= RULE_STRING ) )
            {
            // InternalMyDsl.g:8395:2: ( (lv_op_0_0= RULE_STRING ) )
            // InternalMyDsl.g:8396:3: (lv_op_0_0= RULE_STRING )
            {
            // InternalMyDsl.g:8396:3: (lv_op_0_0= RULE_STRING )
            // InternalMyDsl.g:8397:4: lv_op_0_0= RULE_STRING
            {
            lv_op_0_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_op_0_0, grammarAccess.getStringLiteralAccess().getOpSTRINGTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getStringLiteralRule());
              				}
              				setWithLastConsumed(
              					current,
              					"op",
              					lv_op_0_0,
              					"org.xtext.example.mydsl.MyDsl.STRING");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringLiteral"

    // $ANTLR start synpred1_InternalMyDsl
    public final void synpred1_InternalMyDsl_fragment() throws RecognitionException {   
        // InternalMyDsl.g:80:4: ( 'Hello' | '@' | 'model' )
        // InternalMyDsl.g:
        {
        if ( (input.LA(1)>=17 && input.LA(1)<=18)||input.LA(1)==23 ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred1_InternalMyDsl

    // $ANTLR start synpred2_InternalMyDsl
    public final void synpred2_InternalMyDsl_fragment() throws RecognitionException {   
        // InternalMyDsl.g:1168:5: ( ruleS_Declaration )
        // InternalMyDsl.g:1168:6: ruleS_Declaration
        {
        pushFollow(FOLLOW_2);
        ruleS_Declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred2_InternalMyDsl

    // $ANTLR start synpred3_InternalMyDsl
    public final void synpred3_InternalMyDsl_fragment() throws RecognitionException {   
        // InternalMyDsl.g:1181:6: ( ruleS_Assignment )
        // InternalMyDsl.g:1181:7: ruleS_Assignment
        {
        pushFollow(FOLLOW_2);
        ruleS_Assignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred3_InternalMyDsl

    // $ANTLR start synpred4_InternalMyDsl
    public final void synpred4_InternalMyDsl_fragment() throws RecognitionException {   
        // InternalMyDsl.g:1687:5: ( 'else' )
        // InternalMyDsl.g:1687:6: 'else'
        {
        match(input,34,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred4_InternalMyDsl

    // $ANTLR start synpred5_InternalMyDsl
    public final void synpred5_InternalMyDsl_fragment() throws RecognitionException {   
        // InternalMyDsl.g:1785:5: ( 'catch' )
        // InternalMyDsl.g:1785:6: 'catch'
        {
        match(input,36,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred5_InternalMyDsl

    // $ANTLR start synpred6_InternalMyDsl
    public final void synpred6_InternalMyDsl_fragment() throws RecognitionException {   
        // InternalMyDsl.g:1983:4: ( 'species' | 'image' | RULE_ID )
        // InternalMyDsl.g:
        {
        if ( input.LA(1)==RULE_ID||input.LA(1)==52||input.LA(1)==54 ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred6_InternalMyDsl

    // $ANTLR start synpred7_InternalMyDsl
    public final void synpred7_InternalMyDsl_fragment() throws RecognitionException {   
        // InternalMyDsl.g:3309:4: ( rulespeciesOrGridDisplayStatement )
        // InternalMyDsl.g:3309:5: rulespeciesOrGridDisplayStatement
        {
        pushFollow(FOLLOW_2);
        rulespeciesOrGridDisplayStatement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred7_InternalMyDsl

    // $ANTLR start synpred8_InternalMyDsl
    public final void synpred8_InternalMyDsl_fragment() throws RecognitionException {   
        // InternalMyDsl.g:3322:5: ( ruleimageDisplayStatement )
        // InternalMyDsl.g:3322:6: ruleimageDisplayStatement
        {
        pushFollow(FOLLOW_2);
        ruleimageDisplayStatement();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred8_InternalMyDsl

    // $ANTLR start synpred10_InternalMyDsl
    public final void synpred10_InternalMyDsl_fragment() throws RecognitionException {   
        // InternalMyDsl.g:4916:5: ( ( ( ruleExpression ) ) )
        // InternalMyDsl.g:4916:6: ( ( ruleExpression ) )
        {
        // InternalMyDsl.g:4916:6: ( ( ruleExpression ) )
        // InternalMyDsl.g:4917:6: ( ruleExpression )
        {
        // InternalMyDsl.g:4917:6: ( ruleExpression )
        // InternalMyDsl.g:4918:7: ruleExpression
        {
        pushFollow(FOLLOW_2);
        ruleExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred10_InternalMyDsl

    // $ANTLR start synpred11_InternalMyDsl
    public final void synpred11_InternalMyDsl_fragment() throws RecognitionException {   
        // InternalMyDsl.g:5013:5: ( 'species' | 'image' | RULE_ID )
        // InternalMyDsl.g:
        {
        if ( input.LA(1)==RULE_ID||input.LA(1)==52||input.LA(1)==54 ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }
    }
    // $ANTLR end synpred11_InternalMyDsl

    // $ANTLR start synpred12_InternalMyDsl
    public final void synpred12_InternalMyDsl_fragment() throws RecognitionException {   
        // InternalMyDsl.g:5266:4: ( ( ( ( ( ruleValid_ID ) ) '::' ) | ( ( ( ( ruleDefinitionFacetKey | ruleTypeFacetKey | ruleSpecialFacetKey | ruleActionFacetKey | ruleVarFacetKey ) ) ) ':' ) ) )
        // InternalMyDsl.g:5266:5: ( ( ( ( ruleValid_ID ) ) '::' ) | ( ( ( ( ruleDefinitionFacetKey | ruleTypeFacetKey | ruleSpecialFacetKey | ruleActionFacetKey | ruleVarFacetKey ) ) ) ':' ) )
        {
        // InternalMyDsl.g:5266:5: ( ( ( ( ruleValid_ID ) ) '::' ) | ( ( ( ( ruleDefinitionFacetKey | ruleTypeFacetKey | ruleSpecialFacetKey | ruleActionFacetKey | ruleVarFacetKey ) ) ) ':' ) )
        int alt149=2;
        int LA149_0 = input.LA(1);

        if ( (LA149_0==RULE_ID||LA149_0==50||(LA149_0>=52 && LA149_0<=104)) ) {
            alt149=1;
        }
        else if ( (LA149_0==26||LA149_0==30||(LA149_0>=38 && LA149_0<=39)||(LA149_0>=112 && LA149_0<=135)) ) {
            alt149=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 149, 0, input);

            throw nvae;
        }
        switch (alt149) {
            case 1 :
                // InternalMyDsl.g:5267:5: ( ( ( ruleValid_ID ) ) '::' )
                {
                // InternalMyDsl.g:5267:5: ( ( ( ruleValid_ID ) ) '::' )
                // InternalMyDsl.g:5268:6: ( ( ruleValid_ID ) ) '::'
                {
                // InternalMyDsl.g:5268:6: ( ( ruleValid_ID ) )
                // InternalMyDsl.g:5269:7: ( ruleValid_ID )
                {
                // InternalMyDsl.g:5269:7: ( ruleValid_ID )
                // InternalMyDsl.g:5270:8: ruleValid_ID
                {
                pushFollow(FOLLOW_52);
                ruleValid_ID();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,137,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;
            case 2 :
                // InternalMyDsl.g:5276:5: ( ( ( ( ruleDefinitionFacetKey | ruleTypeFacetKey | ruleSpecialFacetKey | ruleActionFacetKey | ruleVarFacetKey ) ) ) ':' )
                {
                // InternalMyDsl.g:5276:5: ( ( ( ( ruleDefinitionFacetKey | ruleTypeFacetKey | ruleSpecialFacetKey | ruleActionFacetKey | ruleVarFacetKey ) ) ) ':' )
                // InternalMyDsl.g:5277:6: ( ( ( ruleDefinitionFacetKey | ruleTypeFacetKey | ruleSpecialFacetKey | ruleActionFacetKey | ruleVarFacetKey ) ) ) ':'
                {
                // InternalMyDsl.g:5277:6: ( ( ( ruleDefinitionFacetKey | ruleTypeFacetKey | ruleSpecialFacetKey | ruleActionFacetKey | ruleVarFacetKey ) ) )
                // InternalMyDsl.g:5278:7: ( ( ruleDefinitionFacetKey | ruleTypeFacetKey | ruleSpecialFacetKey | ruleActionFacetKey | ruleVarFacetKey ) )
                {
                // InternalMyDsl.g:5278:7: ( ( ruleDefinitionFacetKey | ruleTypeFacetKey | ruleSpecialFacetKey | ruleActionFacetKey | ruleVarFacetKey ) )
                // InternalMyDsl.g:5279:8: ( ruleDefinitionFacetKey | ruleTypeFacetKey | ruleSpecialFacetKey | ruleActionFacetKey | ruleVarFacetKey )
                {
                // InternalMyDsl.g:5279:8: ( ruleDefinitionFacetKey | ruleTypeFacetKey | ruleSpecialFacetKey | ruleActionFacetKey | ruleVarFacetKey )
                int alt148=5;
                switch ( input.LA(1) ) {
                case 26:
                case 112:
                    {
                    alt148=1;
                    }
                    break;
                case 113:
                case 114:
                case 115:
                case 116:
                case 117:
                    {
                    alt148=2;
                    }
                    break;
                case 38:
                case 39:
                case 118:
                case 119:
                case 120:
                case 121:
                case 122:
                case 123:
                case 124:
                case 125:
                case 126:
                case 127:
                case 128:
                case 129:
                case 130:
                case 131:
                case 132:
                case 133:
                    {
                    alt148=3;
                    }
                    break;
                case 30:
                case 134:
                    {
                    alt148=4;
                    }
                    break;
                case 135:
                    {
                    alt148=5;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 148, 0, input);

                    throw nvae;
                }

                switch (alt148) {
                    case 1 :
                        // InternalMyDsl.g:5280:9: ruleDefinitionFacetKey
                        {
                        pushFollow(FOLLOW_34);
                        ruleDefinitionFacetKey();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // InternalMyDsl.g:5281:14: ruleTypeFacetKey
                        {
                        pushFollow(FOLLOW_34);
                        ruleTypeFacetKey();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;
                    case 3 :
                        // InternalMyDsl.g:5282:14: ruleSpecialFacetKey
                        {
                        pushFollow(FOLLOW_34);
                        ruleSpecialFacetKey();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;
                    case 4 :
                        // InternalMyDsl.g:5283:14: ruleActionFacetKey
                        {
                        pushFollow(FOLLOW_34);
                        ruleActionFacetKey();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;
                    case 5 :
                        // InternalMyDsl.g:5284:14: ruleVarFacetKey
                        {
                        pushFollow(FOLLOW_34);
                        ruleVarFacetKey();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;

                }


                }


                }

                match(input,40,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;

        }


        }
    }
    // $ANTLR end synpred12_InternalMyDsl

    // $ANTLR start synpred13_InternalMyDsl
    public final void synpred13_InternalMyDsl_fragment() throws RecognitionException {   
        // InternalMyDsl.g:5330:4: ( ( ( ( ( ruleValid_ID ) ) '::' ) | ( ( ( ( ruleDefinitionFacetKey | ruleTypeFacetKey | ruleSpecialFacetKey | ruleActionFacetKey | ruleVarFacetKey ) ) ) ':' ) ) )
        // InternalMyDsl.g:5330:5: ( ( ( ( ruleValid_ID ) ) '::' ) | ( ( ( ( ruleDefinitionFacetKey | ruleTypeFacetKey | ruleSpecialFacetKey | ruleActionFacetKey | ruleVarFacetKey ) ) ) ':' ) )
        {
        // InternalMyDsl.g:5330:5: ( ( ( ( ruleValid_ID ) ) '::' ) | ( ( ( ( ruleDefinitionFacetKey | ruleTypeFacetKey | ruleSpecialFacetKey | ruleActionFacetKey | ruleVarFacetKey ) ) ) ':' ) )
        int alt151=2;
        int LA151_0 = input.LA(1);

        if ( (LA151_0==RULE_ID||LA151_0==50||(LA151_0>=52 && LA151_0<=104)) ) {
            alt151=1;
        }
        else if ( (LA151_0==26||LA151_0==30||(LA151_0>=38 && LA151_0<=39)||(LA151_0>=112 && LA151_0<=135)) ) {
            alt151=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 151, 0, input);

            throw nvae;
        }
        switch (alt151) {
            case 1 :
                // InternalMyDsl.g:5331:5: ( ( ( ruleValid_ID ) ) '::' )
                {
                // InternalMyDsl.g:5331:5: ( ( ( ruleValid_ID ) ) '::' )
                // InternalMyDsl.g:5332:6: ( ( ruleValid_ID ) ) '::'
                {
                // InternalMyDsl.g:5332:6: ( ( ruleValid_ID ) )
                // InternalMyDsl.g:5333:7: ( ruleValid_ID )
                {
                // InternalMyDsl.g:5333:7: ( ruleValid_ID )
                // InternalMyDsl.g:5334:8: ruleValid_ID
                {
                pushFollow(FOLLOW_52);
                ruleValid_ID();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                match(input,137,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;
            case 2 :
                // InternalMyDsl.g:5340:5: ( ( ( ( ruleDefinitionFacetKey | ruleTypeFacetKey | ruleSpecialFacetKey | ruleActionFacetKey | ruleVarFacetKey ) ) ) ':' )
                {
                // InternalMyDsl.g:5340:5: ( ( ( ( ruleDefinitionFacetKey | ruleTypeFacetKey | ruleSpecialFacetKey | ruleActionFacetKey | ruleVarFacetKey ) ) ) ':' )
                // InternalMyDsl.g:5341:6: ( ( ( ruleDefinitionFacetKey | ruleTypeFacetKey | ruleSpecialFacetKey | ruleActionFacetKey | ruleVarFacetKey ) ) ) ':'
                {
                // InternalMyDsl.g:5341:6: ( ( ( ruleDefinitionFacetKey | ruleTypeFacetKey | ruleSpecialFacetKey | ruleActionFacetKey | ruleVarFacetKey ) ) )
                // InternalMyDsl.g:5342:7: ( ( ruleDefinitionFacetKey | ruleTypeFacetKey | ruleSpecialFacetKey | ruleActionFacetKey | ruleVarFacetKey ) )
                {
                // InternalMyDsl.g:5342:7: ( ( ruleDefinitionFacetKey | ruleTypeFacetKey | ruleSpecialFacetKey | ruleActionFacetKey | ruleVarFacetKey ) )
                // InternalMyDsl.g:5343:8: ( ruleDefinitionFacetKey | ruleTypeFacetKey | ruleSpecialFacetKey | ruleActionFacetKey | ruleVarFacetKey )
                {
                // InternalMyDsl.g:5343:8: ( ruleDefinitionFacetKey | ruleTypeFacetKey | ruleSpecialFacetKey | ruleActionFacetKey | ruleVarFacetKey )
                int alt150=5;
                switch ( input.LA(1) ) {
                case 26:
                case 112:
                    {
                    alt150=1;
                    }
                    break;
                case 113:
                case 114:
                case 115:
                case 116:
                case 117:
                    {
                    alt150=2;
                    }
                    break;
                case 38:
                case 39:
                case 118:
                case 119:
                case 120:
                case 121:
                case 122:
                case 123:
                case 124:
                case 125:
                case 126:
                case 127:
                case 128:
                case 129:
                case 130:
                case 131:
                case 132:
                case 133:
                    {
                    alt150=3;
                    }
                    break;
                case 30:
                case 134:
                    {
                    alt150=4;
                    }
                    break;
                case 135:
                    {
                    alt150=5;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 150, 0, input);

                    throw nvae;
                }

                switch (alt150) {
                    case 1 :
                        // InternalMyDsl.g:5344:9: ruleDefinitionFacetKey
                        {
                        pushFollow(FOLLOW_34);
                        ruleDefinitionFacetKey();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // InternalMyDsl.g:5345:14: ruleTypeFacetKey
                        {
                        pushFollow(FOLLOW_34);
                        ruleTypeFacetKey();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;
                    case 3 :
                        // InternalMyDsl.g:5346:14: ruleSpecialFacetKey
                        {
                        pushFollow(FOLLOW_34);
                        ruleSpecialFacetKey();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;
                    case 4 :
                        // InternalMyDsl.g:5347:14: ruleActionFacetKey
                        {
                        pushFollow(FOLLOW_34);
                        ruleActionFacetKey();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;
                    case 5 :
                        // InternalMyDsl.g:5348:14: ruleVarFacetKey
                        {
                        pushFollow(FOLLOW_34);
                        ruleVarFacetKey();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;

                }


                }


                }

                match(input,40,FOLLOW_2); if (state.failed) return ;

                }


                }
                break;

        }


        }
    }
    // $ANTLR end synpred13_InternalMyDsl

    // $ANTLR start synpred14_InternalMyDsl
    public final void synpred14_InternalMyDsl_fragment() throws RecognitionException {   
        // InternalMyDsl.g:6933:4: ( ruleFunction )
        // InternalMyDsl.g:6933:5: ruleFunction
        {
        pushFollow(FOLLOW_2);
        ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred14_InternalMyDsl

    // $ANTLR start synpred15_InternalMyDsl
    public final void synpred15_InternalMyDsl_fragment() throws RecognitionException {   
        // InternalMyDsl.g:7573:4: ( '>' )
        // InternalMyDsl.g:7573:5: '>'
        {
        match(input,106,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred15_InternalMyDsl

    // $ANTLR start synpred16_InternalMyDsl
    public final void synpred16_InternalMyDsl_fragment() throws RecognitionException {   
        // InternalMyDsl.g:7755:4: ( ruleS_Declaration )
        // InternalMyDsl.g:7755:5: ruleS_Declaration
        {
        pushFollow(FOLLOW_2);
        ruleS_Declaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred16_InternalMyDsl

    // Delegated rules

    public final boolean synpred13_InternalMyDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalMyDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred1_InternalMyDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred1_InternalMyDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalMyDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalMyDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalMyDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalMyDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalMyDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalMyDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalMyDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalMyDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred3_InternalMyDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred3_InternalMyDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_InternalMyDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_InternalMyDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalMyDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalMyDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_InternalMyDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_InternalMyDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalMyDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalMyDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_InternalMyDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_InternalMyDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_InternalMyDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_InternalMyDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalMyDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalMyDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalMyDsl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalMyDsl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA26 dfa26 = new DFA26(this);
    protected DFA25 dfa25 = new DFA25(this);
    protected DFA28 dfa28 = new DFA28(this);
    protected DFA44 dfa44 = new DFA44(this);
    protected DFA65 dfa65 = new DFA65(this);
    protected DFA74 dfa74 = new DFA74(this);
    protected DFA73 dfa73 = new DFA73(this);
    protected DFA84 dfa84 = new DFA84(this);
    protected DFA95 dfa95 = new DFA95(this);
    protected DFA96 dfa96 = new DFA96(this);
    protected DFA99 dfa99 = new DFA99(this);
    protected DFA102 dfa102 = new DFA102(this);
    protected DFA130 dfa130 = new DFA130(this);
    protected DFA135 dfa135 = new DFA135(this);
    protected DFA144 dfa144 = new DFA144(this);
    static final String dfa_1s = "\152\uffff";
    static final String dfa_2s = "\1\4\7\0\1\uffff\4\0\135\uffff";
    static final String dfa_3s = "\1\u009a\7\0\1\uffff\4\0\135\uffff";
    static final String dfa_4s = "\10\uffff\1\1\4\uffff\1\1\1\2\133\uffff";
    static final String dfa_5s = "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\uffff\1\10\1\11\1\12\1\13\135\uffff}>";
    static final String[] dfa_6s = {
            "\1\1\5\16\12\uffff\1\16\3\uffff\1\16\1\uffff\1\16\3\uffff\1\16\1\15\1\16\2\uffff\1\16\1\uffff\3\16\1\uffff\1\16\1\uffff\1\10\2\16\4\uffff\2\16\1\2\1\4\1\3\53\16\1\11\1\12\1\13\1\14\1\5\1\6\1\7\7\uffff\30\16\12\uffff\1\16\3\uffff\5\16",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA26 extends DFA {

        public DFA26(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 26;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "1166:3: ( ( ( ruleS_Declaration )=>this_S_Declaration_0= ruleS_Declaration ) | ( ( ( ruleS_Assignment )=>this_S_Assignment_1= ruleS_Assignment ) | this_S_1Expr_Facets_BlockOrEnd_2= ruleS_1Expr_Facets_BlockOrEnd | this_S_Other_3= ruleS_Other | this_S_Do_4= ruleS_Do | this_S_Return_5= ruleS_Return | this_S_Solve_6= ruleS_Solve | this_S_If_7= ruleS_If | this_S_Try_8= ruleS_Try | this_S_Equations_9= ruleS_Equations ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA26_0 = input.LA(1);

                         
                        int index26_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA26_0==RULE_ID) ) {s = 1;}

                        else if ( (LA26_0==52) ) {s = 2;}

                        else if ( (LA26_0==54) ) {s = 3;}

                        else if ( (LA26_0==53) ) {s = 4;}

                        else if ( (LA26_0==102) ) {s = 5;}

                        else if ( (LA26_0==103) ) {s = 6;}

                        else if ( (LA26_0==104) ) {s = 7;}

                        else if ( (LA26_0==43) && (synpred2_InternalMyDsl())) {s = 8;}

                        else if ( (LA26_0==98) ) {s = 9;}

                        else if ( (LA26_0==99) ) {s = 10;}

                        else if ( (LA26_0==100) ) {s = 11;}

                        else if ( (LA26_0==101) ) {s = 12;}

                        else if ( (LA26_0==31) && (synpred2_InternalMyDsl())) {s = 13;}

                        else if ( ((LA26_0>=RULE_STRING && LA26_0<=RULE_KEYWORD)||LA26_0==20||LA26_0==24||LA26_0==26||LA26_0==30||LA26_0==32||LA26_0==35||(LA26_0>=37 && LA26_0<=39)||LA26_0==41||(LA26_0>=44 && LA26_0<=45)||(LA26_0>=50 && LA26_0<=51)||(LA26_0>=55 && LA26_0<=97)||(LA26_0>=112 && LA26_0<=135)||LA26_0==146||(LA26_0>=150 && LA26_0<=154)) ) {s = 14;}

                         
                        input.seek(index26_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA26_1 = input.LA(1);

                         
                        int index26_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalMyDsl()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index26_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA26_2 = input.LA(1);

                         
                        int index26_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalMyDsl()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index26_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA26_3 = input.LA(1);

                         
                        int index26_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalMyDsl()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index26_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA26_4 = input.LA(1);

                         
                        int index26_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalMyDsl()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index26_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA26_5 = input.LA(1);

                         
                        int index26_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalMyDsl()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index26_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA26_6 = input.LA(1);

                         
                        int index26_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalMyDsl()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index26_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA26_7 = input.LA(1);

                         
                        int index26_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalMyDsl()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index26_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA26_9 = input.LA(1);

                         
                        int index26_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalMyDsl()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index26_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA26_10 = input.LA(1);

                         
                        int index26_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalMyDsl()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index26_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA26_11 = input.LA(1);

                         
                        int index26_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalMyDsl()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index26_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA26_12 = input.LA(1);

                         
                        int index26_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalMyDsl()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index26_12);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 26, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_7s = "\154\uffff";
    static final String dfa_8s = "\1\4\3\uffff\2\0\7\uffff\52\0\65\uffff";
    static final String dfa_9s = "\1\u009a\3\uffff\2\0\7\uffff\52\0\65\uffff";
    static final String dfa_10s = "\1\uffff\3\1\2\uffff\7\1\52\uffff\55\1\1\5\1\6\1\7\1\10\1\4\1\2\1\11\1\3";
    static final String dfa_11s = "\1\0\3\uffff\1\1\1\2\7\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\65\uffff}>";
    static final String[] dfa_12s = {
            "\1\66\1\124\1\125\1\126\1\127\1\130\12\uffff\1\137\3\uffff\1\132\1\uffff\1\70\3\uffff\1\121\1\uffff\1\146\2\uffff\1\147\1\uffff\1\144\1\103\1\101\1\uffff\1\131\2\uffff\1\143\1\133\4\uffff\1\65\1\145\1\1\1\2\1\3\1\67\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\4\1\5\1\11\1\12\1\13\1\14\1\6\1\7\1\10\7\uffff\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\102\1\104\1\105\1\106\1\107\1\110\1\111\1\112\1\113\1\114\1\115\1\116\1\117\1\120\1\122\1\123\12\uffff\1\136\3\uffff\1\134\1\135\1\140\1\141\1\142",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final char[] dfa_8 = DFA.unpackEncodedStringToUnsignedChars(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final short[] dfa_10 = DFA.unpackEncodedString(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[][] dfa_12 = unpackEncodedStringArray(dfa_12s);

    class DFA25 extends DFA {

        public DFA25(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 25;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_8;
            this.max = dfa_9;
            this.accept = dfa_10;
            this.special = dfa_11;
            this.transition = dfa_12;
        }
        public String getDescription() {
            return "1179:4: ( ( ( ruleS_Assignment )=>this_S_Assignment_1= ruleS_Assignment ) | this_S_1Expr_Facets_BlockOrEnd_2= ruleS_1Expr_Facets_BlockOrEnd | this_S_Other_3= ruleS_Other | this_S_Do_4= ruleS_Do | this_S_Return_5= ruleS_Return | this_S_Solve_6= ruleS_Solve | this_S_If_7= ruleS_If | this_S_Try_8= ruleS_Try | this_S_Equations_9= ruleS_Equations )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA25_0 = input.LA(1);

                         
                        int index25_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA25_0==52) && (synpred3_InternalMyDsl())) {s = 1;}

                        else if ( (LA25_0==53) && (synpred3_InternalMyDsl())) {s = 2;}

                        else if ( (LA25_0==54) && (synpred3_InternalMyDsl())) {s = 3;}

                        else if ( (LA25_0==96) ) {s = 4;}

                        else if ( (LA25_0==97) ) {s = 5;}

                        else if ( (LA25_0==102) && (synpred3_InternalMyDsl())) {s = 6;}

                        else if ( (LA25_0==103) && (synpred3_InternalMyDsl())) {s = 7;}

                        else if ( (LA25_0==104) && (synpred3_InternalMyDsl())) {s = 8;}

                        else if ( (LA25_0==98) && (synpred3_InternalMyDsl())) {s = 9;}

                        else if ( (LA25_0==99) && (synpred3_InternalMyDsl())) {s = 10;}

                        else if ( (LA25_0==100) && (synpred3_InternalMyDsl())) {s = 11;}

                        else if ( (LA25_0==101) && (synpred3_InternalMyDsl())) {s = 12;}

                        else if ( (LA25_0==82) ) {s = 13;}

                        else if ( (LA25_0==83) ) {s = 14;}

                        else if ( (LA25_0==84) ) {s = 15;}

                        else if ( (LA25_0==85) ) {s = 16;}

                        else if ( (LA25_0==86) ) {s = 17;}

                        else if ( (LA25_0==87) ) {s = 18;}

                        else if ( (LA25_0==88) ) {s = 19;}

                        else if ( (LA25_0==89) ) {s = 20;}

                        else if ( (LA25_0==90) ) {s = 21;}

                        else if ( (LA25_0==91) ) {s = 22;}

                        else if ( (LA25_0==92) ) {s = 23;}

                        else if ( (LA25_0==93) ) {s = 24;}

                        else if ( (LA25_0==94) ) {s = 25;}

                        else if ( (LA25_0==95) ) {s = 26;}

                        else if ( (LA25_0==56) ) {s = 27;}

                        else if ( (LA25_0==57) ) {s = 28;}

                        else if ( (LA25_0==58) ) {s = 29;}

                        else if ( (LA25_0==59) ) {s = 30;}

                        else if ( (LA25_0==60) ) {s = 31;}

                        else if ( (LA25_0==61) ) {s = 32;}

                        else if ( (LA25_0==62) ) {s = 33;}

                        else if ( (LA25_0==63) ) {s = 34;}

                        else if ( (LA25_0==64) ) {s = 35;}

                        else if ( (LA25_0==65) ) {s = 36;}

                        else if ( (LA25_0==66) ) {s = 37;}

                        else if ( (LA25_0==67) ) {s = 38;}

                        else if ( (LA25_0==68) ) {s = 39;}

                        else if ( (LA25_0==69) ) {s = 40;}

                        else if ( (LA25_0==70) ) {s = 41;}

                        else if ( (LA25_0==71) ) {s = 42;}

                        else if ( (LA25_0==72) ) {s = 43;}

                        else if ( (LA25_0==73) ) {s = 44;}

                        else if ( (LA25_0==74) ) {s = 45;}

                        else if ( (LA25_0==75) ) {s = 46;}

                        else if ( (LA25_0==76) ) {s = 47;}

                        else if ( (LA25_0==77) ) {s = 48;}

                        else if ( (LA25_0==78) ) {s = 49;}

                        else if ( (LA25_0==79) ) {s = 50;}

                        else if ( (LA25_0==80) ) {s = 51;}

                        else if ( (LA25_0==81) ) {s = 52;}

                        else if ( (LA25_0==50) ) {s = 53;}

                        else if ( (LA25_0==RULE_ID) ) {s = 54;}

                        else if ( (LA25_0==55) && (synpred3_InternalMyDsl())) {s = 55;}

                        else if ( (LA25_0==26) && (synpred3_InternalMyDsl())) {s = 56;}

                        else if ( (LA25_0==112) && (synpred3_InternalMyDsl())) {s = 57;}

                        else if ( (LA25_0==113) && (synpred3_InternalMyDsl())) {s = 58;}

                        else if ( (LA25_0==114) && (synpred3_InternalMyDsl())) {s = 59;}

                        else if ( (LA25_0==115) && (synpred3_InternalMyDsl())) {s = 60;}

                        else if ( (LA25_0==116) && (synpred3_InternalMyDsl())) {s = 61;}

                        else if ( (LA25_0==117) && (synpred3_InternalMyDsl())) {s = 62;}

                        else if ( (LA25_0==118) && (synpred3_InternalMyDsl())) {s = 63;}

                        else if ( (LA25_0==119) && (synpred3_InternalMyDsl())) {s = 64;}

                        else if ( (LA25_0==39) && (synpred3_InternalMyDsl())) {s = 65;}

                        else if ( (LA25_0==120) && (synpred3_InternalMyDsl())) {s = 66;}

                        else if ( (LA25_0==38) && (synpred3_InternalMyDsl())) {s = 67;}

                        else if ( (LA25_0==121) && (synpred3_InternalMyDsl())) {s = 68;}

                        else if ( (LA25_0==122) && (synpred3_InternalMyDsl())) {s = 69;}

                        else if ( (LA25_0==123) && (synpred3_InternalMyDsl())) {s = 70;}

                        else if ( (LA25_0==124) && (synpred3_InternalMyDsl())) {s = 71;}

                        else if ( (LA25_0==125) && (synpred3_InternalMyDsl())) {s = 72;}

                        else if ( (LA25_0==126) && (synpred3_InternalMyDsl())) {s = 73;}

                        else if ( (LA25_0==127) && (synpred3_InternalMyDsl())) {s = 74;}

                        else if ( (LA25_0==128) && (synpred3_InternalMyDsl())) {s = 75;}

                        else if ( (LA25_0==129) && (synpred3_InternalMyDsl())) {s = 76;}

                        else if ( (LA25_0==130) && (synpred3_InternalMyDsl())) {s = 77;}

                        else if ( (LA25_0==131) && (synpred3_InternalMyDsl())) {s = 78;}

                        else if ( (LA25_0==132) && (synpred3_InternalMyDsl())) {s = 79;}

                        else if ( (LA25_0==133) && (synpred3_InternalMyDsl())) {s = 80;}

                        else if ( (LA25_0==30) && (synpred3_InternalMyDsl())) {s = 81;}

                        else if ( (LA25_0==134) && (synpred3_InternalMyDsl())) {s = 82;}

                        else if ( (LA25_0==135) && (synpred3_InternalMyDsl())) {s = 83;}

                        else if ( (LA25_0==RULE_STRING) && (synpred3_InternalMyDsl())) {s = 84;}

                        else if ( (LA25_0==RULE_INTEGER) && (synpred3_InternalMyDsl())) {s = 85;}

                        else if ( (LA25_0==RULE_DOUBLE) && (synpred3_InternalMyDsl())) {s = 86;}

                        else if ( (LA25_0==RULE_BOOLEAN) && (synpred3_InternalMyDsl())) {s = 87;}

                        else if ( (LA25_0==RULE_KEYWORD) && (synpred3_InternalMyDsl())) {s = 88;}

                        else if ( (LA25_0==41) && (synpred3_InternalMyDsl())) {s = 89;}

                        else if ( (LA25_0==24) && (synpred3_InternalMyDsl())) {s = 90;}

                        else if ( (LA25_0==45) && (synpred3_InternalMyDsl())) {s = 91;}

                        else if ( (LA25_0==150) && (synpred3_InternalMyDsl())) {s = 92;}

                        else if ( (LA25_0==151) && (synpred3_InternalMyDsl())) {s = 93;}

                        else if ( (LA25_0==146) && (synpred3_InternalMyDsl())) {s = 94;}

                        else if ( (LA25_0==20) && (synpred3_InternalMyDsl())) {s = 95;}

                        else if ( (LA25_0==152) && (synpred3_InternalMyDsl())) {s = 96;}

                        else if ( (LA25_0==153) && (synpred3_InternalMyDsl())) {s = 97;}

                        else if ( (LA25_0==154) && (synpred3_InternalMyDsl())) {s = 98;}

                        else if ( (LA25_0==44) && (synpred3_InternalMyDsl())) {s = 99;}

                        else if ( (LA25_0==37) ) {s = 100;}

                        else if ( (LA25_0==51) ) {s = 101;}

                        else if ( (LA25_0==32) ) {s = 102;}

                        else if ( (LA25_0==35) ) {s = 103;}

                         
                        input.seek(index25_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA25_4 = input.LA(1);

                         
                        int index25_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 104;}

                         
                        input.seek(index25_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA25_5 = input.LA(1);

                         
                        int index25_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 104;}

                         
                        input.seek(index25_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA25_13 = input.LA(1);

                         
                        int index25_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_13);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA25_14 = input.LA(1);

                         
                        int index25_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_14);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA25_15 = input.LA(1);

                         
                        int index25_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_15);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA25_16 = input.LA(1);

                         
                        int index25_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_16);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA25_17 = input.LA(1);

                         
                        int index25_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_17);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA25_18 = input.LA(1);

                         
                        int index25_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_18);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA25_19 = input.LA(1);

                         
                        int index25_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_19);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA25_20 = input.LA(1);

                         
                        int index25_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_20);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA25_21 = input.LA(1);

                         
                        int index25_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_21);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA25_22 = input.LA(1);

                         
                        int index25_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_22);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA25_23 = input.LA(1);

                         
                        int index25_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_23);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA25_24 = input.LA(1);

                         
                        int index25_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_24);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA25_25 = input.LA(1);

                         
                        int index25_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_25);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA25_26 = input.LA(1);

                         
                        int index25_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_26);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA25_27 = input.LA(1);

                         
                        int index25_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_27);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA25_28 = input.LA(1);

                         
                        int index25_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_28);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA25_29 = input.LA(1);

                         
                        int index25_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_29);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA25_30 = input.LA(1);

                         
                        int index25_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_30);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA25_31 = input.LA(1);

                         
                        int index25_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_31);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA25_32 = input.LA(1);

                         
                        int index25_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_32);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA25_33 = input.LA(1);

                         
                        int index25_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_33);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA25_34 = input.LA(1);

                         
                        int index25_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_34);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA25_35 = input.LA(1);

                         
                        int index25_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_35);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA25_36 = input.LA(1);

                         
                        int index25_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_36);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA25_37 = input.LA(1);

                         
                        int index25_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_37);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA25_38 = input.LA(1);

                         
                        int index25_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_38);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA25_39 = input.LA(1);

                         
                        int index25_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_39);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA25_40 = input.LA(1);

                         
                        int index25_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_40);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA25_41 = input.LA(1);

                         
                        int index25_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_41);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA25_42 = input.LA(1);

                         
                        int index25_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_42);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA25_43 = input.LA(1);

                         
                        int index25_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_43);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA25_44 = input.LA(1);

                         
                        int index25_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_44);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA25_45 = input.LA(1);

                         
                        int index25_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_45);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA25_46 = input.LA(1);

                         
                        int index25_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_46);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA25_47 = input.LA(1);

                         
                        int index25_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_47);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA25_48 = input.LA(1);

                         
                        int index25_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_48);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA25_49 = input.LA(1);

                         
                        int index25_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_49);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA25_50 = input.LA(1);

                         
                        int index25_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_50);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA25_51 = input.LA(1);

                         
                        int index25_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_51);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA25_52 = input.LA(1);

                         
                        int index25_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 105;}

                         
                        input.seek(index25_52);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA25_53 = input.LA(1);

                         
                        int index25_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 106;}

                         
                        input.seek(index25_53);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA25_54 = input.LA(1);

                         
                        int index25_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred3_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 107;}

                         
                        input.seek(index25_54);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 25, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_13s = "\41\uffff";
    static final String dfa_14s = "\12\4\1\50\23\4\2\uffff\1\4";
    static final String dfa_15s = "\12\u009a\1\50\22\u009a\1\u009b\2\uffff\1\u009a";
    static final String dfa_16s = "\36\uffff\1\2\1\1\1\uffff";
    static final String dfa_17s = "\41\uffff}>";
    static final String[] dfa_18s = {
            "\1\35\5\36\12\uffff\1\36\3\uffff\1\36\1\uffff\1\1\3\uffff\1\33\7\uffff\1\14\1\12\1\uffff\1\36\3\uffff\1\36\4\uffff\1\36\1\uffff\65\36\7\uffff\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\13\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\34\1\32\12\uffff\1\36\3\uffff\5\36",
            "\6\37\12\uffff\1\37\3\uffff\1\37\1\uffff\1\37\3\uffff\1\37\7\uffff\2\37\1\36\1\37\3\uffff\1\37\4\uffff\1\37\1\uffff\65\37\7\uffff\30\37\12\uffff\1\37\3\uffff\5\37",
            "\6\37\12\uffff\1\37\3\uffff\1\37\1\uffff\1\37\3\uffff\1\37\7\uffff\2\37\1\36\1\37\3\uffff\1\37\4\uffff\1\37\1\uffff\65\37\7\uffff\30\37\12\uffff\1\37\3\uffff\5\37",
            "\6\37\12\uffff\1\37\3\uffff\1\37\1\uffff\1\37\3\uffff\1\37\7\uffff\2\37\1\36\1\37\3\uffff\1\37\4\uffff\1\37\1\uffff\65\37\7\uffff\30\37\12\uffff\1\37\3\uffff\5\37",
            "\6\37\12\uffff\1\37\3\uffff\1\37\1\uffff\1\37\3\uffff\1\37\7\uffff\2\37\1\36\1\37\3\uffff\1\37\4\uffff\1\37\1\uffff\65\37\7\uffff\30\37\12\uffff\1\37\3\uffff\5\37",
            "\6\37\12\uffff\1\37\3\uffff\1\37\1\uffff\1\37\3\uffff\1\37\7\uffff\2\37\1\36\1\37\3\uffff\1\37\4\uffff\1\37\1\uffff\65\37\7\uffff\30\37\12\uffff\1\37\3\uffff\5\37",
            "\6\37\12\uffff\1\37\3\uffff\1\37\1\uffff\1\37\3\uffff\1\37\7\uffff\2\37\1\36\1\37\3\uffff\1\37\4\uffff\1\37\1\uffff\65\37\7\uffff\30\37\12\uffff\1\37\3\uffff\5\37",
            "\6\37\12\uffff\1\37\3\uffff\1\37\1\uffff\1\37\3\uffff\1\37\7\uffff\2\37\1\36\1\37\3\uffff\1\37\4\uffff\1\37\1\uffff\65\37\7\uffff\30\37\12\uffff\1\37\3\uffff\5\37",
            "\6\37\12\uffff\1\37\3\uffff\1\37\1\uffff\1\37\3\uffff\1\37\7\uffff\2\37\1\36\1\37\3\uffff\1\37\4\uffff\1\37\1\uffff\65\37\7\uffff\30\37\12\uffff\1\37\3\uffff\5\37",
            "\6\37\12\uffff\1\37\3\uffff\1\37\1\uffff\1\37\3\uffff\1\37\7\uffff\2\37\1\36\1\37\3\uffff\1\37\4\uffff\1\37\1\uffff\65\37\7\uffff\30\37\12\uffff\1\37\3\uffff\5\37",
            "\1\40",
            "\6\37\12\uffff\1\37\3\uffff\1\37\1\uffff\1\37\3\uffff\1\37\7\uffff\2\37\1\36\1\37\3\uffff\1\37\4\uffff\1\37\1\uffff\65\37\7\uffff\30\37\12\uffff\1\37\3\uffff\5\37",
            "\6\37\12\uffff\1\37\3\uffff\1\37\1\uffff\1\37\3\uffff\1\37\7\uffff\2\37\1\36\1\37\3\uffff\1\37\4\uffff\1\37\1\uffff\65\37\7\uffff\30\37\12\uffff\1\37\3\uffff\5\37",
            "\6\37\12\uffff\1\37\3\uffff\1\37\1\uffff\1\37\3\uffff\1\37\7\uffff\2\37\1\36\1\37\3\uffff\1\37\4\uffff\1\37\1\uffff\65\37\7\uffff\30\37\12\uffff\1\37\3\uffff\5\37",
            "\6\37\12\uffff\1\37\3\uffff\1\37\1\uffff\1\37\3\uffff\1\37\7\uffff\2\37\1\36\1\37\3\uffff\1\37\4\uffff\1\37\1\uffff\65\37\7\uffff\30\37\12\uffff\1\37\3\uffff\5\37",
            "\6\37\12\uffff\1\37\3\uffff\1\37\1\uffff\1\37\3\uffff\1\37\7\uffff\2\37\1\36\1\37\3\uffff\1\37\4\uffff\1\37\1\uffff\65\37\7\uffff\30\37\12\uffff\1\37\3\uffff\5\37",
            "\6\37\12\uffff\1\37\3\uffff\1\37\1\uffff\1\37\3\uffff\1\37\7\uffff\2\37\1\36\1\37\3\uffff\1\37\4\uffff\1\37\1\uffff\65\37\7\uffff\30\37\12\uffff\1\37\3\uffff\5\37",
            "\6\37\12\uffff\1\37\3\uffff\1\37\1\uffff\1\37\3\uffff\1\37\7\uffff\2\37\1\36\1\37\3\uffff\1\37\4\uffff\1\37\1\uffff\65\37\7\uffff\30\37\12\uffff\1\37\3\uffff\5\37",
            "\6\37\12\uffff\1\37\3\uffff\1\37\1\uffff\1\37\3\uffff\1\37\7\uffff\2\37\1\36\1\37\3\uffff\1\37\4\uffff\1\37\1\uffff\65\37\7\uffff\30\37\12\uffff\1\37\3\uffff\5\37",
            "\6\37\12\uffff\1\37\3\uffff\1\37\1\uffff\1\37\3\uffff\1\37\7\uffff\2\37\1\36\1\37\3\uffff\1\37\4\uffff\1\37\1\uffff\65\37\7\uffff\30\37\12\uffff\1\37\3\uffff\5\37",
            "\6\37\12\uffff\1\37\3\uffff\1\37\1\uffff\1\37\3\uffff\1\37\7\uffff\2\37\1\36\1\37\3\uffff\1\37\4\uffff\1\37\1\uffff\65\37\7\uffff\30\37\12\uffff\1\37\3\uffff\5\37",
            "\6\37\12\uffff\1\37\3\uffff\1\37\1\uffff\1\37\3\uffff\1\37\7\uffff\2\37\1\36\1\37\3\uffff\1\37\4\uffff\1\37\1\uffff\65\37\7\uffff\30\37\12\uffff\1\37\3\uffff\5\37",
            "\6\37\12\uffff\1\37\3\uffff\1\37\1\uffff\1\37\3\uffff\1\37\7\uffff\2\37\1\36\1\37\3\uffff\1\37\4\uffff\1\37\1\uffff\65\37\7\uffff\30\37\12\uffff\1\37\3\uffff\5\37",
            "\6\37\12\uffff\1\37\3\uffff\1\37\1\uffff\1\37\3\uffff\1\37\7\uffff\2\37\1\36\1\37\3\uffff\1\37\4\uffff\1\37\1\uffff\65\37\7\uffff\30\37\12\uffff\1\37\3\uffff\5\37",
            "\6\37\12\uffff\1\37\3\uffff\1\37\1\uffff\1\37\3\uffff\1\37\7\uffff\2\37\1\36\1\37\3\uffff\1\37\4\uffff\1\37\1\uffff\65\37\7\uffff\30\37\12\uffff\1\37\3\uffff\5\37",
            "\6\37\12\uffff\1\37\3\uffff\1\37\1\uffff\1\37\3\uffff\1\37\7\uffff\2\37\1\36\1\37\3\uffff\1\37\4\uffff\1\37\1\uffff\65\37\7\uffff\30\37\12\uffff\1\37\3\uffff\5\37",
            "\6\37\12\uffff\1\37\3\uffff\1\37\1\uffff\1\37\3\uffff\1\37\7\uffff\2\37\1\36\1\37\3\uffff\1\37\4\uffff\1\37\1\uffff\65\37\7\uffff\30\37\12\uffff\1\37\3\uffff\5\37",
            "\6\37\12\uffff\1\37\3\uffff\1\37\1\uffff\1\37\3\uffff\1\37\7\uffff\2\37\1\36\1\37\3\uffff\1\37\4\uffff\1\37\1\uffff\65\37\7\uffff\30\37\12\uffff\1\37\3\uffff\5\37",
            "\6\37\12\uffff\1\37\3\uffff\1\37\1\uffff\1\37\3\uffff\1\37\7\uffff\2\37\1\36\1\37\3\uffff\1\37\4\uffff\1\37\1\uffff\65\37\7\uffff\30\37\12\uffff\1\37\3\uffff\5\37",
            "\1\36\13\uffff\1\36\5\uffff\1\36\1\uffff\1\36\1\uffff\1\36\1\uffff\1\36\1\uffff\1\36\7\uffff\2\36\1\37\1\36\3\uffff\1\36\1\uffff\1\36\2\uffff\1\36\1\uffff\65\36\1\uffff\1\36\5\uffff\50\36\3\uffff\1\36",
            "",
            "",
            "\6\37\12\uffff\1\37\3\uffff\1\37\1\uffff\1\37\3\uffff\1\37\7\uffff\2\37\1\36\1\37\3\uffff\1\37\4\uffff\1\37\1\uffff\65\37\7\uffff\30\37\12\uffff\1\37\3\uffff\5\37"
    };

    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final char[] dfa_14 = DFA.unpackEncodedStringToUnsignedChars(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[][] dfa_18 = unpackEncodedStringArray(dfa_18s);

    class DFA28 extends DFA {

        public DFA28(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 28;
            this.eot = dfa_13;
            this.eof = dfa_13;
            this.min = dfa_14;
            this.max = dfa_15;
            this.accept = dfa_16;
            this.special = dfa_17;
            this.transition = dfa_18;
        }
        public String getDescription() {
            return "1312:3: ( (lv_firstFacet_1_0= ruleFirstFacetKey ) )?";
        }
    }
    static final String dfa_19s = "\12\uffff";
    static final String dfa_20s = "\1\4\1\uffff\1\4\7\uffff";
    static final String dfa_21s = "\1\150\1\uffff\1\u0090\7\uffff";
    static final String dfa_22s = "\1\uffff\1\1\1\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\1";
    static final String dfa_23s = "\1\0\1\uffff\1\1\7\uffff}>";
    static final String[] dfa_24s = {
            "\1\1\32\uffff\1\10\13\uffff\1\6\10\uffff\1\2\1\4\1\3\53\uffff\4\7\3\5",
            "",
            "\1\4\25\uffff\1\4\165\uffff\1\11",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final char[] dfa_20 = DFA.unpackEncodedStringToUnsignedChars(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[][] dfa_24 = unpackEncodedStringArray(dfa_24s);

    class DFA44 extends DFA {

        public DFA44(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 44;
            this.eot = dfa_19;
            this.eof = dfa_19;
            this.min = dfa_20;
            this.max = dfa_21;
            this.accept = dfa_22;
            this.special = dfa_23;
            this.transition = dfa_24;
        }
        public String getDescription() {
            return "1981:2: ( ( ( 'species' | 'image' | RULE_ID )=>this_S_Definition_0= ruleS_Definition ) | this_S_Species_1= ruleS_Species | this_S_Reflex_2= ruleS_Reflex | this_S_Action_3= ruleS_Action | this_S_Var_4= ruleS_Var | this_S_Loop_5= ruleS_Loop )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA44_0 = input.LA(1);

                         
                        int index44_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA44_0==RULE_ID) && (synpred6_InternalMyDsl())) {s = 1;}

                        else if ( (LA44_0==52) ) {s = 2;}

                        else if ( (LA44_0==54) && (synpred6_InternalMyDsl())) {s = 3;}

                        else if ( (LA44_0==53) ) {s = 4;}

                        else if ( ((LA44_0>=102 && LA44_0<=104)) ) {s = 5;}

                        else if ( (LA44_0==43) ) {s = 6;}

                        else if ( ((LA44_0>=98 && LA44_0<=101)) ) {s = 7;}

                        else if ( (LA44_0==31) ) {s = 8;}

                         
                        input.seek(index44_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA44_2 = input.LA(1);

                         
                        int index44_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA44_2==144) && (synpred6_InternalMyDsl())) {s = 9;}

                        else if ( (LA44_2==RULE_ID||LA44_2==26) ) {s = 4;}

                         
                        input.seek(index44_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 44, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_25s = "\72\uffff";
    static final String dfa_26s = "\1\4\67\51\2\uffff";
    static final String dfa_27s = "\1\150\67\u0090\2\uffff";
    static final String dfa_28s = "\70\uffff\1\1\1\2";
    static final String dfa_29s = "\72\uffff}>";
    static final String[] dfa_30s = {
            "\1\66\55\uffff\1\65\1\uffff\1\1\1\2\1\3\1\67\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\4\1\5\1\11\1\12\1\13\1\14\1\6\1\7\1\10",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "\1\70\5\uffff\1\71\140\uffff\1\70",
            "",
            ""
    };

    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final char[] dfa_26 = DFA.unpackEncodedStringToUnsignedChars(dfa_26s);
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[][] dfa_30 = unpackEncodedStringArray(dfa_30s);

    class DFA65 extends DFA {

        public DFA65(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 65;
            this.eot = dfa_25;
            this.eof = dfa_25;
            this.min = dfa_26;
            this.max = dfa_27;
            this.accept = dfa_28;
            this.special = dfa_29;
            this.transition = dfa_30;
        }
        public String getDescription() {
            return "2931:5: (lv_expr_0_1= ruleFunction | lv_expr_0_2= ruleVariableRef )";
        }
    }
    static final String dfa_31s = "\1\4\2\0\151\uffff";
    static final String dfa_32s = "\1\u009a\2\0\151\uffff";
    static final String dfa_33s = "\3\uffff\1\2\147\uffff\1\1";
    static final String dfa_34s = "\1\uffff\1\0\1\1\151\uffff}>";
    static final String[] dfa_35s = {
            "\6\3\12\uffff\1\3\3\uffff\1\3\1\uffff\1\3\3\uffff\3\3\2\uffff\1\3\1\uffff\3\3\1\uffff\1\3\1\uffff\3\3\3\uffff\3\3\1\1\1\2\63\3\7\uffff\30\3\12\uffff\1\3\3\uffff\5\3",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_31 = DFA.unpackEncodedStringToUnsignedChars(dfa_31s);
    static final char[] dfa_32 = DFA.unpackEncodedStringToUnsignedChars(dfa_32s);
    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final short[][] dfa_35 = unpackEncodedStringArray(dfa_35s);

    class DFA74 extends DFA {

        public DFA74(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 74;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_31;
            this.max = dfa_32;
            this.accept = dfa_33;
            this.special = dfa_34;
            this.transition = dfa_35;
        }
        public String getDescription() {
            return "3307:2: ( ( ( rulespeciesOrGridDisplayStatement )=>this_speciesOrGridDisplayStatement_0= rulespeciesOrGridDisplayStatement ) | ( ( ( ruleimageDisplayStatement )=>this_imageDisplayStatement_1= ruleimageDisplayStatement ) | this_Statement_2= ruleStatement ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA74_1 = input.LA(1);

                         
                        int index74_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalMyDsl()) ) {s = 107;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index74_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA74_2 = input.LA(1);

                         
                        int index74_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred7_InternalMyDsl()) ) {s = 107;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index74_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 74, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_36s = "\1\4\1\0\152\uffff";
    static final String dfa_37s = "\1\u009a\1\0\152\uffff";
    static final String dfa_38s = "\2\uffff\1\2\150\uffff\1\1";
    static final String dfa_39s = "\1\uffff\1\0\152\uffff}>";
    static final String[] dfa_40s = {
            "\6\2\12\uffff\1\2\3\uffff\1\2\1\uffff\1\2\3\uffff\3\2\2\uffff\1\2\1\uffff\3\2\1\uffff\1\2\1\uffff\3\2\3\uffff\5\2\1\1\62\2\7\uffff\30\2\12\uffff\1\2\3\uffff\5\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final char[] dfa_37 = DFA.unpackEncodedStringToUnsignedChars(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final short[][] dfa_40 = unpackEncodedStringArray(dfa_40s);

    class DFA73 extends DFA {

        public DFA73(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 73;
            this.eot = dfa_7;
            this.eof = dfa_7;
            this.min = dfa_36;
            this.max = dfa_37;
            this.accept = dfa_38;
            this.special = dfa_39;
            this.transition = dfa_40;
        }
        public String getDescription() {
            return "3320:3: ( ( ( ruleimageDisplayStatement )=>this_imageDisplayStatement_1= ruleimageDisplayStatement ) | this_Statement_2= ruleStatement )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA73_1 = input.LA(1);

                         
                        int index73_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred8_InternalMyDsl()) ) {s = 107;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index73_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 73, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_41s = "\1\20\2\uffff\1\152\6\uffff";
    static final String dfa_42s = "\1\156\2\uffff\1\154\6\uffff";
    static final String dfa_43s = "\1\uffff\1\1\1\2\1\uffff\1\4\1\6\1\7\1\10\1\5\1\3";
    static final String dfa_44s = "\12\uffff}>";
    static final String[] dfa_45s = {
            "\1\1\130\uffff\1\2\1\3\1\4\1\7\1\5\1\6",
            "",
            "",
            "\1\11\1\uffff\1\10",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_41 = DFA.unpackEncodedStringToUnsignedChars(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[][] dfa_45 = unpackEncodedStringArray(dfa_45s);

    class DFA84 extends DFA {

        public DFA84(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 84;
            this.eot = dfa_19;
            this.eof = dfa_19;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "4055:2: (kw= '<-' | kw= '<<' | (kw= '>' kw= '>' ) | kw= '<<+' | (kw= '>' kw= '>-' ) | kw= '+<-' | kw= '<+' | kw= '>-' )";
        }
    }
    static final String dfa_46s = "\144\uffff";
    static final String dfa_47s = "\1\4\132\uffff\1\0\10\uffff";
    static final String dfa_48s = "\1\u009a\132\uffff\1\0\10\uffff";
    static final String dfa_49s = "\1\uffff\132\1\1\uffff\7\1\1\2";
    static final String dfa_50s = "\1\0\132\uffff\1\1\10\uffff}>";
    static final String[] dfa_51s = {
            "\1\66\1\124\1\125\1\126\1\127\1\130\12\uffff\1\137\3\uffff\1\132\1\uffff\1\70\3\uffff\1\121\7\uffff\1\103\1\101\1\uffff\1\131\3\uffff\1\133\4\uffff\1\65\1\uffff\1\1\1\2\1\3\1\67\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\4\1\5\1\11\1\12\1\13\1\14\1\6\1\7\1\10\7\uffff\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\102\1\104\1\105\1\106\1\107\1\110\1\111\1\112\1\113\1\114\1\115\1\116\1\117\1\120\1\122\1\123\12\uffff\1\136\3\uffff\1\134\1\135\1\140\1\141\1\142",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final char[] dfa_47 = DFA.unpackEncodedStringToUnsignedChars(dfa_47s);
    static final char[] dfa_48 = DFA.unpackEncodedStringToUnsignedChars(dfa_48s);
    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final short[][] dfa_51 = unpackEncodedStringArray(dfa_51s);

    class DFA95 extends DFA {

        public DFA95(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 95;
            this.eot = dfa_46;
            this.eof = dfa_46;
            this.min = dfa_47;
            this.max = dfa_48;
            this.accept = dfa_49;
            this.special = dfa_50;
            this.transition = dfa_51;
        }
        public String getDescription() {
            return "4914:3: ( ( ( ( ( ruleExpression ) ) )=> ( (lv_expr_1_0= ruleExpression ) ) ) | (otherlv_2= '{' ( (lv_expr_3_0= ruleExpression ) ) otherlv_4= '}' ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA95_0 = input.LA(1);

                         
                        int index95_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA95_0==52) && (synpred10_InternalMyDsl())) {s = 1;}

                        else if ( (LA95_0==53) && (synpred10_InternalMyDsl())) {s = 2;}

                        else if ( (LA95_0==54) && (synpred10_InternalMyDsl())) {s = 3;}

                        else if ( (LA95_0==96) && (synpred10_InternalMyDsl())) {s = 4;}

                        else if ( (LA95_0==97) && (synpred10_InternalMyDsl())) {s = 5;}

                        else if ( (LA95_0==102) && (synpred10_InternalMyDsl())) {s = 6;}

                        else if ( (LA95_0==103) && (synpred10_InternalMyDsl())) {s = 7;}

                        else if ( (LA95_0==104) && (synpred10_InternalMyDsl())) {s = 8;}

                        else if ( (LA95_0==98) && (synpred10_InternalMyDsl())) {s = 9;}

                        else if ( (LA95_0==99) && (synpred10_InternalMyDsl())) {s = 10;}

                        else if ( (LA95_0==100) && (synpred10_InternalMyDsl())) {s = 11;}

                        else if ( (LA95_0==101) && (synpred10_InternalMyDsl())) {s = 12;}

                        else if ( (LA95_0==82) && (synpred10_InternalMyDsl())) {s = 13;}

                        else if ( (LA95_0==83) && (synpred10_InternalMyDsl())) {s = 14;}

                        else if ( (LA95_0==84) && (synpred10_InternalMyDsl())) {s = 15;}

                        else if ( (LA95_0==85) && (synpred10_InternalMyDsl())) {s = 16;}

                        else if ( (LA95_0==86) && (synpred10_InternalMyDsl())) {s = 17;}

                        else if ( (LA95_0==87) && (synpred10_InternalMyDsl())) {s = 18;}

                        else if ( (LA95_0==88) && (synpred10_InternalMyDsl())) {s = 19;}

                        else if ( (LA95_0==89) && (synpred10_InternalMyDsl())) {s = 20;}

                        else if ( (LA95_0==90) && (synpred10_InternalMyDsl())) {s = 21;}

                        else if ( (LA95_0==91) && (synpred10_InternalMyDsl())) {s = 22;}

                        else if ( (LA95_0==92) && (synpred10_InternalMyDsl())) {s = 23;}

                        else if ( (LA95_0==93) && (synpred10_InternalMyDsl())) {s = 24;}

                        else if ( (LA95_0==94) && (synpred10_InternalMyDsl())) {s = 25;}

                        else if ( (LA95_0==95) && (synpred10_InternalMyDsl())) {s = 26;}

                        else if ( (LA95_0==56) && (synpred10_InternalMyDsl())) {s = 27;}

                        else if ( (LA95_0==57) && (synpred10_InternalMyDsl())) {s = 28;}

                        else if ( (LA95_0==58) && (synpred10_InternalMyDsl())) {s = 29;}

                        else if ( (LA95_0==59) && (synpred10_InternalMyDsl())) {s = 30;}

                        else if ( (LA95_0==60) && (synpred10_InternalMyDsl())) {s = 31;}

                        else if ( (LA95_0==61) && (synpred10_InternalMyDsl())) {s = 32;}

                        else if ( (LA95_0==62) && (synpred10_InternalMyDsl())) {s = 33;}

                        else if ( (LA95_0==63) && (synpred10_InternalMyDsl())) {s = 34;}

                        else if ( (LA95_0==64) && (synpred10_InternalMyDsl())) {s = 35;}

                        else if ( (LA95_0==65) && (synpred10_InternalMyDsl())) {s = 36;}

                        else if ( (LA95_0==66) && (synpred10_InternalMyDsl())) {s = 37;}

                        else if ( (LA95_0==67) && (synpred10_InternalMyDsl())) {s = 38;}

                        else if ( (LA95_0==68) && (synpred10_InternalMyDsl())) {s = 39;}

                        else if ( (LA95_0==69) && (synpred10_InternalMyDsl())) {s = 40;}

                        else if ( (LA95_0==70) && (synpred10_InternalMyDsl())) {s = 41;}

                        else if ( (LA95_0==71) && (synpred10_InternalMyDsl())) {s = 42;}

                        else if ( (LA95_0==72) && (synpred10_InternalMyDsl())) {s = 43;}

                        else if ( (LA95_0==73) && (synpred10_InternalMyDsl())) {s = 44;}

                        else if ( (LA95_0==74) && (synpred10_InternalMyDsl())) {s = 45;}

                        else if ( (LA95_0==75) && (synpred10_InternalMyDsl())) {s = 46;}

                        else if ( (LA95_0==76) && (synpred10_InternalMyDsl())) {s = 47;}

                        else if ( (LA95_0==77) && (synpred10_InternalMyDsl())) {s = 48;}

                        else if ( (LA95_0==78) && (synpred10_InternalMyDsl())) {s = 49;}

                        else if ( (LA95_0==79) && (synpred10_InternalMyDsl())) {s = 50;}

                        else if ( (LA95_0==80) && (synpred10_InternalMyDsl())) {s = 51;}

                        else if ( (LA95_0==81) && (synpred10_InternalMyDsl())) {s = 52;}

                        else if ( (LA95_0==50) && (synpred10_InternalMyDsl())) {s = 53;}

                        else if ( (LA95_0==RULE_ID) && (synpred10_InternalMyDsl())) {s = 54;}

                        else if ( (LA95_0==55) && (synpred10_InternalMyDsl())) {s = 55;}

                        else if ( (LA95_0==26) && (synpred10_InternalMyDsl())) {s = 56;}

                        else if ( (LA95_0==112) && (synpred10_InternalMyDsl())) {s = 57;}

                        else if ( (LA95_0==113) && (synpred10_InternalMyDsl())) {s = 58;}

                        else if ( (LA95_0==114) && (synpred10_InternalMyDsl())) {s = 59;}

                        else if ( (LA95_0==115) && (synpred10_InternalMyDsl())) {s = 60;}

                        else if ( (LA95_0==116) && (synpred10_InternalMyDsl())) {s = 61;}

                        else if ( (LA95_0==117) && (synpred10_InternalMyDsl())) {s = 62;}

                        else if ( (LA95_0==118) && (synpred10_InternalMyDsl())) {s = 63;}

                        else if ( (LA95_0==119) && (synpred10_InternalMyDsl())) {s = 64;}

                        else if ( (LA95_0==39) && (synpred10_InternalMyDsl())) {s = 65;}

                        else if ( (LA95_0==120) && (synpred10_InternalMyDsl())) {s = 66;}

                        else if ( (LA95_0==38) && (synpred10_InternalMyDsl())) {s = 67;}

                        else if ( (LA95_0==121) && (synpred10_InternalMyDsl())) {s = 68;}

                        else if ( (LA95_0==122) && (synpred10_InternalMyDsl())) {s = 69;}

                        else if ( (LA95_0==123) && (synpred10_InternalMyDsl())) {s = 70;}

                        else if ( (LA95_0==124) && (synpred10_InternalMyDsl())) {s = 71;}

                        else if ( (LA95_0==125) && (synpred10_InternalMyDsl())) {s = 72;}

                        else if ( (LA95_0==126) && (synpred10_InternalMyDsl())) {s = 73;}

                        else if ( (LA95_0==127) && (synpred10_InternalMyDsl())) {s = 74;}

                        else if ( (LA95_0==128) && (synpred10_InternalMyDsl())) {s = 75;}

                        else if ( (LA95_0==129) && (synpred10_InternalMyDsl())) {s = 76;}

                        else if ( (LA95_0==130) && (synpred10_InternalMyDsl())) {s = 77;}

                        else if ( (LA95_0==131) && (synpred10_InternalMyDsl())) {s = 78;}

                        else if ( (LA95_0==132) && (synpred10_InternalMyDsl())) {s = 79;}

                        else if ( (LA95_0==133) && (synpred10_InternalMyDsl())) {s = 80;}

                        else if ( (LA95_0==30) && (synpred10_InternalMyDsl())) {s = 81;}

                        else if ( (LA95_0==134) && (synpred10_InternalMyDsl())) {s = 82;}

                        else if ( (LA95_0==135) && (synpred10_InternalMyDsl())) {s = 83;}

                        else if ( (LA95_0==RULE_STRING) && (synpred10_InternalMyDsl())) {s = 84;}

                        else if ( (LA95_0==RULE_INTEGER) && (synpred10_InternalMyDsl())) {s = 85;}

                        else if ( (LA95_0==RULE_DOUBLE) && (synpred10_InternalMyDsl())) {s = 86;}

                        else if ( (LA95_0==RULE_BOOLEAN) && (synpred10_InternalMyDsl())) {s = 87;}

                        else if ( (LA95_0==RULE_KEYWORD) && (synpred10_InternalMyDsl())) {s = 88;}

                        else if ( (LA95_0==41) && (synpred10_InternalMyDsl())) {s = 89;}

                        else if ( (LA95_0==24) && (synpred10_InternalMyDsl())) {s = 90;}

                        else if ( (LA95_0==45) ) {s = 91;}

                        else if ( (LA95_0==150) && (synpred10_InternalMyDsl())) {s = 92;}

                        else if ( (LA95_0==151) && (synpred10_InternalMyDsl())) {s = 93;}

                        else if ( (LA95_0==146) && (synpred10_InternalMyDsl())) {s = 94;}

                        else if ( (LA95_0==20) && (synpred10_InternalMyDsl())) {s = 95;}

                        else if ( (LA95_0==152) && (synpred10_InternalMyDsl())) {s = 96;}

                        else if ( (LA95_0==153) && (synpred10_InternalMyDsl())) {s = 97;}

                        else if ( (LA95_0==154) && (synpred10_InternalMyDsl())) {s = 98;}

                         
                        input.seek(index95_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA95_91 = input.LA(1);

                         
                        int index95_91 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred10_InternalMyDsl()) ) {s = 98;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index95_91);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 95, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_52s = "\1\4\3\0\140\uffff";
    static final String dfa_53s = "\1\u009a\3\0\140\uffff";
    static final String dfa_54s = "\4\uffff\1\2\136\uffff\1\1";
    static final String dfa_55s = "\1\uffff\1\0\1\1\1\2\140\uffff}>";
    static final String[] dfa_56s = {
            "\1\1\5\4\12\uffff\1\4\3\uffff\1\4\1\uffff\1\4\3\uffff\1\4\7\uffff\2\4\1\uffff\1\4\3\uffff\1\4\4\uffff\1\4\1\uffff\1\2\1\4\1\3\62\4\7\uffff\30\4\12\uffff\1\4\3\uffff\5\4",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_52 = DFA.unpackEncodedStringToUnsignedChars(dfa_52s);
    static final char[] dfa_53 = DFA.unpackEncodedStringToUnsignedChars(dfa_53s);
    static final short[] dfa_54 = DFA.unpackEncodedString(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final short[][] dfa_56 = unpackEncodedStringArray(dfa_56s);

    class DFA96 extends DFA {

        public DFA96(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 96;
            this.eot = dfa_46;
            this.eof = dfa_46;
            this.min = dfa_52;
            this.max = dfa_53;
            this.accept = dfa_54;
            this.special = dfa_55;
            this.transition = dfa_56;
        }
        public String getDescription() {
            return "5011:3: ( ( ( 'species' | 'image' | RULE_ID )=> ( (lv_expr_1_0= ruleTypeRef ) ) ) | ( (lv_expr_2_0= ruleExpression ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA96_1 = input.LA(1);

                         
                        int index96_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index96_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA96_2 = input.LA(1);

                         
                        int index96_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index96_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA96_3 = input.LA(1);

                         
                        int index96_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalMyDsl()) ) {s = 99;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index96_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 96, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_57s = "\1\4\67\0\34\uffff\17\0\1\uffff";
    static final String dfa_58s = "\1\u009a\67\0\34\uffff\17\0\1\uffff";
    static final String dfa_59s = "\70\uffff\34\1\17\uffff\1\2";
    static final String dfa_60s = "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\34\uffff\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\uffff}>";
    static final String[] dfa_61s = {
            "\1\66\1\124\1\125\1\126\1\127\1\130\12\uffff\1\137\3\uffff\1\132\1\uffff\1\70\3\uffff\1\121\7\uffff\1\103\1\101\1\uffff\1\131\3\uffff\1\133\4\uffff\1\65\1\uffff\1\1\1\2\1\3\1\67\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\4\1\5\1\11\1\12\1\13\1\14\1\6\1\7\1\10\7\uffff\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\102\1\104\1\105\1\106\1\107\1\110\1\111\1\112\1\113\1\114\1\115\1\116\1\117\1\120\1\122\1\123\12\uffff\1\136\3\uffff\1\134\1\135\1\140\1\141\1\142",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };
    static final char[] dfa_57 = DFA.unpackEncodedStringToUnsignedChars(dfa_57s);
    static final char[] dfa_58 = DFA.unpackEncodedStringToUnsignedChars(dfa_58s);
    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final short[] dfa_60 = DFA.unpackEncodedString(dfa_60s);
    static final short[][] dfa_61 = unpackEncodedStringArray(dfa_61s);

    class DFA99 extends DFA {

        public DFA99(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 99;
            this.eot = dfa_46;
            this.eof = dfa_46;
            this.min = dfa_57;
            this.max = dfa_58;
            this.accept = dfa_59;
            this.special = dfa_60;
            this.transition = dfa_61;
        }
        public String getDescription() {
            return "5264:2: ( ( ( ( ( ( ( ruleValid_ID ) ) '::' ) | ( ( ( ( ruleDefinitionFacetKey | ruleTypeFacetKey | ruleSpecialFacetKey | ruleActionFacetKey | ruleVarFacetKey ) ) ) ':' ) ) )=>this_ArgumentPair_0= ruleArgumentPair ) | this_Pair_1= rulePair )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA99_0 = input.LA(1);

                         
                        int index99_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA99_0==52) ) {s = 1;}

                        else if ( (LA99_0==53) ) {s = 2;}

                        else if ( (LA99_0==54) ) {s = 3;}

                        else if ( (LA99_0==96) ) {s = 4;}

                        else if ( (LA99_0==97) ) {s = 5;}

                        else if ( (LA99_0==102) ) {s = 6;}

                        else if ( (LA99_0==103) ) {s = 7;}

                        else if ( (LA99_0==104) ) {s = 8;}

                        else if ( (LA99_0==98) ) {s = 9;}

                        else if ( (LA99_0==99) ) {s = 10;}

                        else if ( (LA99_0==100) ) {s = 11;}

                        else if ( (LA99_0==101) ) {s = 12;}

                        else if ( (LA99_0==82) ) {s = 13;}

                        else if ( (LA99_0==83) ) {s = 14;}

                        else if ( (LA99_0==84) ) {s = 15;}

                        else if ( (LA99_0==85) ) {s = 16;}

                        else if ( (LA99_0==86) ) {s = 17;}

                        else if ( (LA99_0==87) ) {s = 18;}

                        else if ( (LA99_0==88) ) {s = 19;}

                        else if ( (LA99_0==89) ) {s = 20;}

                        else if ( (LA99_0==90) ) {s = 21;}

                        else if ( (LA99_0==91) ) {s = 22;}

                        else if ( (LA99_0==92) ) {s = 23;}

                        else if ( (LA99_0==93) ) {s = 24;}

                        else if ( (LA99_0==94) ) {s = 25;}

                        else if ( (LA99_0==95) ) {s = 26;}

                        else if ( (LA99_0==56) ) {s = 27;}

                        else if ( (LA99_0==57) ) {s = 28;}

                        else if ( (LA99_0==58) ) {s = 29;}

                        else if ( (LA99_0==59) ) {s = 30;}

                        else if ( (LA99_0==60) ) {s = 31;}

                        else if ( (LA99_0==61) ) {s = 32;}

                        else if ( (LA99_0==62) ) {s = 33;}

                        else if ( (LA99_0==63) ) {s = 34;}

                        else if ( (LA99_0==64) ) {s = 35;}

                        else if ( (LA99_0==65) ) {s = 36;}

                        else if ( (LA99_0==66) ) {s = 37;}

                        else if ( (LA99_0==67) ) {s = 38;}

                        else if ( (LA99_0==68) ) {s = 39;}

                        else if ( (LA99_0==69) ) {s = 40;}

                        else if ( (LA99_0==70) ) {s = 41;}

                        else if ( (LA99_0==71) ) {s = 42;}

                        else if ( (LA99_0==72) ) {s = 43;}

                        else if ( (LA99_0==73) ) {s = 44;}

                        else if ( (LA99_0==74) ) {s = 45;}

                        else if ( (LA99_0==75) ) {s = 46;}

                        else if ( (LA99_0==76) ) {s = 47;}

                        else if ( (LA99_0==77) ) {s = 48;}

                        else if ( (LA99_0==78) ) {s = 49;}

                        else if ( (LA99_0==79) ) {s = 50;}

                        else if ( (LA99_0==80) ) {s = 51;}

                        else if ( (LA99_0==81) ) {s = 52;}

                        else if ( (LA99_0==50) ) {s = 53;}

                        else if ( (LA99_0==RULE_ID) ) {s = 54;}

                        else if ( (LA99_0==55) ) {s = 55;}

                        else if ( (LA99_0==26) && (synpred12_InternalMyDsl())) {s = 56;}

                        else if ( (LA99_0==112) && (synpred12_InternalMyDsl())) {s = 57;}

                        else if ( (LA99_0==113) && (synpred12_InternalMyDsl())) {s = 58;}

                        else if ( (LA99_0==114) && (synpred12_InternalMyDsl())) {s = 59;}

                        else if ( (LA99_0==115) && (synpred12_InternalMyDsl())) {s = 60;}

                        else if ( (LA99_0==116) && (synpred12_InternalMyDsl())) {s = 61;}

                        else if ( (LA99_0==117) && (synpred12_InternalMyDsl())) {s = 62;}

                        else if ( (LA99_0==118) && (synpred12_InternalMyDsl())) {s = 63;}

                        else if ( (LA99_0==119) && (synpred12_InternalMyDsl())) {s = 64;}

                        else if ( (LA99_0==39) && (synpred12_InternalMyDsl())) {s = 65;}

                        else if ( (LA99_0==120) && (synpred12_InternalMyDsl())) {s = 66;}

                        else if ( (LA99_0==38) && (synpred12_InternalMyDsl())) {s = 67;}

                        else if ( (LA99_0==121) && (synpred12_InternalMyDsl())) {s = 68;}

                        else if ( (LA99_0==122) && (synpred12_InternalMyDsl())) {s = 69;}

                        else if ( (LA99_0==123) && (synpred12_InternalMyDsl())) {s = 70;}

                        else if ( (LA99_0==124) && (synpred12_InternalMyDsl())) {s = 71;}

                        else if ( (LA99_0==125) && (synpred12_InternalMyDsl())) {s = 72;}

                        else if ( (LA99_0==126) && (synpred12_InternalMyDsl())) {s = 73;}

                        else if ( (LA99_0==127) && (synpred12_InternalMyDsl())) {s = 74;}

                        else if ( (LA99_0==128) && (synpred12_InternalMyDsl())) {s = 75;}

                        else if ( (LA99_0==129) && (synpred12_InternalMyDsl())) {s = 76;}

                        else if ( (LA99_0==130) && (synpred12_InternalMyDsl())) {s = 77;}

                        else if ( (LA99_0==131) && (synpred12_InternalMyDsl())) {s = 78;}

                        else if ( (LA99_0==132) && (synpred12_InternalMyDsl())) {s = 79;}

                        else if ( (LA99_0==133) && (synpred12_InternalMyDsl())) {s = 80;}

                        else if ( (LA99_0==30) && (synpred12_InternalMyDsl())) {s = 81;}

                        else if ( (LA99_0==134) && (synpred12_InternalMyDsl())) {s = 82;}

                        else if ( (LA99_0==135) && (synpred12_InternalMyDsl())) {s = 83;}

                        else if ( (LA99_0==RULE_STRING) ) {s = 84;}

                        else if ( (LA99_0==RULE_INTEGER) ) {s = 85;}

                        else if ( (LA99_0==RULE_DOUBLE) ) {s = 86;}

                        else if ( (LA99_0==RULE_BOOLEAN) ) {s = 87;}

                        else if ( (LA99_0==RULE_KEYWORD) ) {s = 88;}

                        else if ( (LA99_0==41) ) {s = 89;}

                        else if ( (LA99_0==24) ) {s = 90;}

                        else if ( (LA99_0==45) ) {s = 91;}

                        else if ( (LA99_0==150) ) {s = 92;}

                        else if ( (LA99_0==151) ) {s = 93;}

                        else if ( (LA99_0==146) ) {s = 94;}

                        else if ( (LA99_0==20) ) {s = 95;}

                        else if ( (LA99_0==152) ) {s = 96;}

                        else if ( (LA99_0==153) ) {s = 97;}

                        else if ( (LA99_0==154) ) {s = 98;}

                         
                        input.seek(index99_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA99_1 = input.LA(1);

                         
                        int index99_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA99_2 = input.LA(1);

                         
                        int index99_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA99_3 = input.LA(1);

                         
                        int index99_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA99_4 = input.LA(1);

                         
                        int index99_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA99_5 = input.LA(1);

                         
                        int index99_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA99_6 = input.LA(1);

                         
                        int index99_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA99_7 = input.LA(1);

                         
                        int index99_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA99_8 = input.LA(1);

                         
                        int index99_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA99_9 = input.LA(1);

                         
                        int index99_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA99_10 = input.LA(1);

                         
                        int index99_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_10);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA99_11 = input.LA(1);

                         
                        int index99_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_11);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA99_12 = input.LA(1);

                         
                        int index99_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_12);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA99_13 = input.LA(1);

                         
                        int index99_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_13);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA99_14 = input.LA(1);

                         
                        int index99_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_14);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA99_15 = input.LA(1);

                         
                        int index99_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_15);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA99_16 = input.LA(1);

                         
                        int index99_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_16);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA99_17 = input.LA(1);

                         
                        int index99_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_17);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA99_18 = input.LA(1);

                         
                        int index99_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_18);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA99_19 = input.LA(1);

                         
                        int index99_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_19);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA99_20 = input.LA(1);

                         
                        int index99_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_20);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA99_21 = input.LA(1);

                         
                        int index99_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_21);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA99_22 = input.LA(1);

                         
                        int index99_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_22);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA99_23 = input.LA(1);

                         
                        int index99_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_23);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA99_24 = input.LA(1);

                         
                        int index99_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_24);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA99_25 = input.LA(1);

                         
                        int index99_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_25);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA99_26 = input.LA(1);

                         
                        int index99_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_26);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA99_27 = input.LA(1);

                         
                        int index99_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_27);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA99_28 = input.LA(1);

                         
                        int index99_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_28);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA99_29 = input.LA(1);

                         
                        int index99_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_29);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA99_30 = input.LA(1);

                         
                        int index99_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_30);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA99_31 = input.LA(1);

                         
                        int index99_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_31);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA99_32 = input.LA(1);

                         
                        int index99_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_32);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA99_33 = input.LA(1);

                         
                        int index99_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_33);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA99_34 = input.LA(1);

                         
                        int index99_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_34);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA99_35 = input.LA(1);

                         
                        int index99_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_35);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA99_36 = input.LA(1);

                         
                        int index99_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_36);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA99_37 = input.LA(1);

                         
                        int index99_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_37);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA99_38 = input.LA(1);

                         
                        int index99_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_38);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA99_39 = input.LA(1);

                         
                        int index99_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_39);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA99_40 = input.LA(1);

                         
                        int index99_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_40);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA99_41 = input.LA(1);

                         
                        int index99_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_41);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA99_42 = input.LA(1);

                         
                        int index99_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_42);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA99_43 = input.LA(1);

                         
                        int index99_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_43);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA99_44 = input.LA(1);

                         
                        int index99_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_44);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA99_45 = input.LA(1);

                         
                        int index99_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_45);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA99_46 = input.LA(1);

                         
                        int index99_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_46);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA99_47 = input.LA(1);

                         
                        int index99_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_47);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA99_48 = input.LA(1);

                         
                        int index99_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_48);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA99_49 = input.LA(1);

                         
                        int index99_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_49);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA99_50 = input.LA(1);

                         
                        int index99_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_50);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA99_51 = input.LA(1);

                         
                        int index99_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_51);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA99_52 = input.LA(1);

                         
                        int index99_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_52);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA99_53 = input.LA(1);

                         
                        int index99_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_53);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA99_54 = input.LA(1);

                         
                        int index99_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_54);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA99_55 = input.LA(1);

                         
                        int index99_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_55);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA99_84 = input.LA(1);

                         
                        int index99_84 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_84);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA99_85 = input.LA(1);

                         
                        int index99_85 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_85);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA99_86 = input.LA(1);

                         
                        int index99_86 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_86);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA99_87 = input.LA(1);

                         
                        int index99_87 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_87);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA99_88 = input.LA(1);

                         
                        int index99_88 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_88);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA99_89 = input.LA(1);

                         
                        int index99_89 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_89);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA99_90 = input.LA(1);

                         
                        int index99_90 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_90);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA99_91 = input.LA(1);

                         
                        int index99_91 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_91);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA99_92 = input.LA(1);

                         
                        int index99_92 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_92);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA99_93 = input.LA(1);

                         
                        int index99_93 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_93);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA99_94 = input.LA(1);

                         
                        int index99_94 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_94);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA99_95 = input.LA(1);

                         
                        int index99_95 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_95);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA99_96 = input.LA(1);

                         
                        int index99_96 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_96);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA99_97 = input.LA(1);

                         
                        int index99_97 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_97);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA99_98 = input.LA(1);

                         
                        int index99_98 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred12_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 99;}

                         
                        input.seek(index99_98);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 99, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_62s = "\143\uffff";
    static final String dfa_63s = "\1\4\67\0\53\uffff";
    static final String dfa_64s = "\1\u009a\67\0\53\uffff";
    static final String dfa_65s = "\70\uffff\34\1\1\2\16\uffff";
    static final String dfa_66s = "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\53\uffff}>";
    static final String[] dfa_67s = {
            "\1\66\5\124\12\uffff\1\124\3\uffff\1\124\1\uffff\1\70\3\uffff\1\121\7\uffff\1\103\1\101\1\uffff\1\124\3\uffff\1\124\4\uffff\1\65\1\uffff\1\1\1\2\1\3\1\67\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\4\1\5\1\11\1\12\1\13\1\14\1\6\1\7\1\10\7\uffff\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\102\1\104\1\105\1\106\1\107\1\110\1\111\1\112\1\113\1\114\1\115\1\116\1\117\1\120\1\122\1\123\12\uffff\1\124\3\uffff\5\124",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final char[] dfa_63 = DFA.unpackEncodedStringToUnsignedChars(dfa_63s);
    static final char[] dfa_64 = DFA.unpackEncodedStringToUnsignedChars(dfa_64s);
    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final short[] dfa_66 = DFA.unpackEncodedString(dfa_66s);
    static final short[][] dfa_67 = unpackEncodedStringArray(dfa_67s);

    class DFA102 extends DFA {

        public DFA102(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 102;
            this.eot = dfa_62;
            this.eof = dfa_62;
            this.min = dfa_63;
            this.max = dfa_64;
            this.accept = dfa_65;
            this.special = dfa_66;
            this.transition = dfa_67;
        }
        public String getDescription() {
            return "5329:3: ( ( ( ( ( ( ruleValid_ID ) ) '::' ) | ( ( ( ( ruleDefinitionFacetKey | ruleTypeFacetKey | ruleSpecialFacetKey | ruleActionFacetKey | ruleVarFacetKey ) ) ) ':' ) ) )=> ( ( ( (lv_op_0_0= ruleValid_ID ) ) otherlv_1= '::' ) | ( ( ( (lv_op_2_1= ruleDefinitionFacetKey | lv_op_2_2= ruleTypeFacetKey | lv_op_2_3= ruleSpecialFacetKey | lv_op_2_4= ruleActionFacetKey | lv_op_2_5= ruleVarFacetKey ) ) ) otherlv_3= ':' ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA102_0 = input.LA(1);

                         
                        int index102_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA102_0==52) ) {s = 1;}

                        else if ( (LA102_0==53) ) {s = 2;}

                        else if ( (LA102_0==54) ) {s = 3;}

                        else if ( (LA102_0==96) ) {s = 4;}

                        else if ( (LA102_0==97) ) {s = 5;}

                        else if ( (LA102_0==102) ) {s = 6;}

                        else if ( (LA102_0==103) ) {s = 7;}

                        else if ( (LA102_0==104) ) {s = 8;}

                        else if ( (LA102_0==98) ) {s = 9;}

                        else if ( (LA102_0==99) ) {s = 10;}

                        else if ( (LA102_0==100) ) {s = 11;}

                        else if ( (LA102_0==101) ) {s = 12;}

                        else if ( (LA102_0==82) ) {s = 13;}

                        else if ( (LA102_0==83) ) {s = 14;}

                        else if ( (LA102_0==84) ) {s = 15;}

                        else if ( (LA102_0==85) ) {s = 16;}

                        else if ( (LA102_0==86) ) {s = 17;}

                        else if ( (LA102_0==87) ) {s = 18;}

                        else if ( (LA102_0==88) ) {s = 19;}

                        else if ( (LA102_0==89) ) {s = 20;}

                        else if ( (LA102_0==90) ) {s = 21;}

                        else if ( (LA102_0==91) ) {s = 22;}

                        else if ( (LA102_0==92) ) {s = 23;}

                        else if ( (LA102_0==93) ) {s = 24;}

                        else if ( (LA102_0==94) ) {s = 25;}

                        else if ( (LA102_0==95) ) {s = 26;}

                        else if ( (LA102_0==56) ) {s = 27;}

                        else if ( (LA102_0==57) ) {s = 28;}

                        else if ( (LA102_0==58) ) {s = 29;}

                        else if ( (LA102_0==59) ) {s = 30;}

                        else if ( (LA102_0==60) ) {s = 31;}

                        else if ( (LA102_0==61) ) {s = 32;}

                        else if ( (LA102_0==62) ) {s = 33;}

                        else if ( (LA102_0==63) ) {s = 34;}

                        else if ( (LA102_0==64) ) {s = 35;}

                        else if ( (LA102_0==65) ) {s = 36;}

                        else if ( (LA102_0==66) ) {s = 37;}

                        else if ( (LA102_0==67) ) {s = 38;}

                        else if ( (LA102_0==68) ) {s = 39;}

                        else if ( (LA102_0==69) ) {s = 40;}

                        else if ( (LA102_0==70) ) {s = 41;}

                        else if ( (LA102_0==71) ) {s = 42;}

                        else if ( (LA102_0==72) ) {s = 43;}

                        else if ( (LA102_0==73) ) {s = 44;}

                        else if ( (LA102_0==74) ) {s = 45;}

                        else if ( (LA102_0==75) ) {s = 46;}

                        else if ( (LA102_0==76) ) {s = 47;}

                        else if ( (LA102_0==77) ) {s = 48;}

                        else if ( (LA102_0==78) ) {s = 49;}

                        else if ( (LA102_0==79) ) {s = 50;}

                        else if ( (LA102_0==80) ) {s = 51;}

                        else if ( (LA102_0==81) ) {s = 52;}

                        else if ( (LA102_0==50) ) {s = 53;}

                        else if ( (LA102_0==RULE_ID) ) {s = 54;}

                        else if ( (LA102_0==55) ) {s = 55;}

                        else if ( (LA102_0==26) && (synpred13_InternalMyDsl())) {s = 56;}

                        else if ( (LA102_0==112) && (synpred13_InternalMyDsl())) {s = 57;}

                        else if ( (LA102_0==113) && (synpred13_InternalMyDsl())) {s = 58;}

                        else if ( (LA102_0==114) && (synpred13_InternalMyDsl())) {s = 59;}

                        else if ( (LA102_0==115) && (synpred13_InternalMyDsl())) {s = 60;}

                        else if ( (LA102_0==116) && (synpred13_InternalMyDsl())) {s = 61;}

                        else if ( (LA102_0==117) && (synpred13_InternalMyDsl())) {s = 62;}

                        else if ( (LA102_0==118) && (synpred13_InternalMyDsl())) {s = 63;}

                        else if ( (LA102_0==119) && (synpred13_InternalMyDsl())) {s = 64;}

                        else if ( (LA102_0==39) && (synpred13_InternalMyDsl())) {s = 65;}

                        else if ( (LA102_0==120) && (synpred13_InternalMyDsl())) {s = 66;}

                        else if ( (LA102_0==38) && (synpred13_InternalMyDsl())) {s = 67;}

                        else if ( (LA102_0==121) && (synpred13_InternalMyDsl())) {s = 68;}

                        else if ( (LA102_0==122) && (synpred13_InternalMyDsl())) {s = 69;}

                        else if ( (LA102_0==123) && (synpred13_InternalMyDsl())) {s = 70;}

                        else if ( (LA102_0==124) && (synpred13_InternalMyDsl())) {s = 71;}

                        else if ( (LA102_0==125) && (synpred13_InternalMyDsl())) {s = 72;}

                        else if ( (LA102_0==126) && (synpred13_InternalMyDsl())) {s = 73;}

                        else if ( (LA102_0==127) && (synpred13_InternalMyDsl())) {s = 74;}

                        else if ( (LA102_0==128) && (synpred13_InternalMyDsl())) {s = 75;}

                        else if ( (LA102_0==129) && (synpred13_InternalMyDsl())) {s = 76;}

                        else if ( (LA102_0==130) && (synpred13_InternalMyDsl())) {s = 77;}

                        else if ( (LA102_0==131) && (synpred13_InternalMyDsl())) {s = 78;}

                        else if ( (LA102_0==132) && (synpred13_InternalMyDsl())) {s = 79;}

                        else if ( (LA102_0==133) && (synpred13_InternalMyDsl())) {s = 80;}

                        else if ( (LA102_0==30) && (synpred13_InternalMyDsl())) {s = 81;}

                        else if ( (LA102_0==134) && (synpred13_InternalMyDsl())) {s = 82;}

                        else if ( (LA102_0==135) && (synpred13_InternalMyDsl())) {s = 83;}

                        else if ( ((LA102_0>=RULE_STRING && LA102_0<=RULE_KEYWORD)||LA102_0==20||LA102_0==24||LA102_0==41||LA102_0==45||LA102_0==146||(LA102_0>=150 && LA102_0<=154)) ) {s = 84;}

                         
                        input.seek(index102_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA102_1 = input.LA(1);

                         
                        int index102_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA102_2 = input.LA(1);

                         
                        int index102_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA102_3 = input.LA(1);

                         
                        int index102_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA102_4 = input.LA(1);

                         
                        int index102_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA102_5 = input.LA(1);

                         
                        int index102_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA102_6 = input.LA(1);

                         
                        int index102_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA102_7 = input.LA(1);

                         
                        int index102_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA102_8 = input.LA(1);

                         
                        int index102_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA102_9 = input.LA(1);

                         
                        int index102_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA102_10 = input.LA(1);

                         
                        int index102_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_10);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA102_11 = input.LA(1);

                         
                        int index102_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_11);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA102_12 = input.LA(1);

                         
                        int index102_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_12);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA102_13 = input.LA(1);

                         
                        int index102_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_13);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA102_14 = input.LA(1);

                         
                        int index102_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_14);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA102_15 = input.LA(1);

                         
                        int index102_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_15);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA102_16 = input.LA(1);

                         
                        int index102_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_16);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA102_17 = input.LA(1);

                         
                        int index102_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_17);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA102_18 = input.LA(1);

                         
                        int index102_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_18);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA102_19 = input.LA(1);

                         
                        int index102_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_19);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA102_20 = input.LA(1);

                         
                        int index102_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_20);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA102_21 = input.LA(1);

                         
                        int index102_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_21);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA102_22 = input.LA(1);

                         
                        int index102_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_22);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA102_23 = input.LA(1);

                         
                        int index102_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_23);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA102_24 = input.LA(1);

                         
                        int index102_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_24);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA102_25 = input.LA(1);

                         
                        int index102_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_25);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA102_26 = input.LA(1);

                         
                        int index102_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_26);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA102_27 = input.LA(1);

                         
                        int index102_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_27);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA102_28 = input.LA(1);

                         
                        int index102_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_28);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA102_29 = input.LA(1);

                         
                        int index102_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_29);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA102_30 = input.LA(1);

                         
                        int index102_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_30);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA102_31 = input.LA(1);

                         
                        int index102_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_31);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA102_32 = input.LA(1);

                         
                        int index102_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_32);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA102_33 = input.LA(1);

                         
                        int index102_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_33);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA102_34 = input.LA(1);

                         
                        int index102_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_34);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA102_35 = input.LA(1);

                         
                        int index102_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_35);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA102_36 = input.LA(1);

                         
                        int index102_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_36);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA102_37 = input.LA(1);

                         
                        int index102_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_37);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA102_38 = input.LA(1);

                         
                        int index102_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_38);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA102_39 = input.LA(1);

                         
                        int index102_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_39);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA102_40 = input.LA(1);

                         
                        int index102_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_40);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA102_41 = input.LA(1);

                         
                        int index102_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_41);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA102_42 = input.LA(1);

                         
                        int index102_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_42);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA102_43 = input.LA(1);

                         
                        int index102_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_43);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA102_44 = input.LA(1);

                         
                        int index102_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_44);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA102_45 = input.LA(1);

                         
                        int index102_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_45);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA102_46 = input.LA(1);

                         
                        int index102_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_46);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA102_47 = input.LA(1);

                         
                        int index102_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_47);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA102_48 = input.LA(1);

                         
                        int index102_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_48);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA102_49 = input.LA(1);

                         
                        int index102_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_49);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA102_50 = input.LA(1);

                         
                        int index102_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_50);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA102_51 = input.LA(1);

                         
                        int index102_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_51);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA102_52 = input.LA(1);

                         
                        int index102_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_52);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA102_53 = input.LA(1);

                         
                        int index102_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_53);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA102_54 = input.LA(1);

                         
                        int index102_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_54);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA102_55 = input.LA(1);

                         
                        int index102_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred13_InternalMyDsl()) ) {s = 83;}

                        else if ( (true) ) {s = 84;}

                         
                        input.seek(index102_55);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 102, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_68s = "\1\4\67\0\2\uffff";
    static final String dfa_69s = "\1\150\67\0\2\uffff";
    static final String dfa_70s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\2\uffff}>";
    static final String[] dfa_71s = {
            "\1\66\55\uffff\1\65\1\uffff\1\1\1\2\1\3\1\67\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\4\1\5\1\11\1\12\1\13\1\14\1\6\1\7\1\10",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_68 = DFA.unpackEncodedStringToUnsignedChars(dfa_68s);
    static final char[] dfa_69 = DFA.unpackEncodedStringToUnsignedChars(dfa_69s);
    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_70s);
    static final short[][] dfa_71 = unpackEncodedStringArray(dfa_71s);

    class DFA130 extends DFA {

        public DFA130(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 130;
            this.eot = dfa_25;
            this.eof = dfa_25;
            this.min = dfa_68;
            this.max = dfa_69;
            this.accept = dfa_28;
            this.special = dfa_70;
            this.transition = dfa_71;
        }
        public String getDescription() {
            return "6931:2: ( ( ( ruleFunction )=>this_Function_0= ruleFunction ) | this_VariableRef_1= ruleVariableRef )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA130_1 = input.LA(1);

                         
                        int index130_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA130_2 = input.LA(1);

                         
                        int index130_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA130_3 = input.LA(1);

                         
                        int index130_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA130_4 = input.LA(1);

                         
                        int index130_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA130_5 = input.LA(1);

                         
                        int index130_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA130_6 = input.LA(1);

                         
                        int index130_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA130_7 = input.LA(1);

                         
                        int index130_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA130_8 = input.LA(1);

                         
                        int index130_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA130_9 = input.LA(1);

                         
                        int index130_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA130_10 = input.LA(1);

                         
                        int index130_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA130_11 = input.LA(1);

                         
                        int index130_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA130_12 = input.LA(1);

                         
                        int index130_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA130_13 = input.LA(1);

                         
                        int index130_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA130_14 = input.LA(1);

                         
                        int index130_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA130_15 = input.LA(1);

                         
                        int index130_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA130_16 = input.LA(1);

                         
                        int index130_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA130_17 = input.LA(1);

                         
                        int index130_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA130_18 = input.LA(1);

                         
                        int index130_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA130_19 = input.LA(1);

                         
                        int index130_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA130_20 = input.LA(1);

                         
                        int index130_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA130_21 = input.LA(1);

                         
                        int index130_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA130_22 = input.LA(1);

                         
                        int index130_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA130_23 = input.LA(1);

                         
                        int index130_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA130_24 = input.LA(1);

                         
                        int index130_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA130_25 = input.LA(1);

                         
                        int index130_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA130_26 = input.LA(1);

                         
                        int index130_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA130_27 = input.LA(1);

                         
                        int index130_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA130_28 = input.LA(1);

                         
                        int index130_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA130_29 = input.LA(1);

                         
                        int index130_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA130_30 = input.LA(1);

                         
                        int index130_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA130_31 = input.LA(1);

                         
                        int index130_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_31);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA130_32 = input.LA(1);

                         
                        int index130_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_32);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA130_33 = input.LA(1);

                         
                        int index130_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_33);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA130_34 = input.LA(1);

                         
                        int index130_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_34);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA130_35 = input.LA(1);

                         
                        int index130_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_35);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA130_36 = input.LA(1);

                         
                        int index130_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_36);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA130_37 = input.LA(1);

                         
                        int index130_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_37);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA130_38 = input.LA(1);

                         
                        int index130_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_38);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA130_39 = input.LA(1);

                         
                        int index130_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_39);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA130_40 = input.LA(1);

                         
                        int index130_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_40);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA130_41 = input.LA(1);

                         
                        int index130_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_41);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA130_42 = input.LA(1);

                         
                        int index130_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_42);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA130_43 = input.LA(1);

                         
                        int index130_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_43);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA130_44 = input.LA(1);

                         
                        int index130_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_44);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA130_45 = input.LA(1);

                         
                        int index130_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_45);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA130_46 = input.LA(1);

                         
                        int index130_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_46);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA130_47 = input.LA(1);

                         
                        int index130_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_47);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA130_48 = input.LA(1);

                         
                        int index130_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_48);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA130_49 = input.LA(1);

                         
                        int index130_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_49);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA130_50 = input.LA(1);

                         
                        int index130_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_50);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA130_51 = input.LA(1);

                         
                        int index130_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_51);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA130_52 = input.LA(1);

                         
                        int index130_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_52);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA130_53 = input.LA(1);

                         
                        int index130_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_53);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA130_54 = input.LA(1);

                         
                        int index130_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_54);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA130_55 = input.LA(1);

                         
                        int index130_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalMyDsl()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index130_55);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 130, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_72s = "\127\uffff";
    static final String dfa_73s = "\1\uffff\67\124\37\uffff";
    static final String dfa_74s = "\101\4\1\50\22\4\2\uffff\1\4";
    static final String dfa_75s = "\1\u009a\67\u009b\11\u009a\1\50\22\u009a\2\uffff\1\u009a";
    static final String dfa_76s = "\124\uffff\1\1\1\2\1\uffff";
    static final String dfa_77s = "\127\uffff}>";
    static final String[] dfa_78s = {
            "\1\66\5\124\12\uffff\1\124\3\uffff\1\124\1\uffff\1\70\3\uffff\1\121\7\uffff\1\103\1\101\1\uffff\1\124\3\uffff\1\124\4\uffff\1\65\1\uffff\1\1\1\2\1\3\1\67\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\4\1\5\1\11\1\12\1\13\1\14\1\6\1\7\1\10\7\uffff\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\102\1\104\1\105\1\106\1\107\1\110\1\111\1\112\1\113\1\114\1\115\1\116\1\117\1\120\1\122\1\123\12\uffff\1\124\3\uffff\5\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\1\124\21\uffff\1\124\1\uffff\2\124\16\uffff\1\125\2\124\4\uffff\1\124\2\uffff\1\124\1\uffff\65\124\1\uffff\1\124\4\uffff\1\124\31\uffff\17\124\3\uffff\1\124",
            "\6\125\12\uffff\1\125\3\uffff\1\125\1\uffff\1\125\3\uffff\1\125\7\uffff\2\125\1\124\1\125\3\uffff\1\125\4\uffff\1\125\1\uffff\65\125\7\uffff\30\125\12\uffff\1\125\3\uffff\5\125",
            "\6\125\12\uffff\1\125\3\uffff\1\125\1\uffff\1\125\3\uffff\1\125\7\uffff\2\125\1\124\1\125\3\uffff\1\125\4\uffff\1\125\1\uffff\65\125\7\uffff\30\125\12\uffff\1\125\3\uffff\5\125",
            "\6\125\12\uffff\1\125\3\uffff\1\125\1\uffff\1\125\3\uffff\1\125\7\uffff\2\125\1\124\1\125\3\uffff\1\125\4\uffff\1\125\1\uffff\65\125\7\uffff\30\125\12\uffff\1\125\3\uffff\5\125",
            "\6\125\12\uffff\1\125\3\uffff\1\125\1\uffff\1\125\3\uffff\1\125\7\uffff\2\125\1\124\1\125\3\uffff\1\125\4\uffff\1\125\1\uffff\65\125\7\uffff\30\125\12\uffff\1\125\3\uffff\5\125",
            "\6\125\12\uffff\1\125\3\uffff\1\125\1\uffff\1\125\3\uffff\1\125\7\uffff\2\125\1\124\1\125\3\uffff\1\125\4\uffff\1\125\1\uffff\65\125\7\uffff\30\125\12\uffff\1\125\3\uffff\5\125",
            "\6\125\12\uffff\1\125\3\uffff\1\125\1\uffff\1\125\3\uffff\1\125\7\uffff\2\125\1\124\1\125\3\uffff\1\125\4\uffff\1\125\1\uffff\65\125\7\uffff\30\125\12\uffff\1\125\3\uffff\5\125",
            "\6\125\12\uffff\1\125\3\uffff\1\125\1\uffff\1\125\3\uffff\1\125\7\uffff\2\125\1\124\1\125\3\uffff\1\125\4\uffff\1\125\1\uffff\65\125\7\uffff\30\125\12\uffff\1\125\3\uffff\5\125",
            "\6\125\12\uffff\1\125\3\uffff\1\125\1\uffff\1\125\3\uffff\1\125\7\uffff\2\125\1\124\1\125\3\uffff\1\125\4\uffff\1\125\1\uffff\65\125\7\uffff\30\125\12\uffff\1\125\3\uffff\5\125",
            "\6\125\12\uffff\1\125\3\uffff\1\125\1\uffff\1\125\3\uffff\1\125\7\uffff\2\125\1\124\1\125\3\uffff\1\125\4\uffff\1\125\1\uffff\65\125\7\uffff\30\125\12\uffff\1\125\3\uffff\5\125",
            "\1\126",
            "\6\125\12\uffff\1\125\3\uffff\1\125\1\uffff\1\125\3\uffff\1\125\7\uffff\2\125\1\124\1\125\3\uffff\1\125\4\uffff\1\125\1\uffff\65\125\7\uffff\30\125\12\uffff\1\125\3\uffff\5\125",
            "\6\125\12\uffff\1\125\3\uffff\1\125\1\uffff\1\125\3\uffff\1\125\7\uffff\2\125\1\124\1\125\3\uffff\1\125\4\uffff\1\125\1\uffff\65\125\7\uffff\30\125\12\uffff\1\125\3\uffff\5\125",
            "\6\125\12\uffff\1\125\3\uffff\1\125\1\uffff\1\125\3\uffff\1\125\7\uffff\2\125\1\124\1\125\3\uffff\1\125\4\uffff\1\125\1\uffff\65\125\7\uffff\30\125\12\uffff\1\125\3\uffff\5\125",
            "\6\125\12\uffff\1\125\3\uffff\1\125\1\uffff\1\125\3\uffff\1\125\7\uffff\2\125\1\124\1\125\3\uffff\1\125\4\uffff\1\125\1\uffff\65\125\7\uffff\30\125\12\uffff\1\125\3\uffff\5\125",
            "\6\125\12\uffff\1\125\3\uffff\1\125\1\uffff\1\125\3\uffff\1\125\7\uffff\2\125\1\124\1\125\3\uffff\1\125\4\uffff\1\125\1\uffff\65\125\7\uffff\30\125\12\uffff\1\125\3\uffff\5\125",
            "\6\125\12\uffff\1\125\3\uffff\1\125\1\uffff\1\125\3\uffff\1\125\7\uffff\2\125\1\124\1\125\3\uffff\1\125\4\uffff\1\125\1\uffff\65\125\7\uffff\30\125\12\uffff\1\125\3\uffff\5\125",
            "\6\125\12\uffff\1\125\3\uffff\1\125\1\uffff\1\125\3\uffff\1\125\7\uffff\2\125\1\124\1\125\3\uffff\1\125\4\uffff\1\125\1\uffff\65\125\7\uffff\30\125\12\uffff\1\125\3\uffff\5\125",
            "\6\125\12\uffff\1\125\3\uffff\1\125\1\uffff\1\125\3\uffff\1\125\7\uffff\2\125\1\124\1\125\3\uffff\1\125\4\uffff\1\125\1\uffff\65\125\7\uffff\30\125\12\uffff\1\125\3\uffff\5\125",
            "\6\125\12\uffff\1\125\3\uffff\1\125\1\uffff\1\125\3\uffff\1\125\7\uffff\2\125\1\124\1\125\3\uffff\1\125\4\uffff\1\125\1\uffff\65\125\7\uffff\30\125\12\uffff\1\125\3\uffff\5\125",
            "\6\125\12\uffff\1\125\3\uffff\1\125\1\uffff\1\125\3\uffff\1\125\7\uffff\2\125\1\124\1\125\3\uffff\1\125\4\uffff\1\125\1\uffff\65\125\7\uffff\30\125\12\uffff\1\125\3\uffff\5\125",
            "\6\125\12\uffff\1\125\3\uffff\1\125\1\uffff\1\125\3\uffff\1\125\7\uffff\2\125\1\124\1\125\3\uffff\1\125\4\uffff\1\125\1\uffff\65\125\7\uffff\30\125\12\uffff\1\125\3\uffff\5\125",
            "\6\125\12\uffff\1\125\3\uffff\1\125\1\uffff\1\125\3\uffff\1\125\7\uffff\2\125\1\124\1\125\3\uffff\1\125\4\uffff\1\125\1\uffff\65\125\7\uffff\30\125\12\uffff\1\125\3\uffff\5\125",
            "\6\125\12\uffff\1\125\3\uffff\1\125\1\uffff\1\125\3\uffff\1\125\7\uffff\2\125\1\124\1\125\3\uffff\1\125\4\uffff\1\125\1\uffff\65\125\7\uffff\30\125\12\uffff\1\125\3\uffff\5\125",
            "\6\125\12\uffff\1\125\3\uffff\1\125\1\uffff\1\125\3\uffff\1\125\7\uffff\2\125\1\124\1\125\3\uffff\1\125\4\uffff\1\125\1\uffff\65\125\7\uffff\30\125\12\uffff\1\125\3\uffff\5\125",
            "\6\125\12\uffff\1\125\3\uffff\1\125\1\uffff\1\125\3\uffff\1\125\7\uffff\2\125\1\124\1\125\3\uffff\1\125\4\uffff\1\125\1\uffff\65\125\7\uffff\30\125\12\uffff\1\125\3\uffff\5\125",
            "\6\125\12\uffff\1\125\3\uffff\1\125\1\uffff\1\125\3\uffff\1\125\7\uffff\2\125\1\124\1\125\3\uffff\1\125\4\uffff\1\125\1\uffff\65\125\7\uffff\30\125\12\uffff\1\125\3\uffff\5\125",
            "\6\125\12\uffff\1\125\3\uffff\1\125\1\uffff\1\125\3\uffff\1\125\7\uffff\2\125\1\124\1\125\3\uffff\1\125\4\uffff\1\125\1\uffff\65\125\7\uffff\30\125\12\uffff\1\125\3\uffff\5\125",
            "\6\125\12\uffff\1\125\3\uffff\1\125\1\uffff\1\125\3\uffff\1\125\7\uffff\2\125\1\124\1\125\3\uffff\1\125\4\uffff\1\125\1\uffff\65\125\7\uffff\30\125\12\uffff\1\125\3\uffff\5\125",
            "",
            "",
            "\6\125\12\uffff\1\125\3\uffff\1\125\1\uffff\1\125\3\uffff\1\125\7\uffff\2\125\1\124\1\125\3\uffff\1\125\4\uffff\1\125\1\uffff\65\125\7\uffff\30\125\12\uffff\1\125\3\uffff\5\125"
    };

    static final short[] dfa_72 = DFA.unpackEncodedString(dfa_72s);
    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final char[] dfa_74 = DFA.unpackEncodedStringToUnsignedChars(dfa_74s);
    static final char[] dfa_75 = DFA.unpackEncodedStringToUnsignedChars(dfa_75s);
    static final short[] dfa_76 = DFA.unpackEncodedString(dfa_76s);
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final short[][] dfa_78 = unpackEncodedStringArray(dfa_78s);

    class DFA135 extends DFA {

        public DFA135(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 135;
            this.eot = dfa_72;
            this.eof = dfa_73;
            this.min = dfa_74;
            this.max = dfa_75;
            this.accept = dfa_76;
            this.special = dfa_77;
            this.transition = dfa_78;
        }
        public String getDescription() {
            return "7061:2: ( ( ( (lv_exprs_0_0= ruleExpression ) ) (otherlv_1= ',' ( (lv_exprs_2_0= ruleExpression ) ) )* ) | ( ( (lv_exprs_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_exprs_5_0= ruleParameter ) ) )* ) )";
        }
    }
    static final String dfa_79s = "\26\uffff";
    static final String dfa_80s = "\1\4\3\0\22\uffff";
    static final String dfa_81s = "\1\u00a0\3\0\22\uffff";
    static final String dfa_82s = "\4\uffff\12\1\1\2\7\uffff";
    static final String dfa_83s = "\1\0\1\1\1\2\1\3\22\uffff}>";
    static final String[] dfa_84s = {
            "\1\1\14\uffff\2\16\2\uffff\1\16\1\uffff\1\16\2\uffff\1\16\4\uffff\1\15\13\uffff\1\10\10\uffff\1\2\1\4\1\3\1\16\52\uffff\1\11\1\12\1\13\1\14\1\5\1\6\1\7\7\uffff\1\16\57\uffff\1\16",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_79 = DFA.unpackEncodedString(dfa_79s);
    static final char[] dfa_80 = DFA.unpackEncodedStringToUnsignedChars(dfa_80s);
    static final char[] dfa_81 = DFA.unpackEncodedStringToUnsignedChars(dfa_81s);
    static final short[] dfa_82 = DFA.unpackEncodedString(dfa_82s);
    static final short[] dfa_83 = DFA.unpackEncodedString(dfa_83s);
    static final short[][] dfa_84 = unpackEncodedStringArray(dfa_84s);

    class DFA144 extends DFA {

        public DFA144(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 144;
            this.eot = dfa_79;
            this.eof = dfa_79;
            this.min = dfa_80;
            this.max = dfa_81;
            this.accept = dfa_82;
            this.special = dfa_83;
            this.transition = dfa_84;
        }
        public String getDescription() {
            return "7753:2: ( ( ( ruleS_Declaration )=>this_S_Declaration_0= ruleS_Declaration ) | (this_Model_1= ruleModel | this_ArgumentDefinition_2= ruleArgumentDefinition | this_DefinitionFacet_3= ruleDefinitionFacet | this_VarFakeDefinition_4= ruleVarFakeDefinition | this_Import_5= ruleImport | this_S_Experiment_6= ruleS_Experiment ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA144_0 = input.LA(1);

                         
                        int index144_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA144_0==RULE_ID) ) {s = 1;}

                        else if ( (LA144_0==52) ) {s = 2;}

                        else if ( (LA144_0==54) ) {s = 3;}

                        else if ( (LA144_0==53) && (synpred16_InternalMyDsl())) {s = 4;}

                        else if ( (LA144_0==102) && (synpred16_InternalMyDsl())) {s = 5;}

                        else if ( (LA144_0==103) && (synpred16_InternalMyDsl())) {s = 6;}

                        else if ( (LA144_0==104) && (synpred16_InternalMyDsl())) {s = 7;}

                        else if ( (LA144_0==43) && (synpred16_InternalMyDsl())) {s = 8;}

                        else if ( (LA144_0==98) && (synpred16_InternalMyDsl())) {s = 9;}

                        else if ( (LA144_0==99) && (synpred16_InternalMyDsl())) {s = 10;}

                        else if ( (LA144_0==100) && (synpred16_InternalMyDsl())) {s = 11;}

                        else if ( (LA144_0==101) && (synpred16_InternalMyDsl())) {s = 12;}

                        else if ( (LA144_0==31) && (synpred16_InternalMyDsl())) {s = 13;}

                        else if ( ((LA144_0>=17 && LA144_0<=18)||LA144_0==21||LA144_0==23||LA144_0==26||LA144_0==55||LA144_0==112||LA144_0==160) ) {s = 14;}

                         
                        input.seek(index144_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA144_1 = input.LA(1);

                         
                        int index144_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalMyDsl()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index144_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA144_2 = input.LA(1);

                         
                        int index144_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalMyDsl()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index144_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA144_3 = input.LA(1);

                         
                        int index144_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalMyDsl()) ) {s = 13;}

                        else if ( (true) ) {s = 14;}

                         
                        input.seek(index144_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 144, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0xFFF422C0451003F0L,0xFFFF01FFFFFFFFFFL,0x0000000007C400FFL});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000860000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000820000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0xFFF4000020200010L,0x000001FFFFFFFFFFL});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0xFFF4000020000012L,0x000001FFFFFFFFFFL});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000180000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000400002L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0xFFF4000000000010L,0x000001FFFFFFFFFFL});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0xFFF422C0471003F0L,0xFFFF01FFFFFFFFFFL,0x0000000007C400FFL});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0xFFF4000004000030L,0x000001FFFFFFFFFFL});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0xFFF4000000000030L,0x000001FFFFFFFFFFL});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0xFFF420C05C010010L,0xFFFF01FFFFFFFFFFL,0x00000000000001FFL});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0xFFF420C054010010L,0xFFFF01FFFFFFFFFFL,0x00000000000001FFL});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000004000010L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0xFFF4000040000010L,0x000001FFFFFFFFFFL});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0xFFF420C044010010L,0xFFFF01FFFFFFFFFFL,0x00000000000001FFL});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0xFFF422C2451003F0L,0xFFFF01FFFFFFFFFFL,0x0000000007C400FFL});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000400000002L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000200100000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000001000000002L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0xFFF422C0551003F0L,0xFFFF01FFFFFFFFFFL,0x0000000007C400FFL});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0xFFF4208004000010L,0x000001FFFFFFFFFFL});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000208000000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0xFFF422C054010010L,0xFFFF01FFFFFFFFFFL,0x00000000000001FFL});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0050000000000010L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0xFFF4000004000010L,0x000001FFFFFFFFFFL});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0xFFF400C054010010L,0xFFFF01FFFFFFFFFFL,0x00000000000001FFL});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000000010000L,0x00007E0000000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000004000010000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0xFFF4400000000010L,0x000001FFFFFFFFFFL});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0xFFF5000000000010L,0x000001FFFFFFFFFFL});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0xFFFE7AE9C51003F0L,0xFFFF01FFFFFFFFFFL,0x0000000007C400FFL});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000002L,0x0000800000000000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000010002L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000400000000000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0xFFF4200000000010L,0x000001FFFFFFFFFFL});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0050020000000010L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000800000000002L,0x0000040000000000L,0x000000000001E000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000060000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000180000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0xFFF4000000000012L,0x000001FFFFFFFFFFL});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000C00000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000001000002L,0x0000000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000400000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000020000000000L,0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0xFFF426C0451003F0L,0xFFFF01FFFFFFFFFFL,0x0000000007C400FFL});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000000L,0x0000840000000000L});

}