<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<templates>
<template 	id="Global"
			name="global"
			context="msi.gama.lang.gaml.Gaml.Model"
			description="define the global section"
			autoinsert="true"
			deleted="false"
			enabled="true"
>global {
	${cursor}
}</template>
<template 	id="Species"
			name="species"
			context="msi.gama.lang.gaml.Gaml.Model"
			description="define a species"
			autoinsert="true"
			deleted="false"
			enabled="true"
>species ${name} skills:[${skill_list}]{
${cursor}
}</template>
<template 	id="Species"
			name="grid"
			context="msi.gama.lang.gaml.Gaml.Model"
			description="define a grid"
			autoinsert="true"
			deleted="false"
			enabled="true"
>grid ${name} width:${grid_w} height:${grid_h} {
${cursor}
}</template>
<template 	id="Experiment.Gui"
			name="gui_experiment"
			context="msi.gama.lang.gaml.Gaml.Model"
			description="Define a new experiment with a graphical user interface"
			autoinsert="true"
			deleted="false"
			enabled="true"
>experiment ${name} type: gui {

	${cursor}
	// Define parameters here if necessary
	// parameter "My parameter" category: "My parameters" var: one_global_attribute;
	
	// Define attributes, actions, a init section and behaviors if necessary
	// init { }
	
	
	output {
	// Define inspectors, browsers and displays here
	
	// inspect one_or_several_agents;
	//
	// display "My display" { 
	//		species one_species;
	//		species another_species;
	// 		grid a_grid;
	// 		...
	// }

	}
}</template>
<template 	id="Experiment.Batch"
			name="batch_experiment_with_display"
			context="msi.gama.lang.gaml.Gaml.Model"
			description="Define a batch experiment with a permanent user interface"
			autoinsert="true"
			deleted="false"
			enabled="true"
>experiment ${name} type: batch repeat: ${an_int} keep_seed: ${a_bool} until: ${a_condition} {	
	${cursor}
	// Define parameters to explore here if necessary
	// parameter "My parameter" category: "My parameters" var: one_global_attribute;
	// Define a method of exploration
	// method exploration;
	// Define attributes, actions, a init section and behaviors if necessary
	// init { }
	
	
	permanent {
	// Define inspectors, browsers and displays here
	// These will remain open during all the simulations runs

	}
}</template>
<template 	id="Experiment.Batch"
			name="batch_experiment"
			context="msi.gama.lang.gaml.Gaml.Model"
			description="Define a batch experiment with no user interface"
			autoinsert="true"
			deleted="false"
			enabled="true"
>experiment ${name} type: batch repeat: ${an_int} keep_seed: ${a_bool} until: ${a_condition} {	
	${cursor}
	// Define parameters to explore here if necessary
	// parameter "My parameter" category: "My parameters" var: one_global_attribute;
	// Define a method of exploration
	// method exploration;
	// Define attributes, actions, a init section and behaviors if necessary
	// init { }

}</template>
<template 	id="Definition.Attribute"
			name="var"
			context="msi.gama.lang.gaml.Gaml.Model"
			description="define a variable"
			autoinsert="true"
			deleted="false"
			enabled="true"
>${type} ${var_name} &lt;- ${expr} ;</template>
<template 	id="Definition.Attribute"
			name="const"
			context="msi.gama.lang.gaml.Gaml.Model"
			description="define a constant"
			autoinsert="true"
			deleted="false"
			enabled="true"
>${type} ${var_name} &lt;- ${expr} const: true;</template>
<template 	id="Statement.Do"
			name="do"
			context="msi.gama.lang.gaml.Gaml.Model"
			description="do action w/o arguments"
			autoinsert="true"
			deleted="false"
			enabled="true"
>do ${action_name}() ;</template>

<template 	id="Statement.Do"
			name="do"
			context="msi.gama.lang.gaml.Gaml.Model"
			description="do action with one argument"
			autoinsert="true"
			deleted="false"
			enabled="true"
>do ${action_name}(${arg_name}: ${arg_value});</template>

<template 	id="Statement.If"
			name="if"
			context="msi.gama.lang.gaml.Gaml.Model"
			description="if w/o else"
			autoinsert="true"
			deleted="false"
			enabled="true"
>if ${bool_expr} {
${cursor}
}</template>

<template 	id="Statement.If"
			name="if-else"
			context="msi.gama.lang.gaml.Gaml.Model"
			description="if/else statement"
			autoinsert="true"
			deleted="false"
			enabled="true"
>if ${bool_expr} {
	${cursor}
} 	else {

}</template>

<template 	id="Statement.Loop"
			name="loop-times"
			context="msi.gama.lang.gaml.Gaml.Model"
			description="loop a defined number of times"
			autoinsert="true"
			deleted="false"
			enabled="true"
>loop times: ${int_expr} {
	${cursor}
}</template>

<template 	id="Statement.Loop"
			name="loop-while"
			context="msi.gama.lang.gaml.Gaml.Model"
			description="loop-while statement"
			autoinsert="true"
			deleted="false"
			enabled="true"
>loop while: ${bool_expr} {
	${cursor}
}</template>

<template 	id="Statement.Loop"
			name="loop-over"
			context="msi.gama.lang.gaml.Gaml.Model"
			description="loop-over statement"
			autoinsert="true"
			deleted="false"
			enabled="true"
>loop ${a_temp_var} over: ${list_expr} {
	${cursor}
}</template>

<template 	id="Statement.Loop"
			name="loop-from-to"
			context="msi.gama.lang.gaml.Gaml.Model"
			description="loop-from-to statement"
			autoinsert="true"
			deleted="false"
			enabled="true"
>loop ${a_temp_var} from: ${int_expr1} to: ${int_expr2) {
	${cursor}
}</template>
<template 	id="Statement.Loop"
			name="loop-from-to-step"
			context="msi.gama.lang.gaml.Gaml.Model"
			description="loop-from-to-step statement"
			autoinsert="true"
			deleted="false"
			enabled="true"
>loop ${a_temp_var} from: ${int_expr1} to: ${int_expr2) step: ${int_expr3} {
	${cursor}
}</template>
<template 	id="Statement.Create"
			name="create"
			context="msi.gama.lang.gaml.Gaml.Model"
			description="create agents"
			autoinsert="true"
			deleted="false"
			enabled="true"
>create ${species_name} number: ${int_expr} ;</template>

<template 	id="Statement.Create"
			name="create"
			context="msi.gama.lang.gaml.Gaml.Model"
			description="create agents (and return the result)"
			autoinsert="true"
			deleted="false"
			enabled="true"
>create ${species_name} number: ${int_expr} returns: ${a_temp_var} ;</template>
<template 	id="Statement.Create"
			name="create"
			context="msi.gama.lang.gaml.Gaml.Model"
			description="create agents from a shape file"
			autoinsert="true"
			deleted="false"
			enabled="true"
>create ${species_name} from: shape_file(${file_name}) returns: ${a_temp_var} ;</template>
<template 	id="Statement.Set"
			name="set"
			context="msi.gama.lang.gaml.Gaml.Model"
			description="assign a value to a variable"
			autoinsert="true"
			deleted="false"
			enabled="true"
>${var_name} &lt;- ${expr} ;</template>

<template 	id="Statement.Let"
			name="let"
			context="msi.gama.lang.gaml.Gaml.Model"
			description="define a temporary variable"
			autoinsert="true"
			deleted="false"
			enabled="true"
>${type} ${a_temp_var} &lt; ${expr} ;</template>

<template 	id="Statement.Ask"
			name="ask"
			context="msi.gama.lang.gaml.Gaml.Model"
			description="ask statement"
			autoinsert="true"
			deleted="false"
			enabled="true"
>ask ${receiver_agents} {
	${cursor}
}</template>

<template 	id="Statement.Ask"
			name="ask"
			context="msi.gama.lang.gaml.Gaml.Model"
			description="ask statement (with casting)"
			autoinsert="true"
			deleted="false"
			enabled="true"
>ask ${receiver_agents} as: ${species_expr} {
	${cursor}
}</template>


</templates>